package org.opentest4j;

public class AssertionFailedError extends AssertionError {

    /* renamed from: b  reason: collision with root package name */
    public static final /* synthetic */ int f63302b = 0;
    private static final long serialVersionUID = 1;
    private final ValueWrapper actual;
    private final ValueWrapper expected;

    public AssertionFailedError() {
        this((String) null);
    }

    public ValueWrapper getActual() {
        return this.actual;
    }

    public ValueWrapper getExpected() {
        return this.expected;
    }

    public boolean isActualDefined() {
        return this.actual != null;
    }

    public boolean isExpectedDefined() {
        return this.expected != null;
    }

    public String toString() {
        String name2 = getClass().getName();
        String localizedMessage = getLocalizedMessage();
        if ("".equals(localizedMessage)) {
            return name2;
        }
        return name2 + ": " + localizedMessage;
    }

    public AssertionFailedError(String str) {
        this(str, (Throwable) null);
    }

    public AssertionFailedError(String str, Object obj, Object obj2) {
        this(str, obj, obj2, (Throwable) null);
    }

    public AssertionFailedError(String str, Throwable th2) {
        this(str, (ValueWrapper) null, (ValueWrapper) null, th2);
    }

    public AssertionFailedError(String str, Object obj, Object obj2, Throwable th2) {
        this(str, ValueWrapper.create(obj), ValueWrapper.create(obj2), th2);
    }

    /* JADX WARNING: Illegal instructions before constructor call */
    /* Code decompiled incorrectly, please refer to instructions dump. */
    private AssertionFailedError(java.lang.String r2, org.opentest4j.ValueWrapper r3, org.opentest4j.ValueWrapper r4, java.lang.Throwable r5) {
        /*
            r1 = this;
            if (r2 == 0) goto L_0x000c
            java.lang.String r0 = r2.trim()
            int r0 = r0.length()
            if (r0 != 0) goto L_0x000e
        L_0x000c:
            java.lang.String r2 = ""
        L_0x000e:
            r1.<init>(r2)
            r1.expected = r3
            r1.actual = r4
            r1.initCause(r5)
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: org.opentest4j.AssertionFailedError.<init>(java.lang.String, org.opentest4j.ValueWrapper, org.opentest4j.ValueWrapper, java.lang.Throwable):void");
    }
}
