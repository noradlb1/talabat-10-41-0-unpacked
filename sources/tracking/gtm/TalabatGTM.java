package tracking.gtm;

import JsonModels.MenuItemRM;
import JsonModels.MenuItemsResponseModel;
import JsonModels.PolygonEvents;
import JsonModels.parser.UniversalGson;
import android.content.Context;
import android.content.SharedPreferences;
import android.os.Build;
import android.os.Bundle;
import android.os.Parcelable;
import android.util.Log;
import androidx.annotation.VisibleForTesting;
import buisnessmodels.Cart;
import buisnessmodels.Customer;
import com.adjust.sdk.AdjustAttribution;
import com.adjust.sdk.Constants;
import com.facebook.AccessToken;
import com.facebook.internal.NativeProtocol;
import com.google.android.gms.maps.model.LatLng;
import com.google.firebase.analytics.FirebaseAnalytics;
import com.google.firebase.remoteconfig.RemoteConfigConstants;
import com.google.gson.Gson;
import com.huawei.hms.flutter.map.constants.Param;
import com.instabug.library.core.eventbus.coreeventbus.SDKCoreEvent;
import com.newrelic.agent.android.instrumentation.GsonInstrumentation;
import com.newrelic.agent.android.instrumentation.Instrumented;
import com.talabat.core.fwf.data.FunWithFlags;
import com.talabat.core.network.midas.MidasHttpInterceptorKt;
import com.talabat.core.tracking.common.events.ShopDetailsLoadedEvent;
import com.talabat.core.tracking.data.constant.ConstantsKt;
import com.talabat.darkstores.data.tracking.ProductTrackingProvider;
import com.talabat.darkstores.data.tracking.SearchTracker;
import com.talabat.darkstores.data.tracking.StoreInfoTrackingProvider;
import com.talabat.darkstores.data.tracking.fees.FeeTrackingConstantsKt;
import com.talabat.domain.address.Address;
import com.talabat.feature.bnplcore.domain.model.BnplNavigationOptionLoadedEventKt;
import com.talabat.feature.pickup.data.events.ClearFiltersClicked;
import com.talabat.feature.pickup.data.events.ShopListLoadedEvent;
import com.talabat.feature.pickup.data.events.ShopListUpdatedEvent;
import com.talabat.feature.pickup.data.events.valuePropBanner.ValuePropBannerClicked;
import com.talabat.feature.pickup.data.events.valuePropBanner.ValuePropBannerShown;
import com.talabat.gem.adapters.analytics.GemFloatingShownEvent;
import com.talabat.gem.adapters.analytics.GemLightboxShownEvent;
import com.talabat.growth.features.loyalty.BurnOptionDetailsNavigator;
import com.talabat.helpers.GlobalConstants;
import com.talabat.helpers.GlobalDataModel;
import com.talabat.helpers.LoggedInHelper;
import com.talabat.helpers.TalabatUtils;
import com.talabat.lib.Integration;
import com.talabat.observability.ObservabilityManager;
import com.talabat.observability.performance.PerformanceTracker;
import com.talabat.restaurants.v2.domain.vendors.GetInlineAdsUseCaseKt;
import com.talabat.talabatcommon.feature.vouchers.loyalty.tracking.GrowthTrackerConstants;
import com.talabat.talabatcore.application.BaseApplication;
import com.talabat.talabatcore.extensions.StringBuilderKt;
import com.talabat.userandlocation.customerinfo.data.local.impl.CustomerInfoLocalDataSourceImpl;
import com.talabat.wallet.bnplmanager.domain.tracking.event.BnplFakeTestSubmissionEvent;
import com.talabat.wallet.bnplmanager.domain.tracking.event.BnplFakeTestSubmissionEventKt;
import com.talabat.wallet.bnplmanager.domain.tracking.event.BnplOrderPaymentFailureEvent;
import com.talabat.wallet.bnplmanager.domain.tracking.event.BnplOrderPaymentFailureEventKt;
import com.talabat.wallet.bnplmanager.domain.tracking.event.BnplValidationErrorEvent;
import com.talabat.wallet.bnplmanager.domain.tracking.event.PaymentMethodChangedEvent;
import com.talabat.wallet.bnplmanager.domain.tracking.event.PaymentMethodChangedEventKt;
import com.talabat.wallet.bnplmanager.domain.tracking.event.PlaceFakeOrderEvent;
import com.talabat.wallet.ui.tracking.event.WalletTopUpCreditCardSelectionEventKt;
import com.visa.checkout.PurchaseInfo;
import datamodels.CartMenuItem;
import datamodels.Country;
import datamodels.Coupon;
import datamodels.CustomerInfo;
import datamodels.ImpressionProperties;
import datamodels.MenuItem;
import datamodels.MenuSection;
import datamodels.MostRecentOrderList;
import datamodels.Promotion;
import datamodels.QuickOrderInfo;
import datamodels.QuickRestaurant;
import datamodels.Restaurant;
import datamodels.analyticstrackermodels.AddressAnalyticsTracker;
import j$.time.ZonedDateTime;
import j$.time.format.DateTimeFormatter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import kotlin.Deprecated;
import kotlin.Metadata;
import kotlin.Pair;
import kotlin.Unit;
import kotlin.jvm.JvmOverloads;
import kotlin.jvm.functions.Function1;
import kotlin.jvm.internal.DefaultConstructorMarker;
import kotlin.jvm.internal.Intrinsics;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.junit.jupiter.api.IndicativeSentencesGeneration;
import tracking.Purchase;
import tracking.ScreenNames;
import tracking.ShopClickedEvent;
import tracking.TalabatAdjust;
import tracking.TalabatAppBoy;
import tracking.deeplink.DeepLinkParser;
import tracking.deeplink.DeepLinkResult;
import tracking.gtm.TalabatFirebase;
import tracking.gtm.TrackingUtils;
import tracking.models.ProductTracking;
import tracking.models.SwimlaneVendorTracking;
import tracking.models.pay.BNPLOrderPaymentFailureTrackingModel;

@Metadata(d1 = {"\u0000d\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0005\n\u0002\u0010\u0007\n\u0000\n\u0002\u0010\b\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0010\n\u0002\u0010 \n\u0002\b\u000f\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\b\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u000b\b\u0007\u0018\u0000 P2\u00020\u0001:\u0001PB\u0005¢\u0006\u0002\u0010\u0002J£\u0001\u0010\u0003\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\b\u0010\u0007\u001a\u0004\u0018\u00010\b2\b\u0010\t\u001a\u0004\u0018\u00010\b2\u0006\u0010\n\u001a\u00020\b2\u0006\u0010\u000b\u001a\u00020\b2\u0006\u0010\f\u001a\u00020\b2\u0006\u0010\r\u001a\u00020\u000e2\u0006\u0010\u000f\u001a\u00020\u00102\u0006\u0010\u0011\u001a\u00020\u00122\u0006\u0010\u0013\u001a\u00020\u00122\b\u0010\u0014\u001a\u0004\u0018\u00010\b2\u0006\u0010\u0015\u001a\u00020\b2\b\u0010\u0016\u001a\u0004\u0018\u00010\b2\b\u0010\u0017\u001a\u0004\u0018\u00010\u00102\u0006\u0010\u0018\u001a\u00020\u00102\b\u0010\u0019\u001a\u0004\u0018\u00010\b2\b\u0010\u001a\u001a\u0004\u0018\u00010\u0010H\u0016¢\u0006\u0002\u0010\u001bJ.\u0010\u001c\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\b\u0010\u0014\u001a\u0004\u0018\u00010\b2\b\u0010\u001d\u001a\u0004\u0018\u00010\b2\b\u0010\u001e\u001a\u0004\u0018\u00010\bH\u0016JB\u0010\u001f\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\b\u0010\u0007\u001a\u0004\u0018\u00010\b2\u0006\u0010 \u001a\u00020\b2\u0006\u0010!\u001a\u00020\b2\b\u0010\u001e\u001a\u0004\u0018\u00010\b2\f\u0010\"\u001a\b\u0012\u0004\u0012\u00020\b0#H\u0016J6\u0010$\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\b\u0010\u0007\u001a\u0004\u0018\u00010\b2\b\u0010\u0014\u001a\u0004\u0018\u00010\b2\u0006\u0010%\u001a\u00020\u00122\b\u0010\u001d\u001a\u0004\u0018\u00010\bH\u0016J4\u0010&\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\b\u0010\u0007\u001a\u0004\u0018\u00010\b2\u0006\u0010!\u001a\u00020\b2\b\u0010\u001e\u001a\u0004\u0018\u00010\b2\u0006\u0010'\u001a\u00020\u0010H\u0016J8\u0010(\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\b\u0010 \u001a\u0004\u0018\u00010\b2\b\u0010\u0014\u001a\u0004\u0018\u00010\b2\b\u0010\u001d\u001a\u0004\u0018\u00010\b2\b\u0010\u001e\u001a\u0004\u0018\u00010\bH\u0016J(\u0010)\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\u0006\u0010*\u001a\u00020\b2\u0006\u0010+\u001a\u00020\b2\u0006\u0010,\u001a\u00020\bH\u0016J \u0010-\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\u0006\u0010.\u001a\u00020\u00122\u0006\u0010/\u001a\u00020\u0012H\u0016J \u00100\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\u0006\u0010*\u001a\u00020\b2\u0006\u0010+\u001a\u00020\bH\u0016J\u0018\u00101\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\u0006\u00102\u001a\u000203H\u0016J\u0018\u00104\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\u0006\u0010\u0014\u001a\u00020\bH\u0016J8\u00105\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\u0006\u00106\u001a\u0002072\u0006\u00108\u001a\u00020\b2\u0006\u00109\u001a\u00020\u00122\u0006\u0010:\u001a\u00020\u00122\u0006\u0010;\u001a\u00020\u0012H\u0016J \u0010<\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\u0006\u0010=\u001a\u00020\b2\u0006\u0010\u0014\u001a\u00020\bH\u0016Jb\u0010>\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\b\u0010?\u001a\u0004\u0018\u00010@2\u0006\u0010A\u001a\u00020\u00122\b\u0010B\u001a\u0004\u0018\u00010\b2\u001a\u0010C\u001a\u0016\u0012\u0004\u0012\u00020E\u0018\u00010Dj\n\u0012\u0004\u0012\u00020E\u0018\u0001`F2\u0006\u0010G\u001a\u00020\u00102\u0006\u0010H\u001a\u00020\u00102\b\u0010\u001d\u001a\u0004\u0018\u00010\bH\u0016JV\u0010I\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u00062\u0006\u0010,\u001a\u00020\b2\u0006\u0010J\u001a\u00020\b2\u0006\u0010\u0015\u001a\u00020\b2\u0006\u0010\u0014\u001a\u00020\b2\u0006\u0010 \u001a\u00020\b2\b\u0010K\u001a\u0004\u0018\u00010\b2\b\u0010L\u001a\u0004\u0018\u00010\b2\b\u0010M\u001a\u0004\u0018\u00010\bH\u0016J\u0018\u0010N\u001a\u00020\b*\u0004\u0018\u00010\b2\b\b\u0002\u0010O\u001a\u00020\bH\u0002¨\u0006Q"}, d2 = {"Ltracking/gtm/TalabatGTM;", "Ltracking/gtm/ITalabatGTM;", "()V", "onDarkstoresAddToCartClicked", "", "context", "Landroid/content/Context;", "extraRestaurant", "", "categoryId", "description", "sku", "name", "price", "", "quantity", "", "isFavorite", "", "isAdd", "screenName", "eventOrigin", "swimlaneTitle", "swimlaneLength", "ageVerificationRequired", "searchRequestId", "listPosition", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;FIZZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ILjava/lang/String;Ljava/lang/Integer;)V", "onDarkstoresSearchResultsClicked", "searchTerm", "requestId", "onDarkstoresSearchResultsLoaded", "screenType", "query", "productsSkus", "", "onDarkstoresShopDetailsLoaded", "emptyCart", "onSearchClosed", "itemCount", "onSearchErrorShown", "pushBNPLError", "errorCode", "errorDescription", "eventName", "pushBNPLFakeTestSubmitted", "isBNPLNotify", "isBNPLFeedback", "pushBNPLLoaded", "pushBNPLOrderPaymentFailureEvent", "failureTrackingModel", "Ltracking/models/pay/BNPLOrderPaymentFailureTrackingModel;", "pushBNPLPlaceFakeOrder", "pushBeginCheckoutEvent", "cart", "Lbuisnessmodels/Cart;", "defaultPaymentMethod", "isKNetFallbackShown", "isHideBNPLPaymentMethod", "isSavedCardsDeflection", "pushPaymentMethodChanged", "paymentMethod", "pushRestaurantView", "restaurant", "Ldatamodels/Restaurant;", "hasIcon", "menuSectionNamesForGA", "menuSections", "Ljava/util/ArrayList;", "Ldatamodels/MenuSection;", "Lkotlin/collections/ArrayList;", "countOfItemsWithImages", "itemsCount", "subscriptionVerificationEvent", "channel", "subscriptionType", "failReason", "mobileVerificationStatus", "orDefault", "default", "Companion", "com_talabat_talabatlib_talabatlib"}, k = 1, mv = {1, 6, 0}, xi = 48)
@Deprecated(message = "Please use the new core tracking library(TalabatTracker).")
public final class TalabatGTM implements ITalabatGTM {
    @NotNull
    public static final String COMPLETED = "completed";
    @NotNull
    public static final Companion Companion = new Companion((DefaultConstructorMarker) null);
    @NotNull
    public static final String FAILED = "failed";
    @NotNull
    public static final String NORMAL = "normal";
    @NotNull
    public static final String STARTED = "started";
    @NotNull
    public static final String SUCCEEDED = "succeeded";
    @NotNull
    public static final String VALUE_NOT_AVAILABLE = "N/A";
    /* access modifiers changed from: private */
    @NotNull
    public static ITalabatFirebase talabatFirebase = new TalabatFirebase();

    @Instrumented
    @Metadata(d1 = {"\u0000£\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0002\u0010\b\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u000b\n\u0002\b.\n\u0002\u0018\u0002\n\u0002\b\b\n\u0002\u0010\u0006\n\u0002\b \n\u0002\u0018\u0002\n\u0002\b#\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u000b\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u0007\n\u0002\b#\n\u0002\u0018\u0002\n\u0002\b\u0010\n\u0002\u0010%\n\u0002\b\u000b\n\u0002\u0018\u0002\n\u0002\b\u000b\n\u0002\u0018\u0002\n\u0002\b%\n\u0002\u0018\u0002\n\u0002\b\b\n\u0002\u0018\u0002\n\u0002\b\f\n\u0002\u0010!\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0003\b\u0001\n\u0002\u0018\u0002\n\u0002\b/\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b!\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0018\n\u0002\u0018\u0002\n\u0002\b\u0012\n\u0002\u0010$\n\u0002\b$\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\b\u0003\u0018\u00002\u00020\u0001B\u0007\b\u0002¢\u0006\u0002\u0010\u0002J\u0018\u0010\u0010\u001a\u00020\u00112\u0006\u0010\u0012\u001a\u00020\u00042\u0006\u0010\u0013\u001a\u00020\u0014H\u0002J\u0018\u0010\u0015\u001a\u00020\u00112\u0006\u0010\u0016\u001a\u00020\u00172\u0006\u0010\u0018\u001a\u00020\u0019H\u0002J6\u0010\u001a\u001a\u00020\u00112\u0006\u0010\u0016\u001a\u00020\u00172\u001a\u0010\u001b\u001a\u0016\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00020\u001e\u0012\u0004\u0012\u00020\u001f0\u001d\u0018\u00010\u001c2\b\u0010 \u001a\u0004\u0018\u00010\u0004H\u0007J\u0016\u0010!\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010\"\u001a\u00020\u001eJ)\u0010#\u001a\u00020\u00112\b\u0010$\u001a\u0004\u0018\u00010%2\b\u0010&\u001a\u0004\u0018\u00010%2\u0006\u0010\u0016\u001a\u00020\u0017H\u0007¢\u0006\u0002\u0010'J\"\u0010(\u001a\u00020\u00172\u0006\u0010)\u001a\u00020%2\u0006\u0010\u0016\u001a\u00020\u00172\b\b\u0002\u0010*\u001a\u00020\u0004H\u0002J$\u0010+\u001a\u00020\u00172\u0006\u0010\u0016\u001a\u00020\u00172\b\u0010,\u001a\u0004\u0018\u00010\u00042\b\u0010-\u001a\u0004\u0018\u00010\u0004H\u0002J$\u0010.\u001a\u00020\u00112\u0006\u0010\u0016\u001a\u00020\u00172\b\u0010 \u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fH\u0007J\u0016\u00100\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010\u0013\u001a\u00020\u0014J\u000e\u00101\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u0018\u00102\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u00103\u001a\u0004\u0018\u00010\u0004J\u0016\u00104\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010\u0013\u001a\u00020\u0014J\u0006\u00105\u001a\u00020\u0004J\u0006\u00106\u001a\u00020\u0004J\u0006\u00107\u001a\u00020\u0004J\u0006\u00108\u001a\u00020\u0004J\u000e\u00109\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J@\u0010:\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010;\u001a\u0004\u0018\u00010\u00042\b\u0010<\u001a\u0004\u0018\u00010\u00042\b\u0010=\u001a\u0004\u0018\u00010\u00042\b\u0010>\u001a\u0004\u0018\u00010\u00042\b\u0010?\u001a\u0004\u0018\u00010\u0004J\u000e\u0010@\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000e\u0010A\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000e\u0010B\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J \u0010C\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010D\u001a\u0004\u0018\u00010\u00042\u0006\u0010E\u001a\u00020\u001eJ\u0018\u0010F\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010G\u001a\u0004\u0018\u00010\u0004J\u0018\u0010H\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u000e\u0010I\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000e\u0010J\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u0018\u0010K\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010L\u001a\u0004\u0018\u00010\u0004J8\u0010M\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010N\u001a\u00020\u001e2\u0006\u0010O\u001a\u00020\u001e2\b\u0010/\u001a\u0004\u0018\u00010\u001f2\u0006\u0010P\u001a\u00020\u00042\u0006\u0010Q\u001a\u00020\u0004J\"\u0010R\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010S\u001a\u0004\u0018\u00010T2\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u0018\u0010U\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010V\u001a\u0004\u0018\u00010\u0004J\u0018\u0010W\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010X\u001a\u0004\u0018\u00010\u0004J\"\u0010Y\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Z\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u0004J(\u0010[\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010\\\u001a\u00020]2\u0006\u0010^\u001a\u00020]2\b\u0010V\u001a\u0004\u0018\u00010\u0004J\u001e\u0010_\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010`\u001a\u00020\u001e2\u0006\u0010a\u001a\u00020%J\u0018\u0010_\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010b\u001a\u0004\u0018\u00010\u0004J\u0018\u0010c\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010b\u001a\u0004\u0018\u00010\u0004J\u001e\u0010d\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010e\u001a\u00020\u00042\u0006\u0010f\u001a\u00020\u001fJ\u0018\u0010g\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010h\u001a\u0004\u0018\u00010TJ,\u0010i\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010j\u001a\u00020\u001e2\b\u0010k\u001a\u0004\u0018\u00010\u00042\b\u0010l\u001a\u0004\u0018\u00010\u0004H\u0002J<\u0010m\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010N\u001a\u00020\u001e2\b\u0010n\u001a\u0004\u0018\u00010\u00042\b\u0010o\u001a\u0004\u0018\u00010\u00042\u0006\u0010p\u001a\u00020\u001e2\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u000e\u0010q\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u0018\u0010r\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010s\u001a\u0004\u0018\u00010\u0004J(\u0010t\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010u\u001a\u00020\u001e2\u0006\u0010\"\u001a\u00020\u001e2\b\u0010/\u001a\u0004\u0018\u00010\u001fJZ\u0010v\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010w\u001a\u0004\u0018\u00010\u00042\b\u0010x\u001a\u0004\u0018\u00010\u00042\b\u0010y\u001a\u0004\u0018\u00010\u00042\b\u0010L\u001a\u0004\u0018\u00010\u00042\b\u0010z\u001a\u0004\u0018\u00010\u00042\b\u0010{\u001a\u0004\u0018\u00010\u00042\u0006\u0010|\u001a\u00020\u00042\u0006\u0010}\u001a\u00020~J\u000e\u0010\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019JQ\u0010\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010\u0001\u001a\u0004\u0018\u00010\u0004J \u0010\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u00103\u001a\u00020\u001e2\u0007\u0010\u0001\u001a\u00020%JD\u0010\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\u0007\u0010\u0001\u001a\u00020\u0004J\u001b\u0010\u0001\u001a\u00020\u00112\u0006\u0010\u0016\u001a\u00020\u00172\b\u0010P\u001a\u0004\u0018\u00010\u0004H\u0007J\t\u0010\u0001\u001a\u00020\u0004H\u0002J\t\u0010\u0001\u001a\u00020\u0004H\u0002J\u0007\u0010\u0001\u001a\u00020\u0004J\u000f\u0010\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u0011\u0010\u0001\u001a\u00020\u00172\u0006\u0010\u0018\u001a\u00020\u0019H\u0002J\u0007\u0010\u0001\u001a\u00020\u0004J\u0011\u0010\u0001\u001a\u00020\u00042\b\b\u0002\u0010\u0018\u001a\u00020\u0019J\u0007\u0010\u0001\u001a\u00020\u0004J\u0007\u0010\u0001\u001a\u00020\u0004J\t\u0010\u0001\u001a\u00020\u0004H\u0002J\u0014\u0010\u0001\u001a\u00020\u00042\t\u0010\u0001\u001a\u0004\u0018\u00010\u0004H\u0002J\u0011\u0010\u0001\u001a\u00020\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u0010\u0010\u0001\u001a\u00020\u00042\u0007\u0010\u0001\u001a\u00020\u001eJ\u0011\u0010\u0001\u001a\u00020\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u0014\u0010\u0001\u001a\u0004\u0018\u00010\u001f2\t\u0010 \u0001\u001a\u0004\u0018\u00010\u0004J\u001b\u0010¡\u0001\u001a\u0016\u0012\u0005\u0012\u00030£\u00010¢\u0001j\n\u0012\u0005\u0012\u00030£\u0001`¤\u0001J\u0014\u0010¥\u0001\u001a\u0005\u0018\u00010¦\u00012\u0006\u0010\u0018\u001a\u00020\u0019H\u0002J\u001a\u0010§\u0001\u001a\u00020\u00042\u0007\u0010¨\u0001\u001a\u00020\u001e2\b\u0010P\u001a\u0004\u0018\u00010\u0004J\t\u0010©\u0001\u001a\u00020\u0004H\u0002J\u0011\u0010ª\u0001\u001a\u00020\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\t\u0010«\u0001\u001a\u00020\u0004H\u0002J\u0012\u0010¬\u0001\u001a\u0004\u0018\u00010\u00042\u0007\u0010­\u0001\u001a\u00020\u001eJ(\u0010®\u0001\u001a\u00020\u00042\u001d\u0010¯\u0001\u001a\u0018\u0012\u0004\u0012\u00020\u001f\u0018\u00010¢\u0001j\u000b\u0012\u0004\u0012\u00020\u001f\u0018\u0001`¤\u0001H\u0007J+\u0010°\u0001\u001a\u0014\u0012\u0004\u0012\u00020\u00170¢\u0001j\t\u0012\u0004\u0012\u00020\u0017`¤\u00012\u000e\u0010±\u0001\u001a\t\u0012\u0005\u0012\u00030²\u00010\u001cH\u0007J\u0007\u0010³\u0001\u001a\u00020\u0004J\u0019\u0010´\u0001\u001a\u00020\u00042\n\u0010µ\u0001\u001a\u0005\u0018\u00010¶\u0001¢\u0006\u0003\u0010·\u0001J\t\u0010¸\u0001\u001a\u0004\u0018\u00010\u0004JE\u0010¹\u0001\u001a\u00020\u00172\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001f2\t\u0010º\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010»\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010¼\u0001\u001a\u0004\u0018\u00010\u00042\u0007\u0010½\u0001\u001a\u00020\u0004H\u0002J\u000f\u0010¾\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019JÀ\u0001\u0010¿\u0001\u001a\u00020\u00172\b\u0010P\u001a\u0004\u0018\u00010\u00042\b\u0010Q\u001a\u0004\u0018\u00010\u00042\t\u0010À\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Á\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Â\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ã\u0001\u001a\u0004\u0018\u00010\u00042\b\u0010E\u001a\u0004\u0018\u00010\u00042\b\u0010D\u001a\u0004\u0018\u00010\u00042\t\u0010Ä\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Å\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Æ\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ç\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010È\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010É\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ê\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ë\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ì\u0001\u001a\u0004\u0018\u00010\u0004H\u0002JÆ\u0001\u0010Í\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010P\u001a\u0004\u0018\u00010\u00042\b\u0010Q\u001a\u0004\u0018\u00010\u00042\t\u0010À\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Á\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Â\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ã\u0001\u001a\u0004\u0018\u00010\u00042\b\u0010E\u001a\u0004\u0018\u00010\u00042\b\u0010D\u001a\u0004\u0018\u00010\u00042\t\u0010Ä\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Å\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Æ\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ç\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010È\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010É\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ê\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ë\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ì\u0001\u001a\u0004\u0018\u00010\u0004JÆ\u0001\u0010Î\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010P\u001a\u0004\u0018\u00010\u00042\b\u0010Q\u001a\u0004\u0018\u00010\u00042\t\u0010À\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Á\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Â\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ã\u0001\u001a\u0004\u0018\u00010\u00042\b\u0010E\u001a\u0004\u0018\u00010\u00042\b\u0010D\u001a\u0004\u0018\u00010\u00042\t\u0010Ä\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Å\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Æ\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ç\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010È\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010É\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ê\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ë\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ì\u0001\u001a\u0004\u0018\u00010\u0004Je\u0010Ï\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Q\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010Ð\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ñ\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ò\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ó\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ô\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Õ\u0001\u001a\u0004\u0018\u00010\u0004J\u0019\u0010Ö\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010h\u001a\u0004\u0018\u00010TJ\u0012\u0010×\u0001\u001a\u00020%2\t\u0010\u0001\u001a\u0004\u0018\u00010\u0004J1\u0010Ø\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\n\u0010Ù\u0001\u001a\u0005\u0018\u00010Ú\u00012\t\u0010Û\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ü\u0001\u001a\u0004\u0018\u00010\u0004J1\u0010Ý\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\n\u0010Ù\u0001\u001a\u0005\u0018\u00010Ú\u00012\t\u0010Û\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010Ü\u0001\u001a\u0004\u0018\u00010\u0004JN\u0010Þ\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u001f\u0010ß\u0001\u001a\u001a\u0012\u0005\u0012\u00030Ú\u0001\u0018\u00010¢\u0001j\f\u0012\u0005\u0012\u00030Ú\u0001\u0018\u0001`¤\u00012\u0006\u0010\"\u001a\u00020\u001e2\t\u0010Ü\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010à\u0001\u001a\u0004\u0018\u00010\u0004JG\u0010á\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010k\u001a\u0004\u0018\u00010\u00042\b\u0010l\u001a\u0004\u0018\u00010\u00042\u0006\u0010j\u001a\u00020\u001e2\b\u0010Q\u001a\u0004\u0018\u00010\u00042\u0007\u0010â\u0001\u001a\u00020%2\u0007\u0010\u0001\u001a\u00020\u0004J\u0011\u0010ã\u0001\u001a\u00020\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u000f\u0010ä\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u0019\u0010å\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010V\u001a\u0004\u0018\u00010\u0004J\u0012\u0010æ\u0001\u001a\u000b ç\u0001*\u0004\u0018\u00010\u00040\u0004H\u0002J\u0019\u0010è\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010V\u001a\u0004\u0018\u00010\u0004J-\u0010é\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010\u0012\u001a\u00020\u00042\u0014\u0010ê\u0001\u001a\u000f\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u00010ë\u0001JD\u0010ì\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010í\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010î\u0001\u001a\u0004\u0018\u00010\u00042\u0007\u0010ï\u0001\u001a\u00020\u001e2\t\u0010ð\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010ñ\u0001\u001a\u0004\u0018\u00010\u0004J\u000f\u0010ò\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u0019\u0010ó\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010V\u001a\u0004\u0018\u00010\u0004J\u0019\u0010ô\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010V\u001a\u0004\u0018\u00010\u0004J0\u0010õ\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010V\u001a\u0004\u0018\u00010\u00042\n\u0010ö\u0001\u001a\u0005\u0018\u00010÷\u00012\t\u0010ø\u0001\u001a\u0004\u0018\u00010\u0004J\u000f\u0010ù\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010ú\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019JH\u0010û\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010S\u001a\u0004\u0018\u00010T2\b\u0010/\u001a\u0004\u0018\u00010\u001f2\t\u0010ü\u0001\u001a\u0004\u0018\u00010\u00042\b\u0010*\u001a\u0004\u0018\u00010\u00042\u0006\u0010P\u001a\u00020\u00042\u0006\u0010Q\u001a\u00020\u0004J\u0018\u0010ý\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010þ\u0001\u001a\u00020%J\u000f\u0010ÿ\u0001\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u001b\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\n\u0010\u0002\u001a\u0005\u0018\u00010\u0002J\u000f\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u0018\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010\u0002\u001a\u00020\u001eJ.\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Q\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010\u0002\u001a\u0004\u0018\u00010\u0004J9\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Q\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010\u0002\u001a\u0004\u0018\u00010\u00042\u0007\u0010\u0002\u001a\u00020\u0004H\u0002J.\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Q\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010\u0002\u001a\u0004\u0018\u00010\u0004J.\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Q\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010\u0002\u001a\u0004\u0018\u00010\u0004J\u000f\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J9\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010Â\u0001\u001a\u00020\u00042\u0007\u0010Á\u0001\u001a\u00020\u00042\u0006\u0010D\u001a\u00020\u00042\u0006\u0010E\u001a\u00020\u00042\u0006\u0010*\u001a\u00020\u0004J%\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010\u0002\u001a\u0004\u0018\u00010\u00042\t\u0010\u0002\u001a\u0004\u0018\u00010\u0004J\u0019\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010\u0002\u001a\u00030¶\u0001J\u0019\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010P\u001a\u0004\u0018\u00010\u0004J-\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001f2\b\u0010P\u001a\u0004\u0018\u00010\u00042\b\u0010Q\u001a\u0004\u0018\u00010\u0004J-\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001f2\b\u0010P\u001a\u0004\u0018\u00010\u00042\b\u0010Q\u001a\u0004\u0018\u00010\u0004J-\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001f2\b\u0010P\u001a\u0004\u0018\u00010\u00042\b\u0010Q\u001a\u0004\u0018\u00010\u0004J-\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001f2\b\u0010P\u001a\u0004\u0018\u00010\u00042\b\u0010Q\u001a\u0004\u0018\u00010\u0004J5\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001f2\n\u0010\u0002\u001a\u0005\u0018\u00010£\u00012\u0006\u0010P\u001a\u00020\u00042\u0006\u0010Q\u001a\u00020\u0004J0\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001f2\t\u0010\u0002\u001a\u0004\u0018\u00010\u00042\n\u0010\u0002\u001a\u0005\u0018\u00010£\u0001J\u001a\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010à\u0001\u001a\u0004\u0018\u00010\u0004J\u000f\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010 \u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010¡\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u0017\u0010¢\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010\u0013\u001a\u00020\u0014J\u000f\u0010£\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010¤\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u0018\u0010¥\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010¦\u0002\u001a\u00020\u0004JX\u0010§\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\n\u0010¨\u0002\u001a\u0005\u0018\u00010©\u00022\t\u0010ª\u0002\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010«\u0002\u001a\u0004\u0018\u00010\u00042\t\u0010¬\u0002\u001a\u0004\u0018\u00010\u00042\u0007\u0010­\u0002\u001a\u00020\u00042\u0007\u0010®\u0002\u001a\u00020\u0004J\u0017\u0010¯\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010)\u001a\u00020%J&\u0010°\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\r\u0010±\u0002\u001a\b0\u0004¢\u0006\u0003\b²\u00022\u0006\u0010)\u001a\u00020%J\u0018\u0010³\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010±\u0002\u001a\u00020\u0004J&\u0010´\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\r\u0010±\u0002\u001a\b0\u0004¢\u0006\u0003\b²\u00022\u0006\u0010)\u001a\u00020%J$\u0010µ\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010 \u0001\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u0004J?\u0010¶\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010 \u0001\u001a\u00020\u00042\u0006\u0010P\u001a\u00020\u00042\u0007\u0010·\u0002\u001a\u00020\u00042\t\u0010¸\u0002\u001a\u0004\u0018\u00010\u00042\t\u0010¹\u0002\u001a\u0004\u0018\u00010\u0004JE\u0010º\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010 \u0001\u001a\u00020\u00042\u0007\u0010»\u0002\u001a\u00020\u00042\u0007\u0010¼\u0002\u001a\u00020\u00042\b\u0010P\u001a\u0004\u0018\u00010\u00042\u0006\u0010e\u001a\u00020\u00042\u0007\u0010Ã\u0001\u001a\u00020\u001eJO\u0010½\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010 \u0001\u001a\u00020\u00042\u0007\u0010¼\u0002\u001a\u00020\u00042\t\u0010¸\u0002\u001a\u0004\u0018\u00010\u00042\u000e\u0010¾\u0002\u001a\t\u0012\u0004\u0012\u00020\u00040¿\u00022\u0007\u0010Ã\u0001\u001a\u00020\u001e2\b\u0010P\u001a\u0004\u0018\u00010\u0004Ji\u0010À\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010 \u0001\u001a\u00020\u00042\u0007\u0010¼\u0002\u001a\u00020\u00042\t\u0010¸\u0002\u001a\u0004\u0018\u00010\u00042\u000e\u0010¾\u0002\u001a\t\u0012\u0004\u0012\u00020\u00040¿\u00022\u000e\u0010Á\u0002\u001a\t\u0012\u0005\u0012\u00030Â\u00020\u001c2\b\u0010P\u001a\u0004\u0018\u00010\u00042\u0007\u0010Ã\u0002\u001a\u00020%2\b\u0010*\u001a\u0004\u0018\u00010\u0004JE\u0010Ä\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010 \u0001\u001a\u00020\u00042\u0007\u0010Å\u0002\u001a\u00020\u00042\t\u0010¸\u0002\u001a\u0004\u0018\u00010\u00042\u0007\u0010Æ\u0002\u001a\u00020\u00042\u000e\u0010Á\u0002\u001a\t\u0012\u0005\u0012\u00030Â\u00020\u001cJ)\u0010Ç\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010 \u0001\u001a\u00020\u00042\u0006\u0010*\u001a\u00020\u00042\u0007\u0010È\u0002\u001a\u00020\u0004J$\u0010É\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010 \u0001\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u0004J\u0018\u0010Ê\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010 \u0001\u001a\u00020\u0004J\u0018\u0010Ë\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010 \u0001\u001a\u00020\u0004JY\u0010Ì\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010Í\u0002\u001a\u00020\u00042\u0007\u0010¼\u0002\u001a\u00020\u00042\u0007\u0010Î\u0002\u001a\u00020\u00042\b\u0010Ï\u0002\u001a\u00030¶\u00012\u0007\u0010Ð\u0002\u001a\u00020%2\t\u0010¸\u0002\u001a\u0004\u0018\u00010\u00042\u0007\u0010 \u0001\u001a\u00020\u00042\u0006\u0010P\u001a\u00020\u0004J \u0010Ñ\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010 \u0001\u001a\u00020\u00042\u0006\u0010P\u001a\u00020\u0004J\u001b\u0010Ò\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\n\u0010ö\u0001\u001a\u0005\u0018\u00010÷\u0001J\u000f\u0010Ó\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u001a\u0010Ô\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010Õ\u0002\u001a\u0004\u0018\u00010\u0004J\u000f\u0010Ö\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J/\u0010×\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Q\u001a\u0004\u0018\u00010\u00042\t\u0010Ø\u0002\u001a\u0004\u0018\u00010\u00042\t\u0010Ù\u0002\u001a\u0004\u0018\u00010\u0004J\u000f\u0010Ú\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J#\u0010Û\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010,\u001a\u0004\u0018\u00010\u00042\b\u0010-\u001a\u0004\u0018\u00010\u0004J#\u0010Ü\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010,\u001a\u0004\u0018\u00010\u00042\b\u0010-\u001a\u0004\u0018\u00010\u0004J#\u0010Ý\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010,\u001a\u0004\u0018\u00010\u00042\b\u0010-\u001a\u0004\u0018\u00010\u0004J+\u0010Þ\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Q\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u00042\u0006\u0010 \u001a\u00020\u0004J\u000f\u0010ß\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J(\u0010à\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010P\u001a\u00020\u00042\u0006\u0010Q\u001a\u00020\u00042\u0007\u0010\u0001\u001a\u00020\u0004J\u001b\u0010á\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\n\u0010ö\u0001\u001a\u0005\u0018\u00010÷\u0001J\u0017\u0010â\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010\u0013\u001a\u00020\u0014J\u001b\u0010ã\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\n\u0010ö\u0001\u001a\u0005\u0018\u00010÷\u0001J\u0017\u0010ä\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010\u0013\u001a\u00020\u0014J\u0018\u0010å\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010æ\u0002\u001a\u00020%J]\u0010ç\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010è\u0002\u001a\u0004\u0018\u00010\u00042\t\u0010é\u0002\u001a\u0004\u0018\u00010\u00042\t\u0010ê\u0002\u001a\u0004\u0018\u00010\u00042\t\u0010ë\u0002\u001a\u0004\u0018\u00010\u00042\u0006\u0010P\u001a\u00020\u00042\u0006\u0010Q\u001a\u00020\u00042\u0007\u0010\u0001\u001a\u00020\u00042\u0007\u0010\u0001\u001a\u00020\u0004J+\u0010ì\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010í\u0002\u001a\u00020%2\u0007\u0010î\u0002\u001a\u00020%2\b\u0010V\u001a\u0004\u0018\u00010\u0004JM\u0010ï\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010¬\u0002\u001a\u0004\u0018\u00010\u00042\t\u0010ð\u0002\u001a\u0004\u0018\u00010\u00042\b\u0010Q\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010«\u0002\u001a\u0004\u0018\u00010\u00042\u0007\u0010ñ\u0002\u001a\u00020%JF\u0010ò\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\n\u0010¨\u0002\u001a\u0005\u0018\u00010©\u00022\t\u0010ª\u0002\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010«\u0002\u001a\u0004\u0018\u00010\u00042\t\u0010¬\u0002\u001a\u0004\u0018\u00010\u0004J\u0018\u0010ó\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010ô\u0002\u001a\u00020\u0004J\u000f\u0010õ\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010ö\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010÷\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010ø\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010ù\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010ú\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010û\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J$\u0010ü\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010ý\u0002\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJf\u0010þ\u0002\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u000b\b\u0002\u0010ÿ\u0002\u001a\u0004\u0018\u00010\u00042\u000b\b\u0002\u0010\u0003\u001a\u0004\u0018\u00010\u001e2\u000b\b\u0002\u0010\u0003\u001a\u0004\u0018\u00010\u00042\n\b\u0002\u0010P\u001a\u0004\u0018\u00010\u00042\n\b\u0002\u0010Q\u001a\u0004\u0018\u00010\u00042\u000e\u0010±\u0001\u001a\t\u0012\u0005\u0012\u00030²\u00010\u001cH\u0007¢\u0006\u0003\u0010\u0003JV\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u000b\b\u0002\u0010ÿ\u0002\u001a\u0004\u0018\u00010\u00042\u000b\b\u0002\u0010\u0003\u001a\u0004\u0018\u00010\u001e2\u000b\b\u0002\u0010\u0003\u001a\u0004\u0018\u00010\u00042\n\b\u0002\u0010P\u001a\u0004\u0018\u00010\u00042\n\b\u0002\u0010Q\u001a\u0004\u0018\u00010\u0004H\u0007¢\u0006\u0003\u0010\u0003J\u001a\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010ý\u0002\u001a\u0004\u0018\u00010\u0004J\u000f\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J:\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010ý\u0002\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001f2\t\u0010\u0003\u001a\u0004\u0018\u00010\u00042\t\u0010ð\u0002\u001a\u0004\u0018\u00010\u0004J$\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010ý\u0002\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJ$\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010ý\u0002\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJ$\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001f2\t\u0010ý\u0002\u001a\u0004\u0018\u00010\u0004J/\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010ý\u0002\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001f2\t\u0010ª\u0002\u001a\u0004\u0018\u00010\u0004J$\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010ý\u0002\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJ$\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010ý\u0002\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJ/\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010ý\u0002\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001f2\t\b\u0002\u0010\u0003\u001a\u00020%J:\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010Ã\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010ý\u0002\u001a\u0004\u0018\u00010\u00042\t\u0010\u0003\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u001a\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010ª\u0002\u001a\u0004\u0018\u00010\u0004J\u0010\u0010\u0003\u001a\u00020\u00112\u0007\u0010\u0003\u001a\u00020\u0019J\u0010\u0010\u0003\u001a\u00020\u00112\u0007\u0010\u0003\u001a\u00020\u0019J\u0017\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010\u0013\u001a\u00020\u0014J\u001a\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010\u0003\u001a\u0004\u0018\u00010\u0004J\u000f\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u0019\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Z\u001a\u0004\u0018\u00010\u0004J\u0017\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010\u0013\u001a\u00020\u0014J\u001a\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010\u0003\u001a\u0004\u0018\u00010\u0004J\u001a\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010\u0003\u001a\u0004\u0018\u00010\u0004J\u000f\u0010\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010 \u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010¡\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010¢\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J%\u0010£\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010¤\u0003\u001a\u0004\u0018\u00010\u00042\t\u0010¥\u0003\u001a\u0004\u0018\u00010\u0004J\u001a\u0010¦\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010¤\u0003\u001a\u0004\u0018\u00010\u0004J\u000f\u0010§\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010¨\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010©\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010ª\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010«\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010¬\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u0018\u0010­\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010®\u0003\u001a\u00020%J!\u0010­\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010¯\u0003\u001a\u00020%2\u0007\u0010®\u0003\u001a\u00020%J\u000f\u0010°\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010±\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J!\u0010²\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010³\u0003\u001a\u00020%2\u0007\u0010´\u0003\u001a\u00020%J!\u0010µ\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010³\u0003\u001a\u00020%2\u0007\u0010¶\u0003\u001a\u00020%J\u000f\u0010·\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u001a\u0010¸\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010Ä\u0001\u001a\u0004\u0018\u00010\u0004J\u001a\u0010¹\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010Ä\u0001\u001a\u0004\u0018\u00010\u0004J\u0019\u0010º\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001fJ%\u0010»\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010\u0001\u001a\u0004\u0018\u00010\u0004J\u001a\u0010¼\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010½\u0003\u001a\u0004\u0018\u00010\u0004J.\u0010¾\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\u0007\u0010í\u0001\u001a\u00020\u0004J6\u0010¿\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\u0007\u0010í\u0001\u001a\u00020\u00042\u0006\u0010Z\u001a\u00020\u0004J\u001b\u0010À\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\n\u0010Á\u0003\u001a\u0005\u0018\u00010\u0002J#\u0010Â\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010S\u001a\u0004\u0018\u00010T2\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u0019\u0010Ã\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010S\u001a\u0004\u0018\u00010TJ3\u0010Ä\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Q\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u00042\u0006\u0010 \u001a\u00020\u00042\u0006\u0010*\u001a\u00020\u0004J%\u0010Å\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010Æ\u0003\u001a\u0004\u0018\u00010\u00042\t\u0010ª\u0002\u001a\u0004\u0018\u00010\u0004JO\u0010Ç\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Q\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010È\u0003\u001a\u0004\u0018\u00010\u00042\t\u0010É\u0003\u001a\u0004\u0018\u00010\u00042\t\u0010Ê\u0003\u001a\u0004\u0018\u00010\u00042\t\u0010Ë\u0003\u001a\u0004\u0018\u00010\u0004J.\u0010Ì\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Q\u001a\u0004\u0018\u00010\u00042\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010È\u0003\u001a\u0004\u0018\u00010\u0004J6\u0010Í\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Q\u001a\u0004\u0018\u00010\u00042\t\u0010È\u0003\u001a\u0004\u0018\u00010\u00042\u0007\u0010/\u001a\u00030Î\u00032\u0007\u0010Ã\u0001\u001a\u00020\u001eJ@\u0010Ï\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Q\u001a\u0004\u0018\u00010\u00042\b\u0010l\u001a\u0004\u0018\u00010\u00042\u001b\u0010¯\u0001\u001a\u0016\u0012\u0005\u0012\u00030Î\u00030¢\u0001j\n\u0012\u0005\u0012\u00030Î\u0003`¤\u0001J3\u0010Ð\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010 \u001a\u0004\u0018\u00010\u00042\u0018\u0010\u001b\u001a\u0014\u0012\u0010\u0012\u000e\u0012\u0004\u0012\u00020\u001e\u0012\u0004\u0012\u00020\u001f0\u001d0\u001cJ1\u0010Ñ\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010Ò\u0003\u001a\u00020\u00042\u0007\u0010Ó\u0003\u001a\u00020\u00042\u0006\u0010\\\u001a\u00020\u00042\u0006\u0010^\u001a\u00020\u0004J\u000f\u0010Ô\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u0019\u0010Õ\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u0019\u0010Ö\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u0019\u0010×\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u000f\u0010Ø\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u001a\u0010Ù\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010Ú\u0003\u001a\u0004\u0018\u00010\u0004J\u001a\u0010Û\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010Ú\u0003\u001a\u0004\u0018\u00010\u0004J\u001a\u0010Ü\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010Ú\u0003\u001a\u0004\u0018\u00010\u0004J\u001a\u0010Ý\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010Ú\u0003\u001a\u0004\u0018\u00010\u0004J\u000f\u0010Þ\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u0018\u0010ß\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010à\u0003\u001a\u00020%J\u000f\u0010á\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u001a\u0010â\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010ã\u0003\u001a\u0004\u0018\u00010\u0004J\u000f\u0010ä\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u001a\u0010å\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010æ\u0003\u001a\u0004\u0018\u00010\u0004J\u001a\u0010ç\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010è\u0003\u001a\u0004\u0018\u00010\u0004J.\u0010é\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010è\u0003\u001a\u0004\u0018\u00010\u00042\u0007\u0010ê\u0003\u001a\u00020\u00042\t\u0010ë\u0003\u001a\u0004\u0018\u00010\u0004J\u001a\u0010ì\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010í\u0003\u001a\u0004\u0018\u00010\u0004J\u001a\u0010î\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010í\u0003\u001a\u0004\u0018\u00010\u0004J7\u0010ï\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010N\u001a\u00020\u001e2\u0006\u0010n\u001a\u00020\u00042\u0006\u0010o\u001a\u00020\u00042\u0006\u0010p\u001a\u00020\u001e2\u0006\u0010/\u001a\u00020\u001fJ\u001c\u0010ð\u0003\u001a\u000b ç\u0001*\u0004\u0018\u00010\u00040\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fH\u0002J\u000f\u0010ñ\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019JN\u0010ò\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010\"\u001a\u00020\u00042\t\u0010è\u0003\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001f2\u0007\u0010ó\u0003\u001a\u00020%2\u0006\u0010o\u001a\u00020\u00042\t\u0010ô\u0003\u001a\u0004\u0018\u00010]¢\u0006\u0003\u0010õ\u0003Jn\u0010ö\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010h\u001a\u0004\u0018\u00010T2\u0007\u0010÷\u0003\u001a\u00020\u001e2\t\u0010Ü\u0001\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001f2\b\u0010*\u001a\u0004\u0018\u00010\u00042\t\u0010ø\u0003\u001a\u0004\u0018\u00010\u00042\u0007\u0010ù\u0003\u001a\u00020\u001e2\u0007\u0010ú\u0003\u001a\u00020\u001e2\u0006\u0010Q\u001a\u00020\u00042\u0006\u0010P\u001a\u00020\u0004J.\u0010û\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010ª\u0002\u001a\u0004\u0018\u00010\u00042\b\u0010Z\u001a\u0004\u0018\u00010\u0004J2\u0010ü\u0003\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010\u0001\u001a\u0004\u0018\u00010\u00042\n\u0010ý\u0003\u001a\u0005\u0018\u00010þ\u00032\n\u0010ÿ\u0003\u001a\u0005\u0018\u00010\u0004JS\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\n\u0010\u0004\u001a\u0005\u0018\u00010\u00042\t\u0010Ü\u0001\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001f2\u0007\u0010ó\u0003\u001a\u00020%2\u0007\u0010\u0004\u001a\u00020\u001e2\t\u0010ô\u0003\u001a\u0004\u0018\u00010]¢\u0006\u0003\u0010\u0004J6\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010ª\u0002\u001a\u0004\u0018\u00010\u00042\n\u0010\u0004\u001a\u0005\u0018\u00010¶\u0001¢\u0006\u0003\u0010\u0004J<\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010\u0004\u001a\u00020\u00042\u0007\u0010\u0004\u001a\u00020\u00042\u0007\u0010\u0004\u001a\u00020\u00042\u0007\u0010è\u0003\u001a\u00020\u00042\u0007\u0010\u0004\u001a\u00020\u0004J<\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010\u0004\u001a\u00020\u00042\u0007\u0010\u0004\u001a\u00020\u00042\u0007\u0010\u0004\u001a\u00020\u00042\u0007\u0010è\u0003\u001a\u00020\u00042\u0007\u0010\u0004\u001a\u00020\u0004J2\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010\u0004\u001a\u00020\u00042\u0007\u0010\u0004\u001a\u00020\u00042\u0006\u0010Z\u001a\u00020\u00042\u0007\u0010è\u0003\u001a\u00020\u0004J*\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010\u0004\u001a\u00020\u00042\u0007\u0010\u0004\u001a\u00020\u00042\u0007\u0010\u0004\u001a\u00020\u0004J/\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010ª\u0002\u001a\u0004\u0018\u00010\u00042\t\u0010\u0004\u001a\u0004\u0018\u00010\u0004J$\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010ª\u0002\u001a\u0004\u0018\u00010\u0004J9\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010ª\u0002\u001a\u0004\u0018\u00010\u00042\t\u0010\u0004\u001a\u0004\u0018\u00010\u00042\b\u0010Z\u001a\u0004\u0018\u00010\u0004J9\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010ª\u0002\u001a\u0004\u0018\u00010\u00042\t\u0010\u0004\u001a\u0004\u0018\u00010\u00042\b\u0010Z\u001a\u0004\u0018\u00010\u0004J\u001a\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010\u0004\u001a\u0004\u0018\u00010\u0004J\u001a\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010\u0004\u001a\u0004\u0018\u00010\u0004JC\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010\u0004\u001a\u0004\u0018\u00010\u00042\t\u0010í\u0001\u001a\u0004\u0018\u00010\u00042\t\u0010ï\u0001\u001a\u0004\u0018\u00010\u00042\b\u0010Z\u001a\u0004\u0018\u00010\u00042\u0007\u0010\u0004\u001a\u00020%JO\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010h\u001a\u0004\u0018\u00010T2\u0007\u0010÷\u0003\u001a\u00020\u001e2\t\u0010Ü\u0001\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001f2\u0006\u0010*\u001a\u00020\u00042\u0006\u0010Q\u001a\u00020\u00042\u0006\u0010P\u001a\u00020\u0004J\u0019\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001fJ+\u0010\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010N\u001a\u00020\u001e2\b\u0010P\u001a\u0004\u0018\u00010\u00042\b\u0010Q\u001a\u0004\u0018\u00010\u0004Jà\u0001\u0010 \u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010¡\u0004\u001a\u00020%2\b\u0010/\u001a\u0004\u0018\u00010\u001f2\t\u0010¢\u0004\u001a\u0004\u0018\u00010\u00042\t\u0010£\u0004\u001a\u0004\u0018\u00010\u00042\b\u0010y\u001a\u0004\u0018\u00010\u00042\b\u0010L\u001a\u0004\u0018\u00010\u00042\b\u0010Q\u001a\u0004\u0018\u00010\u00042\t\u0010È\u0003\u001a\u0004\u0018\u00010\u00042\n\u0010¤\u0004\u001a\u0005\u0018\u00010¥\u00042\u0007\u0010¦\u0004\u001a\u00020\u00042)\u0010§\u0004\u001a$\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u0004\u0018\u00010¨\u0004j\u0011\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u0004\u0018\u0001`©\u00042\u0007\u0010ª\u0004\u001a\u00020~2\u0007\u0010«\u0004\u001a\u00020%2\u000b\b\u0002\u0010Ì\u0001\u001a\u0004\u0018\u00010\u00042\u000b\b\u0002\u0010¬\u0004\u001a\u0004\u0018\u00010\u001e2\u000b\b\u0002\u0010­\u0004\u001a\u0004\u0018\u00010\u001e¢\u0006\u0003\u0010®\u0004J$\u0010 \u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010¯\u0004\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\"\u0010°\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010¯\u0004\u001a\u00020\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u0011\u0010¯\u0004\u001a\u00020\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u0011\u0010±\u0004\u001a\u00020\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u000f\u0010²\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J#\u0010³\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010Q\u001a\u0004\u0018\u00010\u00042\b\u0010*\u001a\u0004\u0018\u00010\u0004J\u001b\u0010´\u0004\u001a\u00020\u00112\b\u0010/\u001a\u0004\u0018\u00010\u001f2\u0006\u0010\u0016\u001a\u00020\u0017H\u0007J]\u0010µ\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010\u0016\u001a\u00020\u00172\n\u0010\u0004\u001a\u0005\u0018\u00010\u00042\t\u0010Ü\u0001\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001f2\u0007\u0010ó\u0003\u001a\u00020%2\u0007\u0010\u0004\u001a\u00020\u001e2\t\u0010ô\u0003\u001a\u0004\u0018\u00010]H\u0007¢\u0006\u0003\u0010¶\u0004J\u0002\u0010·\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u001d\u0010¯\u0001\u001a\u0018\u0012\u0004\u0012\u00020\u001f\u0018\u00010¢\u0001j\u000b\u0012\u0004\u0012\u00020\u001f\u0018\u0001`¤\u00012\b\u0010-\u001a\u0004\u0018\u00010\u00042\t\u0010¸\u0004\u001a\u0004\u0018\u00010\u00042\b\u0010x\u001a\u0004\u0018\u00010\u00042\u0006\u0010a\u001a\u00020%2\t\u0010Ð\u0001\u001a\u0004\u0018\u00010\u00042\b\u0010y\u001a\u0004\u0018\u00010\u00042\b\u0010L\u001a\u0004\u0018\u00010\u00042\b\u0010z\u001a\u0004\u0018\u00010\u00042\u0007\u0010¹\u0004\u001a\u00020%2\u0007\u0010º\u0004\u001a\u00020\u001e2\u0007\u0010»\u0004\u001a\u00020\u001e2\b\u0010|\u001a\u0004\u0018\u00010\u00042\n\u0010¤\u0004\u001a\u0005\u0018\u00010¥\u00042\u0007\u0010¦\u0004\u001a\u00020\u00042)\u0010¼\u0004\u001a$\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u0004\u0018\u00010¨\u0004j\u0011\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u0004\u0018\u0001`©\u00042\b\u0010*\u001a\u0004\u0018\u00010\u00042\u0006\u0010}\u001a\u00020~2\n\b\u0002\u0010&\u001a\u0004\u0018\u00010%2\n\b\u0002\u0010$\u001a\u0004\u0018\u00010%2\b\b\u0002\u0010)\u001a\u00020%¢\u0006\u0003\u0010½\u0004J\u0010\u0010Ð\u0001\u001a\u00020\u00042\u0007\u0010Ç\u0001\u001a\u00020\u001eJ\u0019\u0010¾\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010P\u001a\u0004\u0018\u00010\u0004J\u0019\u0010¿\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010P\u001a\u0004\u0018\u00010\u0004JÊ\u0001\u0010À\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001f2\b\u0010P\u001a\u0004\u0018\u00010\u00042\t\u0010£\u0004\u001a\u0004\u0018\u00010\u00042\b\u0010y\u001a\u0004\u0018\u00010\u00042\b\u0010L\u001a\u0004\u0018\u00010\u00042\b\u0010Q\u001a\u0004\u0018\u00010\u00042\t\u0010È\u0003\u001a\u0004\u0018\u00010\u00042\n\u0010¤\u0004\u001a\u0005\u0018\u00010¥\u00042\b\u0010Á\u0004\u001a\u00030Â\u00042\b\u0010{\u001a\u0004\u0018\u00010\u00042\u0007\u0010Ã\u0004\u001a\u00020%2\u0007\u0010Ä\u0004\u001a\u00020\u001e2\u0007\u0010Å\u0004\u001a\u00020\u001e2\u0007\u0010Õ\u0001\u001a\u00020\u00042\u0007\u0010Æ\u0004\u001a\u00020\u00042\u0007\u0010Ç\u0004\u001a\u00020\u001e2\t\u0010È\u0004\u001a\u0004\u0018\u00010\u00042\u0007\u0010ª\u0004\u001a\u00020~2\u0007\u0010«\u0004\u001a\u00020%J\u001a\u0010É\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010Ê\u0004\u001a\u0004\u0018\u00010\u0004J\u001a\u0010Ë\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010Ê\u0004\u001a\u0004\u0018\u00010\u0004J\u000f\u0010Ì\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010Í\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010Î\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010Ï\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010Ð\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J?\u0010Ñ\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010è\u0003\u001a\u0004\u0018\u00010\u00042\u0006\u0010\"\u001a\u00020\u001e2\b\u0010Z\u001a\u0004\u0018\u00010\u00042\u0007\u0010Ò\u0004\u001a\u00020%2\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u0019\u0010Ó\u0004\u001a\u00020\u00112\u0006\u0010\u0012\u001a\u00020\u00042\u0006\u0010\u0016\u001a\u00020\u0017H\u0002J-\u0010Ô\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0006\u0010\u0012\u001a\u00020\u00042\u0014\u0010ê\u0001\u001a\u000f\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u00040Õ\u0004J\u0019\u0010Ö\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010P\u001a\u0004\u0018\u00010\u0004J\u0018\u0010×\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010Ø\u0004\u001a\u00020%J\u000f\u0010Ù\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019Jx\u0010Ú\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010è\u0003\u001a\u0004\u0018\u00010\u00042\b\u0010Z\u001a\u0004\u0018\u00010\u00042\t\u0010Ò\u0004\u001a\u0004\u0018\u00010\u00042\t\u0010ð\u0002\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001f2\u0007\u0010ó\u0003\u001a\u00020%2\u0006\u0010o\u001a\u00020\u00042\u0007\u0010Û\u0004\u001a\u00020\u00042\u0007\u0010Ü\u0004\u001a\u00020\u001e2\t\u0010ô\u0003\u001a\u0004\u0018\u00010]¢\u0006\u0003\u0010Ý\u0004J\u000f\u0010Þ\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u001a\u0010ß\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010à\u0004\u001a\u0004\u0018\u00010\u0004J\u000f\u0010á\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010â\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u000f\u0010ã\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019J\u001a\u0010ä\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010Ä\u0001\u001a\u0004\u0018\u00010\u0004J\u0018\u0010å\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u0007\u0010æ\u0004\u001a\u00020%J\u000f\u0010ç\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u0019JP\u0010è\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u000b\b\u0002\u0010é\u0004\u001a\u0004\u0018\u00010\u00042\t\u0010ê\u0004\u001a\u0004\u0018\u00010\u00042\t\u0010ë\u0004\u001a\u0004\u0018\u00010\u00042\u0007\u0010ì\u0004\u001a\u00020\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001f2\u0007\u0010½\u0001\u001a\u00020\u0004H\u0007JG\u0010í\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\u000b\b\u0002\u0010î\u0004\u001a\u0004\u0018\u00010\u00042\t\u0010ê\u0004\u001a\u0004\u0018\u00010\u00042\t\u0010ë\u0004\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001f2\u0007\u0010½\u0001\u001a\u00020\u0004H\u0007JC\u0010ï\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\t\u0010é\u0004\u001a\u0004\u0018\u00010\u00042\t\u0010ê\u0004\u001a\u0004\u0018\u00010\u00042\t\u0010ë\u0004\u001a\u0004\u0018\u00010\u00042\b\u0010/\u001a\u0004\u0018\u00010\u001f2\u0007\u0010½\u0001\u001a\u00020\u0004J(\u0010ð\u0004\u001a\u00020\u00112\u0006\u0010\u0018\u001a\u00020\u00192\r\u0010ñ\u0004\u001a\b\u0012\u0004\u0012\u00020\u00040\u001c2\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u0013\u0010ò\u0004\u001a\u00020\u0011*\u00020\u00172\u0006\u0010\u0018\u001a\u00020\u0019J\u0017\u0010ó\u0004\u001a\u00020\u0011*\u00020\u00172\n\u0010ô\u0004\u001a\u0005\u0018\u00010¥\u0004J\u0015\u0010õ\u0004\u001a\u00020\u0011*\u00020\u00172\b\u0010/\u001a\u0004\u0018\u00010\u001fJ\u001d\u0010ö\u0004\u001a\u00020\u0011*\u00020\u00172\u0006\u0010\u0018\u001a\u00020\u00192\b\u0010/\u001a\u0004\u0018\u00010\u001fJ#\u0010÷\u0004\u001a\u00020\u0004*\u0018\u0012\u0004\u0012\u00020\u001f\u0018\u00010¢\u0001j\u000b\u0012\u0004\u0012\u00020\u001f\u0018\u0001`¤\u0001H\u0002J\u0019\u0010ø\u0004\u001a\u00020\u0011*\u00020\u00172\n\u0010ù\u0004\u001a\u0005\u0018\u00010ú\u0004H\u0007J\u000e\u0010û\u0004\u001a\u00020\u0017*\u00030²\u0001H\u0007J \u0010û\u0004\u001a\u00020\u0017*\u00030Â\u00022\u0007\u0010¸\u0002\u001a\u00020\u00042\u0007\u0010Å\u0001\u001a\u00020\u0004H\u0002J\u000e\u0010û\u0004\u001a\u00020\u0017*\u00030ü\u0004H\u0002R\u000e\u0010\u0003\u001a\u00020\u0004XT¢\u0006\u0002\n\u0000R\u000e\u0010\u0005\u001a\u00020\u0004XT¢\u0006\u0002\n\u0000R\u000e\u0010\u0006\u001a\u00020\u0004XT¢\u0006\u0002\n\u0000R\u000e\u0010\u0007\u001a\u00020\u0004XT¢\u0006\u0002\n\u0000R\u000e\u0010\b\u001a\u00020\u0004XT¢\u0006\u0002\n\u0000R\u000e\u0010\t\u001a\u00020\u0004XT¢\u0006\u0002\n\u0000R\u001a\u0010\n\u001a\u00020\u000bX\u000e¢\u0006\u000e\n\u0000\u001a\u0004\b\f\u0010\r\"\u0004\b\u000e\u0010\u000f¨\u0006ý\u0004"}, d2 = {"Ltracking/gtm/TalabatGTM$Companion;", "", "()V", "COMPLETED", "", "FAILED", "NORMAL", "STARTED", "SUCCEEDED", "VALUE_NOT_AVAILABLE", "talabatFirebase", "Ltracking/gtm/ITalabatFirebase;", "getTalabatFirebase", "()Ltracking/gtm/ITalabatFirebase;", "setTalabatFirebase", "(Ltracking/gtm/ITalabatFirebase;)V", "LogAddressEvent", "", "eventName", "addressAnalyticsTracker", "Ldatamodels/analyticstrackermodels/AddressAnalyticsTracker;", "addCommonProperties", "bundle", "Landroid/os/Bundle;", "context", "Landroid/content/Context;", "addImpressionForRestaurantList", "restaurantsWithPosition", "", "Lkotlin/Pair;", "", "Ldatamodels/Restaurant;", "listingPageType", "addMoreItemsClicked", "restaurantId", "addTelcoIfNeeded", "telcoExpired", "", "telcoVerified", "(Ljava/lang/Boolean;Ljava/lang/Boolean;Landroid/os/Bundle;)V", "addVendorListCuisinesProperties", "isPickup", "eventOrigin", "addVendorListFilterProperties", "sorting", "filters", "addVendorListProperties", "restaurant", "addressErrorShown", "addressModificationShown", "addressSelected", "areaId", "addressSubmitted", "adjustAdGroup", "adjustCampaign", "adjustCreative", "adjustNetwork", "allrestaurantsToggleSelected", "app_installed", "adid", "installNetwork", "installAdGroup", "installCampaign", "installCreative", "areaModificationShown", "backToCheckout", "bannerEnterButtonClicked", "brandPageLoaded", "chainName", "chainId", "cartClicked", "cartLocation", "cartLoaded", "changeCountry", "changeLanguage", "channelClicked", "channel", "checkout_clicked", "branchId", "cartCount", "screenName", "screenType", "choiceScreenOpened", "cartMenuItem", "Ldatamodels/CartMenuItem;", "closedAfterMapError", "mapJourneyType", "connectionLostClosed", "connection", "connectionLostShown", "errorMessage", "continuedAfterMapError", "latitude", "", "longitude", "cuisineSelected", "cuisineId", "isUpdate", "cuisineSlugName", "cuisineSelectedUpdated", "darkStoresShown", "type", "info", "decreaseItemQuantity", "item", "deepLinkOpened", "campaignId", "uri", "query", "deliveryTimeSelected", "payment_method", "defaultPayementMethod", "cartValue", "educationalMessageClosed", "exitPoll", "exitPollValue", "experssCheckoutClicked", "cartSize", "gemCollectionsListUpdated", "jokerRequestId", "cuisines", "channelIndex", "shopListTrigger", "swimlaneTitle", "shopIds", "eventOriginSource", "Ltracking/ShopClickedEvent$EventOriginSource;", "gemFloatingButtonShown", "geoLocationClicked", "geoLocationClickedFromLanding", "ScreenName", "ScreenType", "geolocationAccuracy", "locationLat", "locationLon", "locationCountry", "geoLocationRecieved", "isAreaCorrect", "geolocationDialogueAccepted", "locationDialogueAccepted", "locationDialogueType", "locationStatus", "getAgeVerificationEventBundle", "getAppliedCampaignIds", "getAppliedVoucherId", "getCampaignIds", "getCodeClicked", "getCommonBundle", "getCurrentTime", "getLocationAddress", "getLocationLatitude", "getLocationLongitude", "getMenuSectionNamesForGA", "getNonEmptyValue", "value", "getOfferType", "getPaymentMethod", "payby", "getPaymentMethods", "getRestaurantForDarkstores", "extraRestaurant", "getRestaurantMenuSections", "Ljava/util/ArrayList;", "Ldatamodels/MenuSection;", "Lkotlin/collections/ArrayList;", "getSavedQuickOrderAddressData", "Ldatamodels/QuickOrderInfo;", "getScreenName", "vericalId", "getSelectedAreaId", "getShopOffer", "getShopSponsoring", "getShopStatus", "statusType", "getShopTypeForTracking", "restaurants", "getSortedImpressionBundle", "listOfImpressions", "Ldatamodels/ImpressionProperties;", "getTalabatCreditBalance", "getTalabatCreditBalanceAfterRedeemSuccessful", "amountAdded", "", "(Ljava/lang/Float;)Ljava/lang/String;", "getUserId", "getVoucherBundle", "voucherId", "voucherCode", "voucherAmount", "voucherOptionType", "groceryClick", "homeBannerBundle", "zoneNumber", "bannerId", "bannerName", "position", "shopId", "shopName", "shopStatus", "shopType", "shopArea", "shopMainCuisine", "shopDeliveryTime", "deliveryProvider", "vendorSponsoringPlacement", "homeBannerClicked", "homeBannerImpression", "homeScreenLoaded", "shopListType", "swimlanesTotal", "swimlanesTitleList", "swimlaneRequestId", "swimlaneStrategyList", "swimlaneVariation", "increaseItemQuantity", "isScreenViewEventInValid", "itemClick", "itemBean", "Ldatamodels/MenuItem;", "sectionName", "restaurantName", "itemDetailsView", "itemView", "menuitems", "menuSectionName", "launch", "isFWFSDKinFlutter", "listingType", "liveChatClicked", "locateMe", "locationCity", "kotlin.jvm.PlatformType", "locationMismatch", "logFlutterEvents", "map", "", "login", "action", "userName", "loginType", "failReason", "launchScreenName", "logout", "mapClosed", "mapConfirmed", "mapShown", "location", "Lcom/google/android/gms/maps/model/LatLng;", "viewType", "mapSkipped", "newCardAdded", "newMenuItemDetailsScreenOpened", "itemPriceForGA", "newMenuShown", "isNewMenu", "numberUpdationFailed", "numberUpdationSuccessful", "onActionSheetAddressSelected", "locationAddress", "Lcom/talabat/domain/address/Address;", "onActionSheetDifferentLocationClicked", "onActionSheetShown", "addressCount", "onAlertCloseClicked", "alertType", "onAlertEvent", "eventType", "onAlertReadmoreClicked", "onAlertShown", "onAttributionChanged", "onBannerStoreShown", "onBinDiscountApplied", "cardType", "selectedCardName", "onBinDiscountExcluded", "binMinimumOrderAmountForTracking", "onBinNotificationShown", "onBusyBottomSheetClosed", "onBusyBottomSheetOpened", "onBusyBottomSheetRecommendedRestaurantClicked", "onBusyBottomSheetViewAllClicked", "onCategoryDetailsLoaded", "menuSection", "onCategoryDetailsUpdated", "selectedSort", "onCategorySelected", "onCategorySelectorClosed", "onCategorySelectorOpened", "onChangeAreaClicked", "onChangeCountryConfirmed", "onChangeCountrySelected", "onChangeCountryShown", "onComplianceContinueToCheckout", "onComplianceUserBlocked", "blockedMessage", "onContactOptionClickedOrderConfirmation", "response", "Ldatamodels/MostRecentOrderList;", "pageType", "linkText", "contactOption", "estimatedTimeRange", "expeditionType", "onCuisineButtonClicked", "onCuisineScreenApplySelection", "shopCategorySelected", "Lorg/jetbrains/annotations/NotNull;", "onCuisineScreenClearSelection", "onCuisineScreenSelectCuisine", "onDarkstoresAgeVerificationShown", "onDarkstoresAllButtonClicked", "shopCategory", "categoryId", "originType", "onDarkstoresBannerShown", "globalId", "name", "onDarkstoresCategoryClicked", "subcategories", "", "onDarkstoresCategoryLoaded", "products", "Ltracking/models/ProductTracking;", "expanded", "onDarkstoresCategoryUpdated", "categoryName", "selectedItem", "onDarkstoresComponentClicked", "shopClickedOrigin", "onDarkstoresLoaded", "onDarkstoresLookingGlassClicked", "onDarkstoresLookingGlassShown", "onDarkstoresProductOpened", "id", "description", "price", "isFavorite", "onDarkstoresSearchBarClicked", "onDeliverHereClicked", "onDuplicateOrderPopupClosed", "onDuplicateOrderPopupConfirmClicked", "optionSelected", "onDuplicateOrderPopupShown", "onExperimentRunForApptimize", "experimentId", "enrolledVariantName", "onFilterButtonClicked", "onFilterOptionSelected", "onFilterScreenApplySelection", "onFilterScreenClearSelection", "onFilterViewLoaded", "onFindRestaurantClicked", "onGeoLocationClicked", "onGeoLocationRecievedHomeMap", "onGeolocationDialogueAccepted", "onGeolocationReceived", "onGeolocationRequested", "onGoGreenSelected", "isGoGreen", "onGpsInfoReceived", "gpsAccuracy", "gpsMaximumWaitTime", "gpsWaitTime", "thresholdGpsAccuracy", "onGpsPopupStatus", "appGpsStatus", "deviceGpsStatus", "onHelpcenterLinkClicked", "transactionId", "preOrder", "onHelpcentreLinkClicked", "onHomeCuisinesClicked", "itemName", "onInformapAddressPopupShown", "onInformapAreaMismatchShown", "onInformapCloseClicked", "onInformapContinueClicked", "onInformapNewAddressClicked", "onInformapWebviewClosed", "onInformapWebviewShown", "onJokerCheckoutLoaded", "timeLeft", "onJokerLightboxExpanded", "jokerOfferId", "jokerOffersShown", "swimlaneTitleList", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V", "onJokerLightboxShown", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "onJokerModalRejected", "onJokerModalShown", "onJokerOrderComplete", "tierNumber", "onJokerResumeAccepted", "onJokerResumeRejected", "onJokerResumeShown", "onJokerShopAbandonCompleted", "onJokerShopAbandonStarted", "onJokerShopLoaded", "isGemCollectionRestaurant", "onJokerTierReached", "onJokerTimeOut", "onKNETFailureLghtboxClosed", "checkOutScreen", "onKNETFailureLghtboxShown", "onLocationAttempted", "onLoginEmailUnregistered", "option", "onMapBlockUpdated", "onMapErrorShown", "onMapLoaded", "onMapLocateMeClicked", "journeyType", "onMapSearchComplete", "searchType", "onMapSearchStarted", "onMapStreetUpdated", "onMapUserGuideDismissed", "onMapUserGuideShown", "onMapViewChanged", "mapViewType", "jounneyType", "onMapViewLoaded", "onMcdAddressPopupShown", "onMcdBlockSelectionShown", "onMcdCloseClicked", "onMcdEditLocationClicked", "onMcdMapClosed", "onMcdMapConfirmClicked", "onMcdMapResultReturned", "isLocationMisMatch", "isResultReturned", "onMcdMapShown", "onMcdNewAddressClicked", "onMcdProceedClicked", "isReturnResult", "isBlockSelected", "onMcdProceedStreetClicked", "isStreetModified", "onMcdUpdateaAddressClicked", "onMobileNumberVerificationFailed", "onMobileNumberVerificationValidated", "onMoreReviewsClicked", "onOtherLocationClicked", "onPArallelBinMoreClicked", "parallelBin", "onPasswordResetSelection", "onPasswordResetSubmit", "onPreSelectedAddresSelected", "address", "onProductChoiceFailed", "onProductImageClicked", "onSearchBarClicked", "onSearchButtonClicked", "locationArea", "onSearchClicked", "searchTerm", "searchSectionList", "searchSection", "shopPosition", "onSearchErrorShown", "onSearchRestaurantClicked", "Ldatamodels/QuickRestaurant;", "onSearchResultsDisplayed", "onShopListExpanded", "onSnappingGpsInfo", "snappingScenario", "snapingDistance", "onStartOrderingClicked", "onTabInfoClicked", "onTabMenuClicked", "onTabReviewsClicked", "onUnifiedOrderEnquiryClicked", "onUnifiedOrderMapClosed", "remainingTime", "onUnifiedOrderMapEnforceClosed", "onUnifiedOrderMapShown", "onUnifiedOrderTrackOrderClicked", "onUnifiedRateOrderClicked", "onUninstallApp", "isCompain", "onUpdateAddressClosed", "onUpdateAddressSelected", "selectedOption", "onUpdateAddressShown", "otherVerificationOptionSelected", "otherOption", "paymentErrorClosed", "paymentMethod", "paymentErrorShown", "errorReasonMessage", "paymentProvider", "paymentFailedClosed", "error", "paymentFailedShown", "paymentMethodChoosed", "pickupRiderDeliveryProvider", "productSearchClicked", "purchaseInitialised", "contactlessEnabled", "riderTipValue", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ldatamodels/Restaurant;ZLjava/lang/String;Ljava/lang/Double;)V", "pushAddToCart", "restId", "selectedChoicesString", "selectedMandatoryChoices", "selectedOptionalChoices", "pushCreditRedeemFailed", "pushOpenScreenEvent", "selectedCountry", "Ldatamodels/Country;", "customerInfo", "Ldatamodels/CustomerInfo;", "pushOrderComplete", "purchase", "Ltracking/Purchase;", "customerId", "(Landroid/content/Context;Ltracking/Purchase;Ljava/lang/String;Ldatamodels/Restaurant;ZILjava/lang/Double;)V", "pushSuccessfulCreditRedeemCompleted", "creditAmountAdd", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Float;)V", "pushTipRiderClicked", "orderStatus", "orderId", "tipValue", "source", "pushTipRiderCompleted", "pushTipRiderFailure", "pushTipRiderOpen", "tipClickOrigin", "pushWalletTopupAttempted", "topupAmount", "pushWalletTopupClicked", "pushWalletTopupFailed", "walletAmountAdd", "pushWalletTopupSuccess", "rateorderClicked", "transactionid", "rateorderSubmitted", "register", "mode", "isnewsLetter", "removeFromCart", "reorderClicked", "restaurantClicked", "isCokeUpsell", "clickOrigin", "searchString", "polygonEvent", "LJsonModels/PolygonEvents;", "listViewType", "swimlanesGa", "Ljava/util/HashMap;", "Lkotlin/collections/HashMap;", "eventSource", "isGemRestaurant", "itemId", "featuredProductQuantity", "(Landroid/content/Context;ZLdatamodels/Restaurant;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;LJsonModels/PolygonEvents;Ljava/lang/String;Ljava/util/HashMap;Ltracking/ShopClickedEvent$EventOriginSource;ZLjava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)V", "restaurantType", "restaurantMenuShown", "restaurantTypeForOrderingExperience", "retryConnectClicked", "searchClicked", "setBaseRestuarantBundleParams", "setBundleForPurchaseCompleteEvent", "(Landroid/content/Context;Landroid/os/Bundle;Ltracking/Purchase;Ljava/lang/String;Ldatamodels/Restaurant;ZILjava/lang/Double;)V", "shopListLoaded", "sortBy", "isRecomendRestaurantsExist", "shopRecommendedQuantity", "shopOpenNumber", "swimlaneGa", "(Landroid/content/Context;Ljava/util/ArrayList;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZIILjava/lang/String;LJsonModels/PolygonEvents;Ljava/lang/String;Ljava/util/HashMap;Ljava/lang/String;Ltracking/ShopClickedEvent$EventOriginSource;Ljava/lang/Boolean;Ljava/lang/Boolean;Z)V", "sideMenuOpened", "sideMenuOptionSelected", "swimlaneRestaurantClicked", "homeSwimlanesTrackerData", "Ldatamodels/HomeSwimlanesTrackerData;", "swimlaneClicked", "swimlanePosition", "swimlaneLength", "swimlaneStrategy", "swimlaneTilesDisplayed", "shopClickOrigin", "termsAndConditionClicked", "collectionName", "termsAndConditionClosed", "tgoListingShown", "tgoToggleSelected", "toggleShown", "tokenRemoved", "tokenSelected", "tokenTransactionFailed", "status", "trackAdExEvent", "trackEvent", "", "trackOrderClicked", "trackorderIntermediateClosed", "urlReceived", "trackorderIntermediateShown", "transactionFailed", "errorDetail", "errorCode", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldatamodels/Restaurant;ZLjava/lang/String;Ljava/lang/String;ILjava/lang/Double;)V", "upSellingSliderShown", "upsellCokeItemAddClicked", "upSellItem", "upsellCokeSliderNavigated", "verificationChangeSelected", "verificationFailed", "verificationPopupShown", "verificationSuccessful", "alreadyVerified", "verifyClicked", "voucherRedeemFailed", "vID", "vCode", "vAmount", "message", "voucherRedeemSuccess", "vId", "voucherRemoved", "vouchersLoadedSuccess", "vouchers", "addCommonLocationData", "addCommonPolygonData", "polygonEvents", "addCommonShopData", "commonVoucherData", "preOrderRestaurantsCount", "putAppliedVoucherData", "cart", "Lbuisnessmodels/Cart;", "toBundle", "Ltracking/models/SwimlaneVendorTracking;", "com_talabat_talabatlib_talabatlib"}, k = 1, mv = {1, 6, 0}, xi = 48)
    public static final class Companion {
        private Companion() {
        }

        public /* synthetic */ Companion(DefaultConstructorMarker defaultConstructorMarker) {
            this();
        }

        private final void LogAddressEvent(String str, AddressAnalyticsTracker addressAnalyticsTracker) {
            String locationAddress = addressAnalyticsTracker.getLocationAddress();
            String locationAddress2 = addressAnalyticsTracker.getLocationAddress();
            String locationLat = addressAnalyticsTracker.getLocationLat();
            String addressCount = addressAnalyticsTracker.getAddressCount();
            String locationLon = addressAnalyticsTracker.getLocationLon();
            String locationCity = addressAnalyticsTracker.getLocationCity();
            String locationArea = addressAnalyticsTracker.getLocationArea();
            String locationCountry = addressAnalyticsTracker.getLocationCountry();
            String screenType = addressAnalyticsTracker.getScreenType();
            String screenName = addressAnalyticsTracker.getScreenName();
            String locationMethod = addressAnalyticsTracker.getLocationMethod();
            String deliveryAddressStatus = addressAnalyticsTracker.getDeliveryAddressStatus();
            String apiMethod = addressAnalyticsTracker.getApiMethod();
            String apiResponse = addressAnalyticsTracker.getApiResponse();
            String geolocationAccuracy = addressAnalyticsTracker.getGeolocationAccuracy();
            String locationDialogueAccepted = addressAnalyticsTracker.getLocationDialogueAccepted();
            String locationDialogueType = addressAnalyticsTracker.getLocationDialogueType();
            String addressComponentType = addressAnalyticsTracker.getAddressComponentType();
            String countrySelected = addressAnalyticsTracker.getCountrySelected();
            String mapType = addressAnalyticsTracker.getMapType();
            String mapErrorMessage = addressAnalyticsTracker.getMapErrorMessage();
            String locationDistance = addressAnalyticsTracker.getLocationDistance();
            String journeyType = addressAnalyticsTracker.getJourneyType();
            Log.e(str, "Event_LOGlocationAddress" + locationAddress + "\nlocationAddress" + locationAddress2 + "\nlocationLat" + locationLat + "\naddresscount" + addressCount + "\nlocationLon" + locationLon + "\nlocationCity" + locationCity + "\nlocationArea" + locationArea + "\nlocationCountry" + locationCountry + "\nscreenType" + screenType + "\nscreenName" + screenName + "\nlocationMethod" + locationMethod + "\ndeliveryAddressStatus" + deliveryAddressStatus + "\napiMethod" + apiMethod + "\napiResponse" + apiResponse + "\ngeolocationAccuracy" + geolocationAccuracy + "\nlocationDialogueAccepted" + locationDialogueAccepted + "\nlocationDialogueType" + locationDialogueType + "\naddressComponentType" + addressComponentType + "\ncountrySelected" + countrySelected + "\nmapType" + mapType + "\nMapErrorMsg" + mapErrorMessage + "\ndistanceShift" + locationDistance + "\neventOrigin" + journeyType);
        }

        public static /* synthetic */ Bundle a(Companion companion, boolean z11, Bundle bundle, String str, int i11, Object obj) {
            if ((i11 & 4) != 0) {
                str = "cuisinefilter_cuisine";
            }
            return companion.addVendorListCuisinesProperties(z11, bundle, str);
        }

        private final void addCommonProperties(Bundle bundle, Context context) {
            String str;
            boolean z11;
            String str2;
            bundle.putString(ConstantsKt.SELECTED_LANGUAGE, TalabatAdjust.gtmLanguageSelected(GlobalDataModel.SelectedLanguage));
            if (LoggedInHelper.isLoggedIn()) {
                str = "true";
            } else {
                str = "false";
            }
            bundle.putString("userLoggedIn", str);
            bundle.putString("userId", getUserId());
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            String str3 = GlobalDataModel.SelectedCityName;
            boolean z12 = false;
            if (str3 == null || str3.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str4 = "N/A";
            if (z11) {
                str2 = str4;
            } else {
                str2 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str2);
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            String str5 = GlobalDataModel.googleAdId;
            if (str5 == null || str5.length() == 0) {
                z12 = true;
            }
            if (!z12) {
                str4 = GlobalDataModel.googleAdId;
            }
            bundle.putString(ConstantsKt.GOOGLE_AD_ID, str4);
        }

        private final Bundle addVendorListCuisinesProperties(boolean z11, Bundle bundle, String str) {
            String str2;
            if (z11) {
                str2 = "pickup_vendor_list";
            } else {
                str2 = "Restaurants Screen";
            }
            bundle.putString("screenType", "shop_list");
            bundle.putString("screenName", str2);
            if (z11) {
                str = "pickup_cuisine";
            }
            bundle.putString("eventOrigin", str);
            return bundle;
        }

        private final Bundle addVendorListFilterProperties(Bundle bundle, String str, String str2) {
            bundle.putString("shopSortingSelected", str);
            bundle.putString("shopFilteringSelected", str2);
            return bundle;
        }

        private final void deepLinkOpened(Context context, int i11, String str, String str2) {
            boolean z11;
            boolean z12;
            boolean z13;
            String str3;
            boolean z14;
            String str4;
            boolean z15;
            String str5;
            String str6;
            boolean z16 = false;
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (!z11 || i11 > 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            Bundle bundle = new Bundle();
            DeepLinkResult parse = DeepLinkParser.parse(str2);
            bundle.putString("isCampaign", String.valueOf(z12));
            String str7 = parse.source;
            if (str7 == null || str7.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            String str8 = "N/A";
            if (z13) {
                str3 = str8;
            } else {
                str3 = parse.source;
            }
            bundle.putString("source", str3);
            String str9 = parse.campaign;
            if (str9 == null || str9.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str4 = str8;
            } else {
                str4 = parse.campaign;
            }
            bundle.putString("campaign", str4);
            String str10 = parse.medium;
            if (str10 == null || str10.length() == 0) {
                z15 = true;
            } else {
                z15 = false;
            }
            if (z15) {
                str5 = str8;
            } else {
                str5 = parse.medium;
            }
            bundle.putString("medium", str5);
            String gclId = parse.getGclId();
            if (gclId == null || gclId.length() == 0) {
                z16 = true;
            }
            if (z16) {
                str6 = str8;
            } else {
                str6 = parse.getGclId();
            }
            bundle.putString("gclid", str6);
            if (TalabatUtils.isNullOrEmpty(str)) {
                str = str8;
            }
            bundle.putString("deeplink", str);
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (i11 > 0) {
                str8 = String.valueOf(i11);
            }
            bundle.putString("campaignCode", str8);
            TalabatFirebase.Companion.dispatchEvent(context, "deeplink_opened", bundle);
        }

        /* access modifiers changed from: private */
        public final String getAppliedCampaignIds() {
            Integer num;
            StringBuilder sb2 = new StringBuilder();
            Integer num2 = null;
            if (Cart.getInstance().selectedCoupon != null) {
                Coupon coupon = Cart.getInstance().selectedCoupon;
                if (coupon != null) {
                    num = Integer.valueOf(coupon.f13847id);
                } else {
                    num = null;
                }
                StringBuilderKt.addStringWithComma(sb2, num);
            }
            if (Cart.getInstance().getSelectedPromotion() != null) {
                Promotion selectedPromotion = Cart.getInstance().getSelectedPromotion();
                if (selectedPromotion != null) {
                    num2 = Integer.valueOf(selectedPromotion.f13866id);
                }
                StringBuilderKt.addStringWithComma(sb2, num2);
            }
            String sb3 = sb2.toString();
            Intrinsics.checkNotNullExpressionValue(sb3, "stringBuilder.toString()");
            if (StringsKt__StringsJVMKt.isBlank(sb3)) {
                return "N/A";
            }
            return sb3;
        }

        /* JADX WARNING: Code restructure failed: missing block: B:4:0x000e, code lost:
            r0 = (r0 = r0.result).f476id;
         */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        private final java.lang.String getAppliedVoucherId() {
            /*
                r1 = this;
                buisnessmodels.Cart r0 = buisnessmodels.Cart.getInstance()
                JsonModels.Response.LoyaltyVoucherResponse.LoyaltyVoucherRM r0 = r0.getLoyaltyVoucher()
                if (r0 == 0) goto L_0x0012
                JsonModels.Response.LoyaltyVoucherResponse.LoyaltyVoucherResult r0 = r0.result
                if (r0 == 0) goto L_0x0012
                java.lang.String r0 = r0.f476id
                if (r0 != 0) goto L_0x0014
            L_0x0012:
                java.lang.String r0 = "N/A"
            L_0x0014:
                return r0
            */
            throw new UnsupportedOperationException("Method not decompiled: tracking.gtm.TalabatGTM.Companion.getAppliedVoucherId():java.lang.String");
        }

        /* access modifiers changed from: private */
        public final Bundle getCommonBundle(Context context) {
            boolean z11;
            String str;
            Bundle bundle = new Bundle();
            bundle.putString("userId", getUserId());
            String str2 = GlobalDataModel.SelectedCityName;
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            } else {
                str = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationAddress", getLocationAddress(context));
            return bundle;
        }

        public static /* synthetic */ String getLocationAddress$default(Companion companion, Context context, int i11, Object obj) {
            if ((i11 & 1) != 0) {
                context = BaseApplication.Companion.getInstance();
            }
            return companion.getLocationAddress(context);
        }

        private final String getMenuSectionNamesForGA() {
            int i11;
            boolean z11;
            ArrayList<MenuSection> restaurantMenuSections = getRestaurantMenuSections();
            if (restaurantMenuSections == null || restaurantMenuSections.size() == 0 || restaurantMenuSections.size() <= 0) {
                return "";
            }
            StringBuilder sb2 = new StringBuilder();
            Iterator<MenuSection> it = restaurantMenuSections.iterator();
            while (it.hasNext()) {
                MenuSection next = it.next();
                if (sb2.length() > 0) {
                    sb2.append(IndicativeSentencesGeneration.DEFAULT_SEPARATOR);
                }
                sb2.append(next.f13864name);
            }
            String sb3 = sb2.toString();
            Intrinsics.checkNotNullExpressionValue(sb3, "stringBuilder.toString()");
            int length = sb3.length() - 1;
            int i12 = 0;
            boolean z12 = false;
            while (i12 <= length) {
                if (!z12) {
                    i11 = i12;
                } else {
                    i11 = length;
                }
                if (Intrinsics.compare((int) sb3.charAt(i11), 32) <= 0) {
                    z11 = true;
                } else {
                    z11 = false;
                }
                if (!z12) {
                    if (!z11) {
                        z12 = true;
                    } else {
                        i12++;
                    }
                } else if (!z11) {
                    break;
                } else {
                    length--;
                }
            }
            return sb3.subSequence(i12, length + 1).toString();
        }

        private final String getNonEmptyValue(String str) {
            return str == null || str.length() == 0 ? "N/A" : str;
        }

        private final QuickOrderInfo getSavedQuickOrderAddressData(Context context) {
            Object obj;
            SharedPreferences sharedPreferences = context.getSharedPreferences(GlobalConstants.PrefsConstants.getNAME(), 0);
            Gson gson = UniversalGson.INSTANCE.gson;
            if (sharedPreferences == null) {
                return null;
            }
            int i11 = GlobalDataModel.SelectedAreaId;
            StringBuilder sb2 = new StringBuilder();
            sb2.append(i11);
            if (!sharedPreferences.contains(sb2.toString())) {
                return null;
            }
            try {
                int i12 = GlobalDataModel.SelectedAreaId;
                StringBuilder sb3 = new StringBuilder();
                sb3.append(i12);
                String string = sharedPreferences.getString(sb3.toString(), "");
                Class cls = QuickOrderInfo.class;
                if (!(gson instanceof Gson)) {
                    obj = gson.fromJson(string, cls);
                } else {
                    obj = GsonInstrumentation.fromJson(gson, string, cls);
                }
                QuickOrderInfo quickOrderInfo = (QuickOrderInfo) obj;
                Address address = quickOrderInfo.address;
                String str = address.grl;
                address.grl = "";
                if (!TalabatUtils.isNullOrEmpty(str)) {
                    Address address2 = quickOrderInfo.address;
                    address2.grl = TalabatUtils.decodeFromBase64(address2.grl);
                }
                return quickOrderInfo;
            } catch (Exception e11) {
                e11.printStackTrace();
                return null;
            }
        }

        /* access modifiers changed from: private */
        public final String getSelectedAreaId() {
            boolean z11;
            String valueOf = String.valueOf(GlobalDataModel.SelectedAreaId);
            if (valueOf == null || valueOf.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                return "N/A";
            }
            return String.valueOf(GlobalDataModel.SelectedAreaId);
        }

        private final String getShopSponsoring() {
            if (CollectionsKt__CollectionsKt.arrayListOf("gem_swimlane_home", GetInlineAdsUseCaseKt.HEADER_DEVICE_CTA_VALUE, "Gem").contains(GlobalDataModel.ShopClickOrigin)) {
                return "false";
            }
            return RestaurantsEventsKt.sponsoringData(GlobalDataModel.SELECTED.getRestaurant());
        }

        private final Bundle getVoucherBundle(Context context, Restaurant restaurant, String str, String str2, String str3, String str4) {
            boolean z11;
            Bundle bundle = new Bundle();
            TalabatGTM.Companion.commonVoucherData(bundle, context, restaurant);
            boolean z12 = false;
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            }
            bundle.putString("coupon", str2);
            if (str3 == null || str3.length() == 0) {
                z12 = true;
            }
            if (z12) {
                str3 = "N/A";
            }
            bundle.putString(GrowthTrackerConstants.COUPON_VALUE, str3);
            bundle.putString(GrowthTrackerConstants.SUBMITTED_VOUCHER, str4);
            if (str == null) {
                str = "N/A";
            }
            bundle.putString("offerVoucherId", str);
            return bundle;
        }

        private final Bundle homeBannerBundle(String str, String str2, String str3, String str4, String str5, String str6, String str7, String str8, String str9, String str10, String str11, String str12, String str13, String str14, String str15, String str16, String str17) {
            Bundle bundle = new Bundle();
            bundle.putString("platform", "Android");
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            Companion companion = TalabatGTM.Companion;
            bundle.putString("locationCity", companion.getNonEmptyValue(GlobalDataModel.SelectedCityName));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("locationLat", companion.getLocationLatitude());
            bundle.putString("locationLon", companion.getLocationLongitude());
            String str18 = str3;
            bundle.putString("bannerZone", companion.getNonEmptyValue(str3));
            String str19 = str4;
            bundle.putString("bannerId", companion.getNonEmptyValue(str4));
            String str20 = str5;
            bundle.putString("bannerName", companion.getNonEmptyValue(str5));
            bundle.putString("userId", companion.getUserId());
            bundle.putString("userTimeStamp", companion.getCurrentTime());
            String str21 = str;
            bundle.putString("screenName", str);
            String str22 = str2;
            bundle.putString("screenType", str2);
            String str23 = str6;
            bundle.putString("shopPosition", companion.getNonEmptyValue(str6));
            bundle.putString("shopDeliveryTime", companion.getNonEmptyValue(str15));
            String str24 = str7;
            bundle.putString("chainId", companion.getNonEmptyValue(str7));
            String str25 = str8;
            bundle.putString("chainName", companion.getNonEmptyValue(str8));
            String str26 = str9;
            bundle.putString("shopId", companion.getNonEmptyValue(str9));
            String str27 = str10;
            bundle.putString("shopName", companion.getNonEmptyValue(str10));
            String str28 = str11;
            bundle.putString("shopStatus", companion.getNonEmptyValue(str11));
            bundle.putString("shopType", companion.getNonEmptyValue(str12));
            bundle.putString("shopArea", companion.getNonEmptyValue(str13));
            bundle.putString("shopMainCuisine", companion.getNonEmptyValue(str14));
            bundle.putString("shopClickOrigin", "banner");
            bundle.putString("deliveryProvider", companion.getNonEmptyValue(str16));
            bundle.putString("vendorSponsoringPlacement", companion.getNonEmptyValue(str17));
            return bundle;
        }

        private final String locationCity() {
            boolean z11;
            String str = GlobalDataModel.SelectedCityName;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                return "N/A";
            }
            return GlobalDataModel.SelectedCityName;
        }

        private final void onAlertEvent(Context context, String str, String str2, String str3, String str4) {
            boolean z11;
            boolean z12;
            Integer num;
            Bundle bundle = new Bundle();
            boolean z13 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str5 = "N/A";
            if (z11) {
                str = str5;
            }
            bundle.putString("screenType", str);
            bundle.putString(ConstantsKt.SELECTED_LANGUAGE, TalabatAdjust.gtmLanguageSelected(GlobalDataModel.SelectedLanguage));
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = str5;
            }
            bundle.putString("screenName", str2);
            Companion companion = TalabatGTM.Companion;
            bundle.putString("userTimeStamp", companion.getCurrentTime());
            bundle.putString("locationAddress", companion.getLocationAddress(context));
            bundle.putString("locationLat", companion.getLocationLatitude());
            bundle.putString("locationLon", companion.getLocationLongitude());
            String str6 = GlobalDataModel.SelectedCityName;
            if (str6 == null || str6.length() == 0) {
                z13 = true;
            }
            if (!z13) {
                str5 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str5);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("userId", companion.getUserId());
            bundle.putString(FeeTrackingConstantsKt.ATTRIBUTE_ALERT_TYPE, str3);
            Restaurant restaurant = Cart.getInstance().getRestaurant();
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.branchId);
            } else {
                num = null;
            }
            StringBuilder sb2 = new StringBuilder();
            sb2.append(num);
            bundle.putString("shopId", sb2.toString());
            TalabatFirebase.Companion.dispatchEvent(context, str4, bundle);
        }

        public static /* synthetic */ void onJokerLightboxExpanded$default(Companion companion, Context context, String str, Integer num, String str2, String str3, String str4, List list, int i11, Object obj) {
            companion.onJokerLightboxExpanded(context, (i11 & 2) != 0 ? null : str, (i11 & 4) != 0 ? null : num, (i11 & 8) != 0 ? null : str2, (i11 & 16) != 0 ? null : str3, (i11 & 32) != 0 ? null : str4, list);
        }

        public static /* synthetic */ void onJokerLightboxShown$default(Companion companion, Context context, String str, Integer num, String str2, String str3, String str4, int i11, Object obj) {
            String str5 = null;
            String str6 = (i11 & 2) != 0 ? null : str;
            Integer num2 = (i11 & 4) != 0 ? null : num;
            String str7 = (i11 & 8) != 0 ? null : str2;
            String str8 = (i11 & 16) != 0 ? null : str3;
            if ((i11 & 32) == 0) {
                str5 = str4;
            }
            companion.onJokerLightboxShown(context, str6, num2, str7, str8, str5);
        }

        public static /* synthetic */ void onJokerShopLoaded$default(Companion companion, Context context, String str, Restaurant restaurant, boolean z11, int i11, Object obj) {
            if ((i11 & 8) != 0) {
                z11 = false;
            }
            companion.onJokerShopLoaded(context, str, restaurant, z11);
        }

        private final String pickupRiderDeliveryProvider(Restaurant restaurant) {
            return restaurant != null ? Intrinsics.areEqual((Object) restaurant.isPickup(), (Object) Boolean.TRUE) : false ? restaurant.deliveryMode() : restaurantTypeForOrderingExperience(restaurant);
        }

        private final String preOrderRestaurantsCount(ArrayList<Restaurant> arrayList) {
            boolean z11;
            if (arrayList != null) {
                ArrayList arrayList2 = new ArrayList();
                for (T next : arrayList) {
                    if (((Restaurant) next).statusType == 5) {
                        z11 = true;
                    } else {
                        z11 = false;
                    }
                    if (z11) {
                        arrayList2.add(next);
                    }
                }
                String num = Integer.valueOf(arrayList2.size()).toString();
                if (num != null) {
                    return num;
                }
            }
            return "0";
        }

        public static /* synthetic */ void restaurantClicked$default(Companion companion, Context context, boolean z11, Restaurant restaurant, String str, String str2, String str3, String str4, String str5, String str6, PolygonEvents polygonEvents, String str7, HashMap hashMap, ShopClickedEvent.EventOriginSource eventOriginSource, boolean z12, String str8, Integer num, Integer num2, int i11, Object obj) {
            int i12 = i11;
            companion.restaurantClicked(context, z11, restaurant, str, str2, str3, str4, str5, str6, polygonEvents, str7, hashMap, eventOriginSource, z12, (i12 & 16384) != 0 ? null : str8, (32768 & i12) != 0 ? null : num, (i12 & 65536) != 0 ? null : num2);
        }

        public static /* synthetic */ void shopListLoaded$default(Companion companion, Context context, ArrayList arrayList, String str, String str2, String str3, boolean z11, String str4, String str5, String str6, String str7, boolean z12, int i11, int i12, String str8, PolygonEvents polygonEvents, String str9, HashMap hashMap, String str10, ShopClickedEvent.EventOriginSource eventOriginSource, Boolean bool, Boolean bool2, boolean z13, int i13, Object obj) {
            companion.shopListLoaded(context, arrayList, str, str2, str3, z11, str4, str5, str6, str7, z12, i11, i12, str8, polygonEvents, str9, hashMap, str10, eventOriginSource, (i13 & 524288) != 0 ? null : bool, (i13 & 1048576) != 0 ? null : bool2, (i13 & 2097152) != 0 ? false : z13);
        }

        private final Bundle toBundle(SwimlaneVendorTracking swimlaneVendorTracking) {
            Bundle bundle = new Bundle();
            bundle.putInt("item_id", swimlaneVendorTracking.getId());
            bundle.putInt(FirebaseAnalytics.Param.ITEM_NAME, swimlaneVendorTracking.getId());
            bundle.putString(FirebaseAnalytics.Param.ITEM_CATEGORY, swimlaneVendorTracking.getCategory());
            bundle.putString(FirebaseAnalytics.Param.ITEM_BRAND, swimlaneVendorTracking.getBrand());
            bundle.putString(FirebaseAnalytics.Param.ITEM_VARIANT, swimlaneVendorTracking.getVariant());
            bundle.putInt(FirebaseAnalytics.Param.INDEX, swimlaneVendorTracking.getIndex() + 1);
            return bundle;
        }

        private final void trackAdExEvent(String str, Bundle bundle) {
            String str2;
            HashMap hashMap = new HashMap();
            for (String next : bundle.keySet()) {
                Object obj = bundle.get(next);
                if (obj != null) {
                    str2 = obj.toString();
                } else {
                    str2 = null;
                }
                if (str2 == null) {
                    str2 = "";
                }
                hashMap.put(next, str2);
            }
            ObservabilityManager.trackAdExEvent(str, hashMap);
        }

        public static /* synthetic */ void voucherRedeemFailed$default(Companion companion, Context context, String str, String str2, String str3, String str4, Restaurant restaurant, String str5, int i11, Object obj) {
            companion.voucherRedeemFailed(context, (i11 & 2) != 0 ? null : str, str2, str3, str4, restaurant, str5);
        }

        public static /* synthetic */ void voucherRedeemSuccess$default(Companion companion, Context context, String str, String str2, String str3, Restaurant restaurant, String str4, int i11, Object obj) {
            if ((i11 & 2) != 0) {
                str = null;
            }
            companion.voucherRedeemSuccess(context, str, str2, str3, restaurant, str4);
        }

        public final void addCommonLocationData(@NotNull Bundle bundle, @NotNull Context context) {
            boolean z11;
            String str;
            Intrinsics.checkNotNullParameter(bundle, "<this>");
            Intrinsics.checkNotNullParameter(context, "context");
            bundle.putString("userId", getUserId());
            String str2 = GlobalDataModel.SelectedCityName;
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            } else {
                str = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationAddress", getLocationAddress(context));
        }

        public final void addCommonPolygonData(@NotNull Bundle bundle, @Nullable PolygonEvents polygonEvents) {
            Intrinsics.checkNotNullParameter(bundle, "<this>");
            if (polygonEvents != null) {
                bundle.putBoolean("floodActive", polygonEvents.isActive);
                bundle.putString("floodType", polygonEvents.eventType);
                bundle.putString("floodMessage", polygonEvents.eventMsg);
                bundle.putInt("floodValue", polygonEvents.eventValue);
                return;
            }
            bundle.putString("floodActive", "N/A");
            bundle.putString("floodType", "N/A");
            bundle.putString("floodMessage", "N/A");
            bundle.putString("floodValue", "N/A");
        }

        public final void addCommonShopData(@NotNull Bundle bundle, @Nullable Restaurant restaurant) {
            Integer num;
            String str;
            boolean z11;
            String str2;
            String str3;
            Integer num2;
            Boolean bool;
            Intrinsics.checkNotNullParameter(bundle, "<this>");
            String str4 = null;
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.f13872id);
            } else {
                num = null;
            }
            StringBuilder sb2 = new StringBuilder();
            sb2.append(num);
            bundle.putString("chainId", sb2.toString());
            String str5 = "N/A";
            bundle.putString("chainShops", str5);
            if (restaurant != null) {
                str = restaurant.f13873name;
            } else {
                str = null;
            }
            boolean z12 = true;
            int i11 = 0;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = str5;
            } else if (restaurant != null) {
                str2 = restaurant.f13873name;
            } else {
                str2 = null;
            }
            bundle.putString("chainName", str2);
            if (restaurant != null) {
                str3 = restaurant.branchName;
            } else {
                str3 = null;
            }
            if (!(str3 == null || str3.length() == 0)) {
                z12 = false;
            }
            if (!z12) {
                if (restaurant != null) {
                    str5 = restaurant.branchName;
                } else {
                    str5 = null;
                }
            }
            bundle.putString("shopName", str5);
            if (restaurant != null) {
                num2 = Integer.valueOf(restaurant.branchId);
            } else {
                num2 = null;
            }
            StringBuilder sb3 = new StringBuilder();
            sb3.append(num2);
            bundle.putString("shopId", sb3.toString());
            if (restaurant != null) {
                i11 = restaurant.statusType;
            }
            bundle.putString("shopStatus", getShopStatus(i11));
            bundle.putString("deliveryProvider", pickupRiderDeliveryProvider(restaurant));
            if (restaurant != null) {
                bool = restaurant.isPickup();
            } else {
                bool = null;
            }
            bundle.putString("orderPickup", String.valueOf(bool));
            if (restaurant != null) {
                str4 = restaurant.deliveryTime;
            }
            bundle.putString("shopDeliveryTime", str4);
        }

        @VisibleForTesting
        public final void addImpressionForRestaurantList(@NotNull Bundle bundle, @Nullable List<? extends Pair<Integer, ? extends Restaurant>> list, @Nullable String str) {
            ArrayList arrayList;
            Intrinsics.checkNotNullParameter(bundle, "bundle");
            if (list != null) {
                Iterable<Pair> iterable = list;
                arrayList = new ArrayList(CollectionsKt__IterablesKt.collectionSizeOrDefault(iterable, 10));
                for (Pair pair : iterable) {
                    Bundle bundle2 = new Bundle();
                    bundle2.putInt("item_id", ((Restaurant) pair.getSecond()).branchId);
                    bundle2.putInt(FirebaseAnalytics.Param.ITEM_NAME, ((Restaurant) pair.getSecond()).branchId);
                    bundle2.putString(FirebaseAnalytics.Param.ITEM_CATEGORY, TalabatGTMKt.toItemCategory((Restaurant) pair.getSecond()));
                    bundle2.putString(FirebaseAnalytics.Param.ITEM_BRAND, str);
                    bundle2.putString(FirebaseAnalytics.Param.ITEM_LIST_NAME, str);
                    bundle2.putString(FirebaseAnalytics.Param.ITEM_VARIANT, RestaurantsEventsKt.itemVariant((Restaurant) pair.getSecond()));
                    bundle2.putInt(FirebaseAnalytics.Param.INDEX, ((Number) pair.getFirst()).intValue());
                    arrayList.add(bundle2);
                }
            } else {
                arrayList = null;
            }
            bundle.putParcelableArrayList(FirebaseAnalytics.Param.ITEMS, arrayList);
        }

        public final void addMoreItemsClicked(@NotNull Context context, int i11) {
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            StringBuilder sb2 = new StringBuilder();
            sb2.append(i11);
            bundle.putString("restId", sb2.toString());
            TalabatFirebase.Companion.dispatchEvent(context, "add_more_item_cart_clicked", bundle);
        }

        @VisibleForTesting
        public final void addTelcoIfNeeded(@Nullable Boolean bool, @Nullable Boolean bool2, @NotNull Bundle bundle) {
            Intrinsics.checkNotNullParameter(bundle, "bundle");
            if (bool != null) {
                bundle.putBoolean("telcoExpired", bool.booleanValue());
            }
            if (bool2 != null) {
                bundle.putBoolean("telcoVerified", bool2.booleanValue());
            }
        }

        @VisibleForTesting
        public final void addVendorListProperties(@NotNull Bundle bundle, @Nullable String str, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(bundle, "bundle");
            bundle.putString("originalEventName", "shop_list_expanded");
            bundle.putString("screenType", ScreenNames.getScreenType("Restaurant List Screen"));
            bundle.putString("screenName", "Restaurant List Screen");
            bundle.putString("shopListType", listingType(restaurant));
            bundle.putString("listingPageType", str);
        }

        public final void addressErrorShown(@NotNull Context context, @NotNull AddressAnalyticsTracker addressAnalyticsTracker) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(addressAnalyticsTracker, "addressAnalyticsTracker");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", addressAnalyticsTracker.getLocationAddress());
            bundle.putString("locationLat", addressAnalyticsTracker.getLocationLat());
            bundle.putString("locationLon", addressAnalyticsTracker.getLocationLon());
            bundle.putString("locationCity", addressAnalyticsTracker.getLocationCity());
            bundle.putString("locationArea", addressAnalyticsTracker.getLocationArea());
            bundle.putString("locationCountry", addressAnalyticsTracker.getLocationCountry());
            bundle.putString("screenType", addressAnalyticsTracker.getScreenType());
            bundle.putString("screenName", addressAnalyticsTracker.getScreenName());
            bundle.putString("locationMethod", addressAnalyticsTracker.getLocationMethod());
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_DELIVERY_ADDRESS_STATUS, addressAnalyticsTracker.getDeliveryAddressStatus());
            bundle.putString("mapErrorMessage", addressAnalyticsTracker.getMapErrorMessage());
            bundle.putString("apiMethod", addressAnalyticsTracker.getApiMethod());
            bundle.putString("apiResponse", addressAnalyticsTracker.getApiResponse());
            bundle.putString("geolocationAccuracy", addressAnalyticsTracker.getGeolocationAccuracy());
            bundle.putString("locationDialogueAccepted", addressAnalyticsTracker.getLocationDialogueAccepted());
            bundle.putString("locationDialogueType", addressAnalyticsTracker.getLocationDialogueType());
            bundle.putString("addressComponentType", addressAnalyticsTracker.getAddressComponentType());
            bundle.putString("countrySelected", addressAnalyticsTracker.getCountrySelected());
            bundle.putString(Param.MAP_TYPE, addressAnalyticsTracker.getMapType());
            bundle.putString("eventOrigin", addressAnalyticsTracker.getJourneyType());
            TalabatFirebase.Companion.dispatchEvent(context, "address_error_shown", bundle);
            LogAddressEvent("address_error_shown", addressAnalyticsTracker);
        }

        public final void addressModificationShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void addressSelected(@NotNull Context context, @Nullable String str) {
            boolean z11;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("locationArea", str);
            TalabatFirebase.Companion.dispatchEvent(context, "address_selected", bundle);
        }

        public final void addressSubmitted(@NotNull Context context, @NotNull AddressAnalyticsTracker addressAnalyticsTracker) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(addressAnalyticsTracker, "addressAnalyticsTracker");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", addressAnalyticsTracker.getLocationAddress());
            bundle.putString("locationLat", addressAnalyticsTracker.getLocationLat());
            bundle.putString("locationLon", addressAnalyticsTracker.getLocationLon());
            bundle.putString("locationCity", addressAnalyticsTracker.getLocationCity());
            bundle.putString("locationArea", addressAnalyticsTracker.getLocationArea());
            bundle.putString("locationCountry", addressAnalyticsTracker.getLocationCountry());
            bundle.putString("screenType", addressAnalyticsTracker.getScreenType());
            bundle.putString("screenName", addressAnalyticsTracker.getScreenName());
            bundle.putString("locationMethod", addressAnalyticsTracker.getLocationMethod());
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_DELIVERY_ADDRESS_STATUS, addressAnalyticsTracker.getDeliveryAddressStatus());
            bundle.putString("mapErrorMessage", addressAnalyticsTracker.getMapErrorMessage());
            bundle.putString("apiMethod", addressAnalyticsTracker.getApiMethod());
            bundle.putString("apiResponse", addressAnalyticsTracker.getApiResponse());
            bundle.putString("geolocationAccuracy", addressAnalyticsTracker.getGeolocationAccuracy());
            bundle.putString("locationDialogueAccepted", addressAnalyticsTracker.getLocationDialogueAccepted());
            bundle.putString("locationDialogueType", addressAnalyticsTracker.getLocationDialogueType());
            bundle.putString("addressComponentType", addressAnalyticsTracker.getAddressComponentType());
            bundle.putString("countrySelected", addressAnalyticsTracker.getCountrySelected());
            bundle.putString(Param.MAP_TYPE, addressAnalyticsTracker.getMapType());
            bundle.putString("eventOrigin", addressAnalyticsTracker.getJourneyType());
            TalabatFirebase.Companion.dispatchEvent(context, "address_submitted", bundle);
            LogAddressEvent("address_submitted", addressAnalyticsTracker);
        }

        @NotNull
        public final String adjustAdGroup() {
            AdjustAttribution adjustAttribution = GlobalDataModel.adjustAttribution;
            String str = "N/A";
            if (adjustAttribution != null) {
                if (!TalabatUtils.isNullOrEmpty(adjustAttribution.adgroup)) {
                    str = GlobalDataModel.adjustAttribution.adgroup;
                }
                Intrinsics.checkNotNullExpressionValue(str, "{\n                if (!T…          }\n            }");
            }
            return str;
        }

        @NotNull
        public final String adjustCampaign() {
            AdjustAttribution adjustAttribution = GlobalDataModel.adjustAttribution;
            String str = "N/A";
            if (adjustAttribution != null) {
                if (!TalabatUtils.isNullOrEmpty(adjustAttribution.campaign)) {
                    str = GlobalDataModel.adjustAttribution.campaign;
                }
                Intrinsics.checkNotNullExpressionValue(str, "{\n                if (!T…          }\n            }");
            }
            return str;
        }

        @NotNull
        public final String adjustCreative() {
            AdjustAttribution adjustAttribution = GlobalDataModel.adjustAttribution;
            String str = "N/A";
            if (adjustAttribution != null) {
                if (!TalabatUtils.isNullOrEmpty(adjustAttribution.creative)) {
                    str = GlobalDataModel.adjustAttribution.creative;
                }
                Intrinsics.checkNotNullExpressionValue(str, "{\n                if (!T…          }\n            }");
            }
            return str;
        }

        @NotNull
        public final String adjustNetwork() {
            AdjustAttribution adjustAttribution = GlobalDataModel.adjustAttribution;
            String str = "N/A";
            if (adjustAttribution != null) {
                if (!TalabatUtils.isNullOrEmpty(adjustAttribution.network)) {
                    str = GlobalDataModel.adjustAttribution.network;
                }
                Intrinsics.checkNotNullExpressionValue(str, "{\n                if (!T…          }\n            }");
            }
            return str;
        }

        public final void allrestaurantsToggleSelected(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void app_installed(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4, @Nullable String str5) {
            boolean z11;
            boolean z12;
            boolean z13;
            boolean z14;
            String str6;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z15 = false;
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            }
            bundle.putString("installNetwork", str2);
            if (str3 == null || str3.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str3 = "N/A";
            }
            bundle.putString("installAdgroup", str3);
            if (str5 == null || str5.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str5 = "N/A";
            }
            bundle.putString("installCreative", str5);
            bundle.putString("isCampaign", str4);
            bundle.putString("installedDate", TalabatAdjust.createdAt());
            bundle.putString("deeplink", "N/A");
            String str7 = GlobalDataModel.googleAdId;
            if (str7 == null || str7.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str6 = "N/A";
            } else {
                str6 = GlobalDataModel.googleAdId;
            }
            bundle.putString(ConstantsKt.GOOGLE_AD_ID, str6);
            if (str == null || str.length() == 0) {
                z15 = true;
            }
            if (z15) {
                str = "N/A";
            }
            bundle.putString("adjustId", str);
            TalabatFirebase.Companion.dispatchEvent(context, "app_installed", bundle);
        }

        public final void areaModificationShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void backToCheckout(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void bannerEnterButtonClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void brandPageLoaded(@NotNull Context context, @Nullable String str, int i11) {
            boolean z11;
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString(ShopDetailsLoadedEvent.SHOP_RATING_QUALITY, "N/A");
            bundle.putString(ShopDetailsLoadedEvent.SHOP_RATING_QUANTITY, "N/A");
            boolean z12 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("chainName", str);
            bundle.putString("chainId", String.valueOf(i11));
            bundle.putString("chainShops", "N/A");
            bundle.putString("shopName", "N/A");
            bundle.putString("shopId", "N/A");
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str3 = GlobalDataModel.ShopClickOrigin;
            if (str3 == null || str3.length() == 0) {
                z12 = true;
            }
            if (z12) {
                str2 = "N/A";
            } else {
                str2 = GlobalDataModel.ShopClickOrigin;
            }
            bundle.putString("shopClickOrigin", str2);
            bundle.putString("shopCokeUpsell", "N/A");
            TalabatFirebase.Companion.dispatchEvent(context, "brand_details_loaded", bundle);
        }

        public final void cartClicked(@NotNull Context context, @Nullable String str) {
            boolean z11;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("cartClickLocation", str);
            TalabatFirebase.Companion.dispatchEvent(context, "cart_clicked", bundle);
        }

        public final void cartLoaded(@NotNull Context context, @Nullable Restaurant restaurant) {
            String str;
            String str2;
            String str3;
            String str4;
            String str5;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            Companion companion = TalabatGTM.Companion;
            bundle.putString("locationAddress", companion.getLocationAddress(context));
            bundle.putString("locationLat", companion.getLocationLatitude());
            bundle.putString("locationLon", companion.getLocationLongitude());
            String str6 = GlobalDataModel.SelectedCityName;
            boolean z11 = true;
            bundle.putString("locationCity", str6 == null || str6.length() == 0 ? "N/A" : GlobalDataModel.SelectedCityName);
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            String str7 = null;
            String str8 = restaurant != null ? restaurant.branchName : null;
            if (str8 == null || str8.length() == 0) {
                str = "N/A";
            } else {
                str = restaurant != null ? restaurant.branchName : null;
            }
            bundle.putString("shopName", str);
            Integer valueOf = restaurant != null ? Integer.valueOf(restaurant.branchId) : null;
            StringBuilder sb2 = new StringBuilder();
            sb2.append(valueOf);
            bundle.putString("shopId", sb2.toString());
            String str9 = restaurant != null ? restaurant.areaName : null;
            if (str9 == null || str9.length() == 0) {
                str2 = "N/A";
            } else {
                str2 = restaurant != null ? restaurant.areaName : null;
            }
            bundle.putString("shopArea", str2);
            bundle.putString("shopStatus", companion.getShopStatus(restaurant != null ? restaurant.statusType : 0));
            bundle.putString("chainShops", "N/A");
            String str10 = restaurant != null ? restaurant.f13873name : null;
            if (str10 == null || str10.length() == 0) {
                str3 = "N/A";
            } else {
                str3 = restaurant != null ? restaurant.f13873name : null;
            }
            bundle.putString("chainName", str3);
            bundle.putString("chainId", String.valueOf(restaurant != null ? Integer.valueOf(restaurant.f13872id) : null));
            String str11 = GlobalDataModel.ShopClickOrigin;
            Intrinsics.checkNotNullExpressionValue(str11, "ShopClickOrigin");
            if (str11.length() <= 0) {
                z11 = false;
            }
            if (z11) {
                str4 = GlobalDataModel.ShopClickOrigin;
            } else {
                str4 = "N/A";
            }
            bundle.putString("shopClickOrigin", str4);
            bundle.putString("userId", companion.getUserId());
            bundle.putString("shopListType", companion.listingType(restaurant));
            bundle.putString("screenType", "N/A");
            bundle.putString("screenName", "N/A");
            bundle.putString("userTimeStamp", companion.getCurrentTime());
            bundle.putString("shopType", companion.listingType(restaurant));
            bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
            bundle.putString(ProductTrackingProvider.QUANTITY, String.valueOf(Cart.getInstance().getCartCount()));
            bundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
            bundle.putString("deliveryProvider", companion.restaurantType(restaurant));
            bundle.putString("shopDeliveryFee", String.valueOf(Cart.getInstance().getDeliveryCharges()));
            bundle.putString("surchargeValue", TalabatGTMKt.getSurchargeValue());
            if (restaurant == null || !restaurant.hasCusine()) {
                str5 = "N/A";
            } else {
                str5 = restaurant.GACuisineString();
            }
            bundle.putString("shopMainCuisine", str5);
            bundle.putString("perseusClientId", "N/A");
            bundle.putString("perseusSessionId", "N/A");
            bundle.putString("perseusHitId", "N/A");
            if (restaurant != null) {
                str7 = restaurant.deliveryTime;
            }
            if (str7 == null) {
                str7 = "N/A";
            } else {
                Intrinsics.checkNotNullExpressionValue(str7, "restaurant?.deliveryTime ?: \"N/A\"");
            }
            bundle.putString("shopDeliveryTime", str7);
            bundle.putString("userPreferences", "N/A");
            bundle.putString("shopOfferType", companion.getOfferType(restaurant));
            bundle.putString("shopWithOffer", companion.getShopOffer(restaurant));
            bundle.putString(ShopDetailsLoadedEvent.OFFER_CAMPAIGN_ID, companion.getAppliedCampaignIds());
            TalabatFirebase.Companion.dispatchEvent(context, FeeTrackingConstantsKt.EVENT_CART_LOADED, bundle);
        }

        public final void changeCountry(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void changeLanguage(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void channelClicked(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void checkout_clicked(@NotNull Context context, int i11, int i12, @Nullable Restaurant restaurant, @NotNull String str, @NotNull String str2) {
            boolean z11;
            String str3;
            boolean z12;
            boolean z13;
            String str4;
            boolean z14;
            String str5;
            Integer num;
            String str6;
            boolean z15;
            String str7;
            boolean z16;
            String str8;
            Boolean bool;
            String str9;
            Float f11;
            String str10;
            boolean z17;
            String str11;
            Float f12;
            String str12;
            String str13;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "screenName");
            Intrinsics.checkNotNullParameter(str2, "screenType");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationLat", getLocationLatitude());
            String str14 = GlobalDataModel.SelectedCityName;
            boolean z18 = false;
            if (str14 == null || str14.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str3 = "N/A";
            } else {
                str3 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str3);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("userId", getUserId());
            if (str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = "N/A";
            }
            bundle.putString("screenType", str2);
            if (str.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str = "N/A";
            }
            bundle.putString("screenName", str);
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("shopType", listingType(restaurant));
            Float f13 = null;
            if (restaurant != null) {
                str4 = restaurant.branchName;
            } else {
                str4 = null;
            }
            if (str4 == null || str4.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str5 = "N/A";
            } else if (restaurant != null) {
                str5 = restaurant.branchName;
            } else {
                str5 = null;
            }
            bundle.putString("shopName", str5);
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.branchId);
            } else {
                num = null;
            }
            bundle.putString("shopId", String.valueOf(num));
            bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
            bundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
            if (restaurant != null) {
                str6 = restaurant.areaName;
            } else {
                str6 = null;
            }
            if (str6 == null || str6.length() == 0) {
                z15 = true;
            } else {
                z15 = false;
            }
            if (z15) {
                str7 = "N/A";
            } else if (restaurant != null) {
                str7 = restaurant.areaName;
            } else {
                str7 = null;
            }
            bundle.putString("shopArea", str7);
            bundle.putString(ShopDetailsLoadedEvent.SHOP_WITH_IMAGES, "N/A");
            bundle.putString("shopCategorySelected", "N/A");
            bundle.putString("shopWithOffer", getShopOffer(restaurant));
            String str15 = GlobalDataModel.ShopClickOrigin;
            Intrinsics.checkNotNullExpressionValue(str15, "ShopClickOrigin");
            if (str15.length() > 0) {
                z16 = true;
            } else {
                z16 = false;
            }
            if (z16) {
                str8 = GlobalDataModel.ShopClickOrigin;
            } else {
                str8 = "N/A";
            }
            bundle.putString("shopClickOrigin", str8);
            bundle.putString("shopOfferType", getOfferType(restaurant));
            if (restaurant != null) {
                bool = Boolean.valueOf(restaurant.isUpSelling);
            } else {
                bool = null;
            }
            bundle.putString("shopCokeUpsell", String.valueOf(bool));
            bundle.putString("shopPaymentMethods", getPaymentMethods(restaurant));
            if (getRestaurantMenuSections().size() > 0) {
                str9 = String.valueOf(getRestaurantMenuSections().size());
            } else {
                str9 = "0";
            }
            bundle.putString(ShopDetailsLoadedEvent.MENU_CATEGORY_NUMBER, str9);
            if (restaurant != null) {
                f11 = Float.valueOf(restaurant.getRating());
            } else {
                f11 = null;
            }
            bundle.putString(ShopDetailsLoadedEvent.SHOP_RATING_QUALITY, String.valueOf(f11));
            if (restaurant != null) {
                str10 = restaurant.getTotalRating();
            } else {
                str10 = null;
            }
            if (str10 == null || str10.length() == 0) {
                z17 = true;
            } else {
                z17 = false;
            }
            if (z17) {
                str11 = "N/A";
            } else if (restaurant != null) {
                str11 = restaurant.getTotalRating();
            } else {
                str11 = null;
            }
            bundle.putString(ShopDetailsLoadedEvent.SHOP_RATING_QUANTITY, str11);
            if (restaurant != null) {
                f12 = Float.valueOf(restaurant.getMinimumAmount());
            } else {
                f12 = null;
            }
            bundle.putString(ShopDetailsLoadedEvent.SHOP_MINIMUM_ORDER_VALUE, String.valueOf(f12));
            if (restaurant != null) {
                str12 = restaurant.deliveryTime;
            } else {
                str12 = null;
            }
            if (str12 == null || str12.length() == 0) {
                z18 = true;
            }
            if (z18) {
                str13 = "N/A";
            } else if (restaurant != null) {
                str13 = restaurant.deliveryTime;
            } else {
                str13 = null;
            }
            bundle.putString("shopDeliveryTime", str13);
            if (restaurant != null) {
                f13 = Float.valueOf(restaurant.deliveryCharges);
            }
            bundle.putString("shopDeliveryFee", String.valueOf(f13));
            bundle.putString("surchargeValue", String.valueOf(Cart.getInstance().getServiceFee()));
            bundle.putString(ProductTrackingProvider.QUANTITY, "N/A");
            bundle.putString("deliveryProvider", restaurantTypeForOrderingExperience(restaurant));
            TalabatFirebase.Companion.dispatchEvent(context, FeeTrackingConstantsKt.EVENT_CHECKOUT_CLICKED, bundle);
        }

        public final void choiceScreenOpened(@NotNull Context context, @Nullable CartMenuItem cartMenuItem, @Nullable Restaurant restaurant) {
            boolean z11;
            String str;
            Integer num;
            String str2;
            boolean z12;
            String str3;
            Integer num2;
            String str4;
            boolean z13;
            String str5;
            String str6;
            boolean z14;
            String str7;
            String str8;
            MenuSection menuSection;
            MenuSection menuSection2;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            String str9 = GlobalDataModel.SelectedCityName;
            if (str9 == null || str9.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str10 = "N/A";
            if (z11) {
                str = str10;
            } else {
                str = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("userId", getUserId());
            bundle.putString("screenType", ScreenNames.getScreenType(ScreenNames.ITEM_CHOICE_SCREEN));
            bundle.putString("screenName", ScreenNames.ITEM_CHOICE_SCREEN);
            bundle.putString("userTimeStamp", getCurrentTime());
            Float f11 = null;
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.branchId);
            } else {
                num = null;
            }
            bundle.putString("shopId", String.valueOf(num));
            bundle.putString("eventOrigin", str10);
            if (cartMenuItem != null) {
                str2 = cartMenuItem.f13862name;
            } else {
                str2 = null;
            }
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str3 = str10;
            } else if (cartMenuItem != null) {
                str3 = cartMenuItem.f13862name;
            } else {
                str3 = null;
            }
            bundle.putString(ProductTrackingProvider.NAME, str3);
            if (cartMenuItem != null) {
                num2 = Integer.valueOf(cartMenuItem.f13861id);
            } else {
                num2 = null;
            }
            StringBuilder sb2 = new StringBuilder();
            sb2.append(num2);
            bundle.putString("productSku", sb2.toString());
            if (restaurant != null) {
                str4 = restaurant.branchName;
            } else {
                str4 = null;
            }
            if (str4 == null || str4.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str5 = str10;
            } else if (restaurant != null) {
                str5 = restaurant.branchName;
            } else {
                str5 = null;
            }
            bundle.putString("shopName", str5);
            bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
            bundle.putString(ProductTrackingProvider.QUANTITY, "1");
            if (cartMenuItem == null || (menuSection2 = cartMenuItem.menuSection) == null) {
                str6 = null;
            } else {
                str6 = menuSection2.f13864name;
            }
            if (str6 == null || str6.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str7 = str10;
            } else if (cartMenuItem == null || (menuSection = cartMenuItem.menuSection) == null) {
                str7 = null;
            } else {
                str7 = menuSection.f13864name;
            }
            bundle.putString("productCategory", str7);
            bundle.putString("productVariant", str10);
            if (cartMenuItem != null) {
                f11 = Float.valueOf(cartMenuItem.getTotalPrice());
            }
            bundle.putString(ProductTrackingProvider.PRICE, String.valueOf(f11));
            if (cartMenuItem != null) {
                str8 = String.valueOf(cartMenuItem.getAllQuantityOfMandatoryAndOptionalChoices()[0]);
            } else {
                str8 = str10;
            }
            bundle.putString("productMandatoryChoiceQuantity", str8);
            bundle.putString("productMandatoryChoicePreselected", "false");
            if (cartMenuItem != null) {
                str10 = String.valueOf(cartMenuItem.getAllQuantityOfMandatoryAndOptionalChoices()[1]);
            }
            bundle.putString("productOptionalChoiceQuantity", str10);
            TalabatFirebase.Companion.dispatchEvent(context, "product_choice_opened", bundle);
        }

        public final void closedAfterMapError(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void commonVoucherData(@NotNull Bundle bundle, @NotNull Context context, @Nullable Restaurant restaurant) {
            boolean z11;
            String str;
            String str2;
            boolean z12;
            String str3;
            Integer num;
            Integer num2;
            String str4;
            Intrinsics.checkNotNullParameter(bundle, "<this>");
            Intrinsics.checkNotNullParameter(context, "context");
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str5 = GlobalDataModel.SelectedCityName;
            boolean z13 = false;
            if (str5 == null || str5.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            } else {
                str = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str);
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            String str6 = null;
            if (restaurant != null) {
                str2 = restaurant.branchName;
            } else {
                str2 = null;
            }
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str3 = "N/A";
            } else if (restaurant != null) {
                str3 = restaurant.branchName;
            } else {
                str3 = null;
            }
            bundle.putString("shopName", str3);
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.branchId);
            } else {
                num = null;
            }
            StringBuilder sb2 = new StringBuilder();
            sb2.append(num);
            bundle.putString("shopId", sb2.toString());
            if (restaurant != null) {
                num2 = Integer.valueOf(restaurant.f13872id);
            } else {
                num2 = null;
            }
            StringBuilder sb3 = new StringBuilder();
            sb3.append(num2);
            bundle.putString("chainId", sb3.toString());
            bundle.putString("chainShops", "N/A");
            if (restaurant != null) {
                str4 = restaurant.f13873name;
            } else {
                str4 = null;
            }
            if (str4 == null || str4.length() == 0) {
                z13 = true;
            }
            if (z13) {
                str6 = "N/A";
            } else if (restaurant != null) {
                str6 = restaurant.f13873name;
            }
            bundle.putString("chainName", str6);
            bundle.putString("userId", getUserId());
            bundle.putString("screenType", "checkout");
            bundle.putString("screenName", "N/A");
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
            bundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
            bundle.putString("userPreferences", "N/A");
            bundle.putString("shopOfferType", getOfferType(restaurant));
            bundle.putString("shopWithOffer", getShopOffer(restaurant));
        }

        public final void connectionLostClosed(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void connectionLostShown(@NotNull Context context, @Nullable String str, @Nullable String str2) {
            boolean z11;
            String str3;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z12 = false;
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str3 = "N/A";
            } else {
                str3 = str2;
            }
            bundle.putString("screenName", str3);
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            }
            if (z12) {
                str = "N/A";
            }
            bundle.putString("connectionErrorMessage", str);
            TalabatFirebase.Companion.dispatchEvent(context, "connection_error_shown", bundle);
        }

        public final void continuedAfterMapError(@NotNull Context context, double d11, double d12, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void cuisineSelected(@NotNull Context context, int i11, boolean z11) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void cuisineSelected(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void cuisineSelectedUpdated(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void darkStoresShown(@NotNull Context context, @NotNull String str, @NotNull Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "type");
            Intrinsics.checkNotNullParameter(restaurant, CustomerInfoLocalDataSourceImpl.KEY);
            Bundle bundle = new Bundle();
            bundle.putString("shopListType", str);
            bundle.putString("shopName", restaurant.f13873name);
            bundle.putString("shopId", String.valueOf(restaurant.branchId));
            bundle.putString("chainId", String.valueOf(restaurant.f13872id));
            bundle.putString("chainName", restaurant.branchName);
            bundle.putString("deliveryProvider", "shop_delivery");
            bundle.putString("shopOfferType", getOfferType(restaurant));
            String shopStatus = getShopStatus(restaurant.statusType);
            String str2 = "N/A";
            if (shopStatus == null) {
                shopStatus = str2;
            }
            bundle.putString("shopStatus", shopStatus);
            bundle.putString("shopDeliveryTime", restaurant.deliveryTime);
            String cuisineString = restaurant.getCuisineString();
            if (cuisineString != null) {
                str2 = cuisineString;
            }
            bundle.putString("shopCategoryList", str2);
            bundle.putString("shopClickOrigin", "lisitng");
            TalabatFirebase.Companion.dispatchEvent(context, "darkstore_shown", bundle);
        }

        public final void decreaseItemQuantity(@NotNull Context context, @Nullable CartMenuItem cartMenuItem) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void deliveryTimeSelected(@NotNull Context context, int i11, @Nullable String str, @Nullable String str2, int i12, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void educationalMessageClosed(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void exitPoll(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void experssCheckoutClicked(@NotNull Context context, int i11, int i12, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void gemCollectionsListUpdated(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4, @Nullable String str5, @Nullable String str6, @NotNull String str7, @NotNull ShopClickedEvent.EventOriginSource eventOriginSource) {
            boolean z11;
            String str8;
            String str9;
            boolean z12;
            String str10;
            boolean z13;
            String str11;
            boolean z14;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str7, "shopIds");
            Intrinsics.checkNotNullParameter(eventOriginSource, "eventOriginSource");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str12 = GlobalDataModel.SelectedCityName;
            boolean z15 = false;
            if (str12 == null || str12.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str8 = "N/A";
            } else {
                str8 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str8);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (StringsKt__StringsJVMKt.equals(str2, TtmlNode.COMBINE_ALL, true)) {
                str9 = "0";
            } else {
                str9 = "1";
            }
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOP_CATEGORY_SELECTED_QUANTITY, str9);
            ShopClickedEvent shopClickedEvent = ShopClickedEvent.INSTANCE;
            if (shopClickedEvent.toShopFilterSelected$com_talabat_talabatlib_talabatlib(eventOriginSource) != null) {
                str2 = shopClickedEvent.toShopFilterSelected$com_talabat_talabatlib_talabatlib(eventOriginSource);
            }
            bundle.putString("shopFilteringSelected", str2);
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOP_ATTRIBUTES_SELECTED, "N/A");
            bundle.putString("shopCategorySelected", eventOriginSource.getShopCategory());
            if (str3 == null || str3.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str10 = "N/A";
            } else {
                str10 = str3.toLowerCase(Locale.ROOT);
                Intrinsics.checkNotNullExpressionValue(str10, "this as java.lang.String).toLowerCase(Locale.ROOT)");
            }
            bundle.putString("channelIndex", str10);
            if (str4 == null || str4.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str11 = "N/A";
            } else {
                str11 = str4.toLowerCase(Locale.ROOT);
                Intrinsics.checkNotNullExpressionValue(str11, "this as java.lang.String).toLowerCase(Locale.ROOT)");
            }
            bundle.putString("channel", str11);
            bundle.putString("jokerRequestId", str);
            if (str5 == null || str5.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str5 = "N/A";
            }
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOP_LIST_TRIGGER, str5);
            bundle.putString("swimlaneTitle", str6);
            bundle.putString("userId", getUserId());
            bundle.putString("screenType", ScreenNames.getScreenType("Home Screen"));
            bundle.putString("screenName", "Restaurant List Screen");
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("shopListType", StoreInfoTrackingProvider.SHOP_TYPE_RESTAURANT);
            if (str7.length() == 0) {
                z15 = true;
            }
            if (z15) {
                str7 = "N/A";
            }
            bundle.putString("shopsIds", str7);
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_CHAIN_IDS, "N/A");
            getTalabatFirebase().dispatchEvent(context, ShopListUpdatedEvent.EVENT_NAME, bundle);
        }

        public final void gemFloatingButtonShown(@NotNull Context context) {
            boolean z11;
            String str;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str2 = GlobalDataModel.SelectedCityName;
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            } else {
                str = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str);
            TalabatFirebase.Companion.dispatchEvent(context, GemFloatingShownEvent.EVENT_NAME, bundle);
        }

        public final void geoLocationClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("screenName", "N/A");
            bundle.putString(ConstantsKt.SELECTED_LANGUAGE, TalabatAdjust.gtmLanguageSelected(GlobalDataModel.SelectedLanguage));
            TalabatFirebase.Companion.dispatchEvent(context, "geolocation_clicked", bundle);
        }

        public final void geoLocationClickedFromLanding(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4, @Nullable String str5, @Nullable String str6) {
            boolean z11;
            boolean z12;
            boolean z13;
            boolean z14;
            boolean z15;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z16 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("screenName", str);
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = "N/A";
            }
            bundle.putString("screenType", str2);
            if (str3 == null || str3.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str3 = "N/A";
            }
            bundle.putString("geolocationAccuracy", str3);
            if (str4 == null || str4.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str4 = "N/A";
            }
            bundle.putString("locationLat", str4);
            if (str5 == null || str5.length() == 0) {
                z15 = true;
            } else {
                z15 = false;
            }
            if (z15) {
                str5 = "N/A";
            }
            bundle.putString("locationLon", str5);
            if (str6 == null || str6.length() == 0) {
                z16 = true;
            }
            if (z16) {
                str6 = "N/A";
            }
            bundle.putString("locationCountry", str6);
            TalabatFirebase.Companion.dispatchEvent(context, "geolocation_clicked", bundle);
        }

        public final void geoLocationRecieved(@NotNull Context context, int i11, boolean z11) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void geolocationDialogueAccepted(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4, @NotNull String str5) {
            boolean z11;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str5, "locationStatus");
            Bundle bundle = new Bundle();
            boolean z12 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("screenName", str);
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            }
            if (z12) {
                str2 = "N/A";
            }
            bundle.putString("screenType", str2);
            bundle.putString("locationDialogueAccepted", str3);
            bundle.putString("locationDialogueType", str4);
            bundle.putString("gpsStatus", str5);
            TalabatFirebase.Companion.dispatchEvent(context, "geolocation_dialogue_accepted", bundle);
        }

        @VisibleForTesting
        public final void getAgeVerificationEventBundle(@NotNull Bundle bundle, @Nullable String str) {
            boolean z11;
            Intrinsics.checkNotNullParameter(bundle, "bundle");
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("screenName", str);
            bundle.putString("userId", getUserId());
            bundle.putString("screenType", "checkout");
        }

        @NotNull
        public final String getCampaignIds() {
            MenuItemsResponseModel menuItemsResponseModel = GlobalDataModel.JSON.menuItemsResponseModel;
            if (menuItemsResponseModel == null) {
                return "N/A";
            }
            StringBuilder sb2 = new StringBuilder();
            StringBuilderKt.addStringWithComma(sb2, menuItemsResponseModel.getCampaignIdForAllPromotions());
            StringBuilderKt.addStringWithComma(sb2, menuItemsResponseModel.getPromotionalMenuSectionId());
            StringBuilderKt.addStringWithComma(sb2, GlobalDataModel.PARALLELBIN.getAllBinCampaignIdsForGA());
            String sb3 = sb2.toString();
            Intrinsics.checkNotNullExpressionValue(sb3, "stringBuilder.toString()");
            if (!(!StringsKt__StringsJVMKt.isBlank(sb3))) {
                return "N/A";
            }
            String sb4 = sb2.toString();
            Intrinsics.checkNotNullExpressionValue(sb4, "stringBuilder.toString()");
            return sb4;
        }

        public final void getCodeClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        @NotNull
        public final String getCurrentTime() {
            if (Build.VERSION.SDK_INT >= 26) {
                String format = ZonedDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss.SSS Z", Locale.ENGLISH));
                Intrinsics.checkNotNullExpressionValue(format, "now().format(formatter)");
                return format;
            }
            String format2 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS Z", Locale.ENGLISH).format(new Date());
            Intrinsics.checkNotNullExpressionValue(format2, "formatter.format(Date())");
            return format2;
        }

        @NotNull
        public final String getLocationAddress(@NotNull Context context) {
            Address address;
            Intrinsics.checkNotNullParameter(context, "context");
            boolean isLoggedIn = Customer.getInstance().isLoggedIn();
            Address selectedCustomerAddress = Customer.getInstance().getSelectedCustomerAddress();
            QuickOrderInfo savedQuickOrderAddressData = getSavedQuickOrderAddressData(context);
            if (savedQuickOrderAddressData != null) {
                address = savedQuickOrderAddressData.address;
            } else {
                address = null;
            }
            if (!isLoggedIn || selectedCustomerAddress == null) {
                selectedCustomerAddress = address;
            }
            if (selectedCustomerAddress != null) {
                String selectedCountryIso = TalabatAdjust.getSelectedCountryIso();
                String str = selectedCustomerAddress.areaName + IndicativeSentencesGeneration.DEFAULT_SEPARATOR + selectedCustomerAddress.block + IndicativeSentencesGeneration.DEFAULT_SEPARATOR + selectedCustomerAddress.street + IndicativeSentencesGeneration.DEFAULT_SEPARATOR + selectedCustomerAddress.buildingNo + IndicativeSentencesGeneration.DEFAULT_SEPARATOR + selectedCustomerAddress.floor + IndicativeSentencesGeneration.DEFAULT_SEPARATOR + selectedCustomerAddress.extraDirections + IndicativeSentencesGeneration.DEFAULT_SEPARATOR + selectedCountryIso;
                if (str == null) {
                    return "N/A";
                }
                return str;
            }
            return "N/A";
        }

        @NotNull
        public final String getLocationLatitude() {
            return String.valueOf(GlobalDataModel.RECENT_LATLONG.getLatitude());
        }

        @NotNull
        public final String getLocationLongitude() {
            return String.valueOf(GlobalDataModel.RECENT_LATLONG.getLongitude());
        }

        @NotNull
        public final String getOfferType(@Nullable Restaurant restaurant) {
            if (restaurant == null) {
                return "N/A";
            }
            StringBuilder sb2 = new StringBuilder();
            if (restaurant.isDiscountAvaialble) {
                sb2.append("discount");
            }
            if (restaurant.isPromotionAvailable) {
                if (sb2.length() > 0) {
                    sb2.append(",");
                }
                sb2.append("promotion");
            }
            if (restaurant.upsellId != 0) {
                if (sb2.length() > 0) {
                    sb2.append(",");
                }
                sb2.append(restaurant.upsellName);
            }
            String sb3 = sb2.toString();
            Intrinsics.checkNotNullExpressionValue(sb3, "shopOfferType.toString()");
            return sb3;
        }

        @NotNull
        public final String getPaymentMethod(int i11) {
            return i11 != 0 ? i11 != 1 ? i11 != 2 ? i11 != 3 ? i11 != 4 ? i11 != 5 ? "cash" : "boloro" : "card_on_del" : "talabat_credit" : WalletTopUpCreditCardSelectionEventKt.ATTRIBUTE_VALUE_ORDER_PAYMENT_METHOD : "debit_card" : "cash";
        }

        @NotNull
        public final String getPaymentMethods(@Nullable Restaurant restaurant) {
            StringBuilder sb2 = new StringBuilder();
            if (restaurant == null) {
                return "N/A";
            }
            if (restaurant.acceptsCash) {
                if (sb2.length() > 0) {
                    sb2.append(",");
                }
                sb2.append("cash");
            }
            if (restaurant.acceptsDebit) {
                if (sb2.length() > 0) {
                    sb2.append(",");
                }
                sb2.append("debit_card");
            }
            if (restaurant.acceptsCredit) {
                if (sb2.length() > 0) {
                    sb2.append(",");
                }
                sb2.append(WalletTopUpCreditCardSelectionEventKt.ATTRIBUTE_VALUE_ORDER_PAYMENT_METHOD);
            }
            String sb3 = sb2.toString();
            Intrinsics.checkNotNullExpressionValue(sb3, "paymentMethodsStringBuilder.toString()");
            return sb3;
        }

        @Nullable
        public final Restaurant getRestaurantForDarkstores(@Nullable String str) {
            Object obj;
            Object obj2 = GlobalDataModel.SELECTED.restaurant;
            if (obj2 == null && str != null) {
                try {
                    Gson gson = UniversalGson.INSTANCE.gson;
                    Class cls = Restaurant.class;
                    if (!(gson instanceof Gson)) {
                        obj = gson.fromJson(str, cls);
                    } else {
                        obj = GsonInstrumentation.fromJson(gson, str, cls);
                    }
                    obj2 = obj;
                } catch (Exception unused) {
                }
            }
            return (Restaurant) obj2;
        }

        @NotNull
        public final ArrayList<MenuSection> getRestaurantMenuSections() {
            MenuItemRM menuItemRM;
            MenuSection[] menuSectionArr;
            ArrayList arrayList = new ArrayList();
            ArrayList<MenuSection> arrayList2 = new ArrayList<>();
            MenuItemsResponseModel menuItemsResponseModel = GlobalDataModel.JSON.menuItemsResponseModel;
            if (!(menuItemsResponseModel == null || (menuItemRM = menuItemsResponseModel.menu) == null || (menuSectionArr = menuItemRM.menuSection) == null || menuSectionArr == null)) {
                arrayList.addAll(Arrays.asList(Arrays.copyOf(menuSectionArr, menuSectionArr.length)));
                int size = arrayList.size();
                boolean z11 = false;
                for (int i11 = 0; i11 < size; i11++) {
                    if (Integration.isGemActive()) {
                        if (((MenuSection) arrayList.get(i11)).items != null && ((MenuSection) arrayList.get(i11)).items.length >= 1) {
                            int length = ((MenuSection) arrayList.get(i11)).items.length;
                            for (int i12 = 0; i12 < length; i12++) {
                                if (!((MenuSection) arrayList.get(i11)).items[i12].isPromotional && !((MenuSection) arrayList.get(i11)).items[i12].excludedFromGem) {
                                    z11 = true;
                                }
                            }
                            if (z11) {
                                arrayList2.add(arrayList.get(i11));
                                z11 = false;
                            }
                        }
                    } else if (((MenuSection) arrayList.get(i11)).items != null && ((MenuSection) arrayList.get(i11)).items.length >= 1) {
                        arrayList2.add(arrayList.get(i11));
                    }
                }
            }
            return arrayList2;
        }

        @NotNull
        public final String getScreenName(int i11, @Nullable String str) {
            boolean z11;
            switch (i11) {
                case 0:
                    return "Restaurant " + str;
                case 1:
                    return "Grocery " + str;
                case 2:
                    return "Pharmacy " + str;
                case 3:
                    return "flowers " + str;
                case 4:
                    return "electronics " + str;
                case 5:
                    return "Pet shop " + str;
                case 6:
                    return "Cosmetic " + str;
                default:
                    if (str == null || str.length() == 0) {
                        z11 = true;
                    } else {
                        z11 = false;
                    }
                    if (z11) {
                        return "N/A";
                    }
                    return str;
            }
        }

        @NotNull
        public final String getShopOffer(@Nullable Restaurant restaurant) {
            boolean z11 = false;
            if (restaurant != null && (restaurant.isDiscountAvaialble || restaurant.isMealDealAvailable || restaurant.isCouponAvailable || restaurant.isPromotionAvailable || restaurant.upsellId != 0)) {
                z11 = true;
            }
            return String.valueOf(z11);
        }

        @Nullable
        public final String getShopStatus(int i11) {
            return i11 != 0 ? i11 != 1 ? i11 != 2 ? i11 != 4 ? i11 != 5 ? "N/A" : "pre-order" : "prayer" : SDKCoreEvent.ForegroundStatus.VALUE_BUSY : "closed" : "open";
        }

        /* JADX WARNING: Code restructure failed: missing block: B:1:0x0002, code lost:
            r2 = (datamodels.Restaurant) kotlin.collections.CollectionsKt___CollectionsKt.getOrNull(r2, 0);
         */
        @org.jetbrains.annotations.NotNull
        @androidx.annotation.VisibleForTesting
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public final java.lang.String getShopTypeForTracking(@org.jetbrains.annotations.Nullable java.util.ArrayList<datamodels.Restaurant> r2) {
            /*
                r1 = this;
                if (r2 == 0) goto L_0x0010
                r0 = 0
                java.lang.Object r2 = kotlin.collections.CollectionsKt___CollectionsKt.getOrNull(r2, r0)
                datamodels.Restaurant r2 = (datamodels.Restaurant) r2
                if (r2 == 0) goto L_0x0010
                java.lang.String r2 = r2.getShopType()
                goto L_0x0011
            L_0x0010:
                r2 = 0
            L_0x0011:
                if (r2 != 0) goto L_0x0015
                java.lang.String r2 = "Undefined"
            L_0x0015:
                return r2
            */
            throw new UnsupportedOperationException("Method not decompiled: tracking.gtm.TalabatGTM.Companion.getShopTypeForTracking(java.util.ArrayList):java.lang.String");
        }

        @NotNull
        @VisibleForTesting
        public final ArrayList<Bundle> getSortedImpressionBundle(@NotNull List<ImpressionProperties> list) {
            Intrinsics.checkNotNullParameter(list, "listOfImpressions");
            List<ImpressionProperties> sortedWith = CollectionsKt___CollectionsKt.sortedWith(list, new TalabatGTM$Companion$getSortedImpressionBundle$$inlined$sortedBy$1());
            ArrayList<Bundle> arrayList = new ArrayList<>();
            for (ImpressionProperties bundle : sortedWith) {
                arrayList.add(TalabatGTM.Companion.toBundle(bundle));
            }
            return arrayList;
        }

        @NotNull
        public final String getTalabatCreditBalance() {
            Customer instance = Customer.getInstance();
            if (instance == null || !instance.isLoggedIn() || instance.getCustomerInfo() == null) {
                return "N/A";
            }
            return String.valueOf(instance.getCustomerInfo().talabatCredit);
        }

        @NotNull
        public final String getTalabatCreditBalanceAfterRedeemSuccessful(@Nullable Float f11) {
            Customer instance = Customer.getInstance();
            if (instance == null) {
                return "N/A";
            }
            if (instance.isLoggedIn() && instance.getCustomerInfo() != null && f11 != null) {
                return String.valueOf(instance.getCustomerInfo().talabatCredit + f11.floatValue());
            }
            if (!instance.isLoggedIn() || instance.getCustomerInfo() == null) {
                return "N/A";
            }
            return String.valueOf(instance.getCustomerInfo().talabatCredit);
        }

        @NotNull
        public final ITalabatFirebase getTalabatFirebase() {
            return TalabatGTM.talabatFirebase;
        }

        @Nullable
        public final String getUserId() {
            boolean z11;
            String str = GlobalDataModel.encryptedUserId;
            Intrinsics.checkNotNullExpressionValue(str, "encryptedUserId");
            if (str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                return "N/A";
            }
            return GlobalDataModel.encryptedUserId;
        }

        public final void groceryClick(@NotNull Context context) {
            boolean z11;
            String str;
            String str2;
            boolean z12;
            String str3;
            boolean z13;
            String str4;
            boolean z14;
            String str5;
            boolean z15;
            String str6;
            String str7;
            String str8;
            Restaurant.PremiumType premiumType;
            String str9;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str10 = GlobalDataModel.SelectedCityName;
            boolean z16 = false;
            if (str10 == null || str10.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str11 = "N/A";
            if (z11) {
                str = str11;
            } else {
                str = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("shopCategorySelected", str11);
            Restaurant restaurant = GlobalDataModel.SELECTED.restaurant;
            if (restaurant != null) {
                str2 = String.valueOf(restaurant.itemPosition);
            } else {
                str2 = "0";
            }
            bundle.putString("shopPosition", str2);
            bundle.putString("shopSponsoring", getShopSponsoring());
            bundle.putString("shopType", listingType(GlobalDataModel.SELECTED.restaurant));
            bundle.putString("shopListType", str11);
            bundle.putString("shopPaymentMethods", getPaymentMethods(GlobalDataModel.SELECTED.restaurant));
            bundle.putString("swimlaneTitle", str11);
            bundle.putString("swimlaneTitleList", str11);
            bundle.putString("swimlaneTotal", str11);
            bundle.putString("swimlanePosition", str11);
            bundle.putString("swimlaneStrategy", str11);
            bundle.putString("swimlaneStrategyList", str11);
            bundle.putString("swimlaneLength", str11);
            bundle.putString("swimlaneVariation", str11);
            bundle.putString("swimlaneTilesDisplayed", str11);
            bundle.putString("swimlaneRequestId", str11);
            bundle.putString("userId", getUserId());
            bundle.putString("screenType", "Grocery List");
            bundle.putString("screenName", "Grocery List");
            bundle.putString("userTimeStamp", getCurrentTime());
            String str12 = GlobalDataModel.SELECTED.restaurant.deliveryTime;
            if (str12 == null || str12.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str3 = str11;
            } else {
                str3 = GlobalDataModel.SELECTED.restaurant.deliveryTime;
            }
            bundle.putString("shopDeliveryTime", str3);
            bundle.putString("floodActive", str11);
            bundle.putString("floodType", str11);
            bundle.putString("floodMessage", str11);
            bundle.putString("floodValue", str11);
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.CLICK_SHOP_TITLES_DISPLAYED, str11);
            String str13 = GlobalDataModel.SELECTED.restaurant.areaName;
            if (str13 == null || str13.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str4 = str11;
            } else {
                str4 = GlobalDataModel.SELECTED.restaurant.areaName;
            }
            bundle.putString("shopArea", str4);
            String str14 = GlobalDataModel.SELECTED.restaurant.f13873name;
            if (str14 == null || str14.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str5 = str11;
            } else {
                str5 = GlobalDataModel.SELECTED.restaurant.f13873name;
            }
            bundle.putString("chainName", str5);
            int i11 = GlobalDataModel.SELECTED.restaurant.f13872id;
            StringBuilder sb2 = new StringBuilder();
            sb2.append(i11);
            bundle.putString("chainId", sb2.toString());
            bundle.putString("chainShops", str11);
            String str15 = GlobalDataModel.SELECTED.restaurant.branchName;
            if (str15 == null || str15.length() == 0) {
                z15 = true;
            } else {
                z15 = false;
            }
            String str16 = null;
            if (z15) {
                str6 = str11;
            } else {
                Restaurant restaurant2 = GlobalDataModel.SELECTED.restaurant;
                if (restaurant2 != null) {
                    str6 = restaurant2.branchName;
                } else {
                    str6 = null;
                }
            }
            bundle.putString("shopName", str6);
            bundle.putString("shopStatus", getShopStatus(GlobalDataModel.SELECTED.restaurant.statusType));
            String str17 = GlobalDataModel.ShopClickOrigin;
            Intrinsics.checkNotNullExpressionValue(str17, "ShopClickOrigin");
            if (str17.length() > 0) {
                z16 = true;
            }
            if (z16) {
                str7 = GlobalDataModel.ShopClickOrigin;
            } else {
                str7 = str11;
            }
            bundle.putString("shopClickOrigin", str7);
            bundle.putString("searchTerm", str11);
            bundle.putString("channelIndex", str11);
            bundle.putString("channel", str11);
            bundle.putString("shopRecommented", str11);
            int i12 = GlobalDataModel.SELECTED.restaurant.branchId;
            StringBuilder sb3 = new StringBuilder();
            sb3.append(i12);
            bundle.putString("shopId", sb3.toString());
            bundle.putString("shopCokeUpsell", str11);
            if (GlobalDataModel.SELECTED.restaurant.hasCusine()) {
                str8 = GlobalDataModel.SELECTED.restaurant.GACuisineString();
            } else {
                str8 = str11;
            }
            bundle.putString("shopMainCuisine", str8);
            bundle.putString("shopWithOffer", str11);
            bundle.putString("shopOfferType", str11);
            bundle.putString("deliveryProvider", restaurantType(GlobalDataModel.SELECTED.restaurant));
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.CLICK_CLICK_ORIGIN, str11);
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.CLICK_SEARCH_STRING, str11);
            String midasRequestId = MidasHttpInterceptorKt.getMidasRequestId();
            if (midasRequestId == null) {
                midasRequestId = "";
            }
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.CLICK_MIDAS_REQUEST_ID, midasRequestId);
            Restaurant restaurant3 = GlobalDataModel.SELECTED.restaurant;
            if (!(restaurant3 == null || (premiumType = restaurant3.premiumType) == null || (str9 = premiumType.token) == null)) {
                str11 = str9;
            }
            bundle.putString("ncrRequestToken", str11);
            Restaurant restaurant4 = GlobalDataModel.SELECTED.restaurant;
            if (restaurant4 != null) {
                str16 = restaurant4.deliveryMode();
            }
            bundle.putString("listingPageType", str16);
            getTalabatFirebase().dispatchEvent(context, "shop_clicked", bundle);
            trackAdExEvent("shop_clicked", bundle);
        }

        public final void homeBannerClicked(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4, @Nullable String str5, @Nullable String str6, @Nullable String str7, @Nullable String str8, @Nullable String str9, @Nullable String str10, @Nullable String str11, @Nullable String str12, @Nullable String str13, @Nullable String str14, @Nullable String str15, @Nullable String str16, @Nullable String str17) {
            Context context2 = context;
            Intrinsics.checkNotNullParameter(context2, "context");
            Bundle homeBannerBundle = homeBannerBundle(str, str2, str3, str4, str5, str6, str7, str8, str9, str10, str11, str12, str13, str14, str15, str16, str17);
            TalabatFirebase.Companion.dispatchEvent(context2, ValuePropBannerClicked.EVENT_NAME, homeBannerBundle);
            trackAdExEvent(ValuePropBannerClicked.EVENT_NAME, homeBannerBundle);
        }

        public final void homeBannerImpression(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4, @Nullable String str5, @Nullable String str6, @Nullable String str7, @Nullable String str8, @Nullable String str9, @Nullable String str10, @Nullable String str11, @Nullable String str12, @Nullable String str13, @Nullable String str14, @Nullable String str15, @Nullable String str16, @Nullable String str17) {
            Context context2 = context;
            Intrinsics.checkNotNullParameter(context2, "context");
            Bundle homeBannerBundle = homeBannerBundle(str, str2, str3, str4, str5, str6, str7, str8, str9, str10, str11, str12, str13, str14, str15, str16, str17);
            TalabatFirebase.Companion.dispatchEvent(context2, ValuePropBannerShown.EVENT_NAME, homeBannerBundle);
            trackAdExEvent(ValuePropBannerShown.EVENT_NAME, homeBannerBundle);
        }

        public final void homeScreenLoaded(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4, @Nullable String str5, @Nullable String str6, @Nullable String str7, @Nullable String str8) {
            boolean z11;
            String str9;
            boolean z12;
            String str10;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str11 = GlobalDataModel.SelectedCityName;
            boolean z13 = false;
            if (str11 == null || str11.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str9 = "N/A";
            } else {
                str9 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str9);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("shopListType", str3);
            if (str == null || str.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str = "N/A";
            }
            bundle.putString("screenType", str);
            if (str2 == null || str2.length() == 0) {
                z13 = true;
            }
            if (z13) {
                str2 = "N/A";
            }
            bundle.putString("screenName", str2);
            bundle.putString("userId", getUserId());
            bundle.putString("userTimeStamp", getCurrentTime());
            if (LoggedInHelper.isLoggedIn()) {
                str10 = "true";
            } else {
                str10 = "false";
            }
            bundle.putString("userLoggedIn", str10);
            bundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
            if (str4 == null) {
                str4 = "N/A";
            }
            bundle.putString("swimlaneTotal", str4);
            if (str5 == null) {
                str5 = "N/A";
            }
            bundle.putString("swimlaneTitleList", str5);
            if (str6 == null) {
                str6 = "N/A";
            }
            bundle.putString("swimlaneRequestId", str6);
            if (str7 == null) {
                str7 = "N/A";
            }
            bundle.putString("swimlaneStrategyList", str7);
            if (str8 == null) {
                str8 = "N/A";
            }
            bundle.putString("swimlaneVariation", str8);
            TalabatFirebase.Companion.dispatchEvent(context, "home_screen_loaded", bundle);
        }

        public final void increaseItemQuantity(@NotNull Context context, @Nullable CartMenuItem cartMenuItem) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final boolean isScreenViewEventInValid(@Nullable String str) {
            boolean z11;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                return true;
            }
            if (!str.equals("Home Screen") || !GlobalDataModel.isSearchActive) {
                return false;
            }
            return true;
        }

        public final void itemClick(@NotNull Context context, @Nullable MenuItem menuItem, @Nullable String str, @Nullable String str2) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void itemDetailsView(@NotNull Context context, @Nullable MenuItem menuItem, @Nullable String str, @Nullable String str2) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void itemView(@NotNull Context context, @Nullable ArrayList<MenuItem> arrayList, int i11, @Nullable String str, @Nullable String str2) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void launch(@NotNull Context context, @Nullable String str, @Nullable String str2, int i11, @Nullable String str3, boolean z11, @NotNull String str4) {
            boolean z12;
            boolean z13;
            boolean z14;
            DeepLinkResult deepLinkResult;
            boolean z15;
            String str5;
            boolean z16;
            String str6;
            boolean z17;
            String str7;
            boolean z18;
            String str8;
            String str9;
            boolean z19;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str4, "locationStatus");
            boolean z21 = false;
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (!z12 || i11 > 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            Bundle bundle = new Bundle();
            if (str2 == null || str2.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (!z14) {
                deepLinkResult = DeepLinkParser.parse(str2);
            } else {
                deepLinkResult = new DeepLinkResult();
            }
            bundle.putString("isCampaign", String.valueOf(z13));
            String str10 = deepLinkResult.source;
            if (str10 == null || str10.length() == 0) {
                z15 = true;
            } else {
                z15 = false;
            }
            String str11 = "N/A";
            if (z15) {
                str5 = str11;
            } else {
                str5 = deepLinkResult.source;
            }
            bundle.putString("source", str5);
            String str12 = deepLinkResult.campaign;
            if (str12 == null || str12.length() == 0) {
                z16 = true;
            } else {
                z16 = false;
            }
            if (z16) {
                str6 = str11;
            } else {
                str6 = deepLinkResult.campaign;
            }
            bundle.putString("campaign", str6);
            String str13 = deepLinkResult.medium;
            if (str13 == null || str13.length() == 0) {
                z17 = true;
            } else {
                z17 = false;
            }
            if (z17) {
                str7 = str11;
            } else {
                str7 = deepLinkResult.medium;
            }
            bundle.putString("medium", str7);
            if (str2 == null || str2.length() == 0) {
                z18 = true;
            } else {
                z18 = false;
            }
            if (z18) {
                str8 = str11;
            } else {
                str8 = str2;
            }
            bundle.putString("deeplink", str8);
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("installNetwork", adjustNetwork());
            bundle.putString("installAdgroup", adjustAdGroup());
            bundle.putString("installCampaign", adjustCampaign());
            bundle.putString("installCreative", adjustCreative());
            if (i11 > 0) {
                StringBuilder sb2 = new StringBuilder();
                sb2.append(i11);
                str9 = sb2.toString();
            } else {
                str9 = str11;
            }
            bundle.putString("campaignCode", str9);
            AdjustAttribution adjustAttribution = GlobalDataModel.adjustAttribution;
            if (adjustAttribution != null) {
                String str14 = adjustAttribution.adid;
                if (str14 == null || str14.length() == 0) {
                    z19 = true;
                } else {
                    z19 = false;
                }
                if (!z19) {
                    str11 = GlobalDataModel.adjustAttribution.adid;
                }
            }
            bundle.putString("adjustId", str11);
            bundle.putString("screenName", ScreenNames.SPLASHSCREEN);
            bundle.putString("screenType", str3);
            bundle.putString("gpsStatus", str4);
            bundle.putString(FunWithFlags.FLUTTER_MIGRATION_VERIFY_KEY, FunWithFlags.FLUTTER_MIGRATION_VERIFY_VALUE);
            bundle.putBoolean("isFWFSDKinFlutter", z11);
            TalabatFirebase.Companion.dispatchEvent(context, "app_opened", bundle);
            if (str2 == null || str2.length() == 0) {
                z21 = true;
            }
            if (!z21) {
                deepLinkOpened(context, i11, str, str2);
            }
        }

        @NotNull
        public final String listingType(@Nullable Restaurant restaurant) {
            if (restaurant == null) {
                return "N/A";
            }
            if (restaurant.isDarkStore) {
                return "darkstores";
            }
            return shopListType(restaurant.shopType);
        }

        public final void liveChatClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void locateMe(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void locationMismatch(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void logFlutterEvents(@NotNull Context context, @NotNull String str, @NotNull Map<String, Object> map) {
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "eventName");
            Intrinsics.checkNotNullParameter(map, Param.MAP);
            Bundle bundle = new Bundle();
            for (Map.Entry next : map.entrySet()) {
                if (next.getValue() != null) {
                    StringBuilder sb2 = new StringBuilder();
                    sb2.append(next.getValue());
                    str2 = sb2.toString();
                    Intrinsics.checkNotNullExpressionValue(str2, "StringBuilder().append(entry.value).toString()");
                } else {
                    str2 = "";
                }
                bundle.putString((String) next.getKey(), str2);
            }
            addCommonProperties(bundle, context);
            getTalabatFirebase().dispatchEvent(context, str, bundle);
        }

        public final void login(@NotNull Context context, @Nullable String str, @Nullable String str2, int i11, @Nullable String str3, @Nullable String str4) {
            String str5;
            String str6;
            boolean z11;
            Intrinsics.checkNotNullParameter(context, "context");
            if (i11 == 100) {
                str5 = AccessToken.DEFAULT_GRAPH_DOMAIN;
            } else if (i11 != 300) {
                str5 = "credential_wallet";
                if (!(i11 == 400 || i11 == 500)) {
                    str5 = "normal";
                }
            } else {
                str5 = Constants.REFERRER_API_GOOGLE;
            }
            if (!TalabatUtils.isNullOrEmpty(str)) {
                Bundle bundle = new Bundle();
                boolean z12 = false;
                if (Intrinsics.areEqual((Object) str, (Object) TalabatGTM.FAILED)) {
                    bundle.putString("loginType", str5);
                    if (str3 == null || str3.length() == 0) {
                        z11 = true;
                    } else {
                        z11 = false;
                    }
                    if (z11) {
                        str3 = "N/A";
                    }
                    bundle.putString("loginErrorMessage", str3);
                    if (str2 == null || str2.length() == 0) {
                        z12 = true;
                    }
                    if (z12) {
                        str2 = "N/A";
                    }
                    bundle.putString("userId", str2);
                } else {
                    bundle.putString("loginType", str5);
                    if (str2 == null || str2.length() == 0) {
                        z12 = true;
                    }
                    if (z12) {
                        str2 = "N/A";
                    }
                    bundle.putString("userId", str2);
                }
                bundle.putString("screenName", str4);
                if (str4 != null) {
                    str6 = TrackingUtils.INSTANCE.getLoginScreenType(str4);
                } else {
                    str6 = null;
                }
                bundle.putString("screenType", str6);
                TalabatFirebase.Companion.dispatchEvent(context, "login_" + str, bundle);
            }
        }

        public final void logout(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("userId", getUserId());
            TalabatFirebase.Companion.dispatchEvent(context, "logout_submitted", bundle);
        }

        public final void mapClosed(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void mapConfirmed(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void mapShown(@NotNull Context context, @Nullable String str, @Nullable LatLng latLng, @Nullable String str2) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void mapSkipped(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void newCardAdded(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void newMenuItemDetailsScreenOpened(@NotNull Context context, @Nullable CartMenuItem cartMenuItem, @Nullable Restaurant restaurant, @Nullable String str, @Nullable String str2, @NotNull String str3, @NotNull String str4) {
            boolean z11;
            String str5;
            boolean z12;
            boolean z13;
            Integer num;
            Integer num2;
            boolean z14;
            Boolean bool;
            String str6;
            String str7;
            boolean z15;
            String str8;
            Integer num3;
            String str9;
            boolean z16;
            String str10;
            String str11;
            boolean z17;
            String str12;
            String str13;
            boolean z18;
            boolean z19;
            String str14;
            MenuSection menuSection;
            MenuSection menuSection2;
            MenuSection menuSection3;
            MenuSection menuSection4;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str3, "screenName");
            Intrinsics.checkNotNullParameter(str4, "screenType");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            String str15 = GlobalDataModel.SelectedCityName;
            if (str15 == null || str15.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str16 = "N/A";
            if (z11) {
                str5 = str16;
            } else {
                str5 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str5);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("userId", getUserId());
            if (str4.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str4 = str16;
            }
            bundle.putString("screenType", str4);
            if (str3.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str3 = str16;
            }
            bundle.putString("screenName", str3);
            bundle.putString("userTimeStamp", getCurrentTime());
            String str17 = null;
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.branchId);
            } else {
                num = null;
            }
            bundle.putString("shopId", String.valueOf(num));
            if (restaurant != null) {
                num2 = Integer.valueOf(restaurant.f13872id);
            } else {
                num2 = null;
            }
            bundle.putString("chainID", String.valueOf(num2));
            if (str2 == null || str2.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str2 = str16;
            }
            bundle.putString("eventOrigin", str2);
            if (cartMenuItem != null) {
                bool = Boolean.valueOf(cartMenuItem.hasThumbnail);
            } else {
                bool = null;
            }
            if (bool == null || !cartMenuItem.hasThumbnail) {
                str6 = "false";
            } else {
                str6 = "true";
            }
            bundle.putString("productHasPhoto", str6);
            if (cartMenuItem != null) {
                str7 = cartMenuItem.f13862name;
            } else {
                str7 = null;
            }
            if (str7 == null || str7.length() == 0) {
                z15 = true;
            } else {
                z15 = false;
            }
            if (z15) {
                str8 = str16;
            } else if (cartMenuItem != null) {
                str8 = cartMenuItem.f13862name;
            } else {
                str8 = null;
            }
            bundle.putString(ProductTrackingProvider.NAME, str8);
            if (cartMenuItem != null) {
                num3 = Integer.valueOf(cartMenuItem.f13861id);
            } else {
                num3 = null;
            }
            StringBuilder sb2 = new StringBuilder();
            sb2.append(num3);
            bundle.putString("productSku", sb2.toString());
            if (restaurant != null) {
                str9 = restaurant.branchName;
            } else {
                str9 = null;
            }
            if (str9 == null || str9.length() == 0) {
                z16 = true;
            } else {
                z16 = false;
            }
            if (z16) {
                str10 = str16;
            } else if (restaurant != null) {
                str10 = restaurant.branchName;
            } else {
                str10 = null;
            }
            bundle.putString("shopName", str10);
            bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
            bundle.putString(ProductTrackingProvider.QUANTITY, "1");
            if (cartMenuItem == null || (menuSection4 = cartMenuItem.menuSection) == null) {
                str11 = null;
            } else {
                str11 = menuSection4.f13864name;
            }
            if (str11 == null || str11.length() == 0) {
                z17 = true;
            } else {
                z17 = false;
            }
            if (z17) {
                str12 = str16;
            } else if (cartMenuItem == null || (menuSection3 = cartMenuItem.menuSection) == null) {
                str12 = null;
            } else {
                str12 = menuSection3.f13864name;
            }
            bundle.putString("productCategory", str12);
            if (cartMenuItem == null || (menuSection2 = cartMenuItem.menuSection) == null) {
                str13 = null;
            } else {
                str13 = menuSection2.f13864name;
            }
            if (str13 == null || str13.length() == 0) {
                z18 = true;
            } else {
                z18 = false;
            }
            if (z18) {
                str17 = str16;
            } else if (!(cartMenuItem == null || (menuSection = cartMenuItem.menuSection) == null)) {
                str17 = menuSection.f13864name;
            }
            bundle.putString("menuSection", str17);
            bundle.putString("productVariant", str16);
            if (str == null || str.length() == 0) {
                z19 = true;
            } else {
                z19 = false;
            }
            if (z19) {
                str = str16;
            }
            bundle.putString(ProductTrackingProvider.PRICE, str);
            if (cartMenuItem != null) {
                str14 = String.valueOf(cartMenuItem.getAllQuantityOfMandatoryAndOptionalChoices()[0]);
            } else {
                str14 = str16;
            }
            bundle.putString("productMandatoryChoiceQuantity", str14);
            bundle.putString("productMandatoryChoicePreselected", "false");
            if (cartMenuItem != null) {
                str16 = String.valueOf(cartMenuItem.getAllQuantityOfMandatoryAndOptionalChoices()[1]);
            }
            bundle.putString("productOptionalChoiceQuantity", str16);
            TalabatFirebase.Companion.dispatchEvent(context, "product_choice_opened", bundle);
        }

        public final void newMenuShown(@NotNull Context context, boolean z11) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void numberUpdationFailed(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void numberUpdationSuccessful(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onActionSheetAddressSelected(@NotNull Context context, @Nullable Address address) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onActionSheetDifferentLocationClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onActionSheetShown(@NotNull Context context, int i11) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onAlertCloseClicked(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3) {
            Intrinsics.checkNotNullParameter(context, "context");
            onAlertEvent(context, str, str2, str3, "alert_close_clicked");
        }

        public final void onAlertReadmoreClicked(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3) {
            Intrinsics.checkNotNullParameter(context, "context");
            onAlertEvent(context, str, str2, str3, "alert_readmore_clicked");
        }

        public final void onAlertShown(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3) {
            Intrinsics.checkNotNullParameter(context, "context");
            onAlertEvent(context, str, str2, str3, FeeTrackingConstantsKt.EVENT_ALERT_SHOWN);
        }

        public final void onAttributionChanged(@NotNull Context context) {
            boolean z11;
            String str;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("locationAddress", getLocationAddress(context));
            String str2 = GlobalDataModel.SelectedCityName;
            boolean z12 = false;
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str3 = "N/A";
            if (z11) {
                str = str3;
            } else {
                str = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str);
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("userId", getUserId());
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("installedDate", TalabatAdjust.createdAt());
            String str4 = GlobalDataModel.googleAdId;
            if (str4 == null || str4.length() == 0) {
                z12 = true;
            }
            if (!z12) {
                str3 = GlobalDataModel.googleAdId;
            }
            bundle.putString(ConstantsKt.GOOGLE_AD_ID, str3);
            TalabatFirebase.Companion.dispatchEvent(context, "adjust_attribution_changed", bundle);
        }

        public final void onBannerStoreShown(@NotNull Context context, @NotNull String str, @NotNull String str2, @NotNull String str3, @NotNull String str4, @NotNull String str5) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "bannerName");
            Intrinsics.checkNotNullParameter(str2, "bannerId");
            Intrinsics.checkNotNullParameter(str3, "chainName");
            Intrinsics.checkNotNullParameter(str4, "chainId");
            Intrinsics.checkNotNullParameter(str5, "eventOrigin");
            Bundle bundle = new Bundle();
            bundle.putString("bannerName", str);
            bundle.putString("bannerId", str2);
            bundle.putString("chainName", str3);
            bundle.putString("chainId", str4);
            bundle.putString("eventOrigin", str5);
            TalabatFirebase.Companion.dispatchEvent(context, "banner_store_shown", bundle);
        }

        public final void onBinDiscountApplied(@NotNull Context context, @Nullable String str, @Nullable String str2) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onBinDiscountExcluded(@NotNull Context context, float f11) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onBinNotificationShown(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onBusyBottomSheetClosed(@NotNull Context context, @Nullable Restaurant restaurant, @Nullable String str, @Nullable String str2) {
            boolean z11;
            boolean z12;
            String str3;
            boolean z13;
            String str4;
            boolean z14;
            String str5;
            boolean z15;
            String str6;
            boolean z16;
            String str7;
            String str8;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            if (restaurant != null) {
                boolean z17 = false;
                if (str == null || str.length() == 0) {
                    z11 = true;
                } else {
                    z11 = false;
                }
                if (z11) {
                    str = "N/A";
                }
                bundle.putString("screenName", str);
                if (str2 == null || str2.length() == 0) {
                    z12 = true;
                } else {
                    z12 = false;
                }
                if (z12) {
                    str2 = "N/A";
                }
                bundle.putString("screenType", str2);
                Companion companion = TalabatGTM.Companion;
                if (companion.getRestaurantMenuSections().size() > 0) {
                    str3 = String.valueOf(companion.getRestaurantMenuSections().size());
                } else {
                    str3 = "0";
                }
                bundle.putString(ShopDetailsLoadedEvent.MENU_CATEGORY_NUMBER, str3);
                bundle.putString(PaymentMethodChangedEventKt.ATTRIBUTE_KEY_ORDER_PAYMENT_METHOD_CHANGED, "N/A");
                bundle.putString("shopStatus", SDKCoreEvent.ForegroundStatus.VALUE_BUSY);
                bundle.putString("orderPaymentMethod", "N/A");
                int i11 = restaurant.branchId;
                StringBuilder sb2 = new StringBuilder();
                sb2.append(i11);
                bundle.putString("shopId", sb2.toString());
                bundle.putString("userId", companion.getUserId());
                bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_ORDER_PAYMENT_METHOD_DEFAULT, "N/A");
                bundle.putString("userPreferences", "N/A");
                String str9 = restaurant.areaName;
                if (str9 == null || str9.length() == 0) {
                    z13 = true;
                } else {
                    z13 = false;
                }
                if (z13) {
                    str4 = "N/A";
                } else {
                    str4 = restaurant.areaName;
                }
                bundle.putString("shopArea", str4);
                String str10 = restaurant.branchName;
                if (str10 == null || str10.length() == 0) {
                    z14 = true;
                } else {
                    z14 = false;
                }
                if (z14) {
                    str5 = "N/A";
                } else {
                    str5 = restaurant.branchName;
                }
                bundle.putString("shopName", str5);
                bundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
                bundle.putString("orderPreorder", "N/A");
                bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
                bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
                String str11 = GlobalDataModel.SelectedCityName;
                if (str11 == null || str11.length() == 0) {
                    z15 = true;
                } else {
                    z15 = false;
                }
                if (z15) {
                    str6 = "N/A";
                } else {
                    str6 = GlobalDataModel.SelectedCityName;
                }
                bundle.putString("locationCity", str6);
                bundle.putString("locationAddress", companion.getLocationAddress(context));
                bundle.putString("locationLat", companion.getLocationLatitude());
                bundle.putString("locationLon", companion.getLocationLongitude());
                String valueOf = String.valueOf(restaurant.f13872id);
                if (valueOf == null || valueOf.length() == 0) {
                    z16 = true;
                } else {
                    z16 = false;
                }
                if (z16) {
                    str7 = "N/A";
                } else {
                    str7 = String.valueOf(restaurant.f13872id);
                }
                bundle.putString("chainId", str7);
                String str12 = restaurant.f13873name;
                if (str12 == null || str12.length() == 0) {
                    z17 = true;
                }
                if (z17) {
                    str8 = "N/A";
                } else {
                    str8 = restaurant.f13873name;
                }
                bundle.putString("chainName", str8);
                bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
                bundle.putString("orderPickup", "N/A");
                bundle.putString("userTimeStamp", companion.getCurrentTime());
                bundle.putString("perseusSessionId", "N/A");
                bundle.putString("perseusHitMatchId", "N/A");
                bundle.putString("perseusClientId", "N/A");
            }
            TalabatFirebase.Companion.dispatchEvent(context, "shop_busy_screen_closed", bundle);
        }

        public final void onBusyBottomSheetOpened(@NotNull Context context, @Nullable Restaurant restaurant, @Nullable String str, @Nullable String str2) {
            boolean z11;
            boolean z12;
            String str3;
            boolean z13;
            String str4;
            boolean z14;
            String str5;
            boolean z15;
            String str6;
            boolean z16;
            String str7;
            String str8;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            if (restaurant != null) {
                boolean z17 = false;
                if (str == null || str.length() == 0) {
                    z11 = true;
                } else {
                    z11 = false;
                }
                if (z11) {
                    str = "N/A";
                }
                bundle.putString("screenName", str);
                if (str2 == null || str2.length() == 0) {
                    z12 = true;
                } else {
                    z12 = false;
                }
                if (z12) {
                    str2 = "N/A";
                }
                bundle.putString("screenType", str2);
                Companion companion = TalabatGTM.Companion;
                if (companion.getRestaurantMenuSections().size() > 0) {
                    str3 = String.valueOf(companion.getRestaurantMenuSections().size());
                } else {
                    str3 = "0";
                }
                bundle.putString(ShopDetailsLoadedEvent.MENU_CATEGORY_NUMBER, str3);
                bundle.putString(PaymentMethodChangedEventKt.ATTRIBUTE_KEY_ORDER_PAYMENT_METHOD_CHANGED, "N/A");
                bundle.putString("shopStatus", SDKCoreEvent.ForegroundStatus.VALUE_BUSY);
                bundle.putString("orderPaymentMethod", "N/A");
                int i11 = restaurant.branchId;
                StringBuilder sb2 = new StringBuilder();
                sb2.append(i11);
                bundle.putString("shopId", sb2.toString());
                bundle.putString("userId", companion.getUserId());
                bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_ORDER_PAYMENT_METHOD_DEFAULT, "N/A");
                bundle.putString("userPreferences", "N/A");
                String str9 = restaurant.areaName;
                if (str9 == null || str9.length() == 0) {
                    z13 = true;
                } else {
                    z13 = false;
                }
                if (z13) {
                    str4 = "N/A";
                } else {
                    str4 = restaurant.areaName;
                }
                bundle.putString("shopArea", str4);
                String str10 = restaurant.branchName;
                if (str10 == null || str10.length() == 0) {
                    z14 = true;
                } else {
                    z14 = false;
                }
                if (z14) {
                    str5 = "N/A";
                } else {
                    str5 = restaurant.branchName;
                }
                bundle.putString("shopName", str5);
                bundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
                bundle.putString("orderPreorder", "N/A");
                bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
                bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
                String str11 = GlobalDataModel.SelectedCityName;
                if (str11 == null || str11.length() == 0) {
                    z15 = true;
                } else {
                    z15 = false;
                }
                if (z15) {
                    str6 = "N/A";
                } else {
                    str6 = GlobalDataModel.SelectedCityName;
                }
                bundle.putString("locationCity", str6);
                bundle.putString("locationAddress", companion.getLocationAddress(context));
                bundle.putString("locationLat", companion.getLocationLatitude());
                bundle.putString("locationLon", companion.getLocationLongitude());
                String valueOf = String.valueOf(restaurant.f13872id);
                if (valueOf == null || valueOf.length() == 0) {
                    z16 = true;
                } else {
                    z16 = false;
                }
                if (z16) {
                    str7 = "N/A";
                } else {
                    str7 = String.valueOf(restaurant.f13872id);
                }
                bundle.putString("chainId", str7);
                String str12 = restaurant.f13873name;
                if (str12 == null || str12.length() == 0) {
                    z17 = true;
                }
                if (z17) {
                    str8 = "N/A";
                } else {
                    str8 = restaurant.f13873name;
                }
                bundle.putString("chainName", str8);
                bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
                bundle.putString("orderPickup", "N/A");
                bundle.putString("userTimeStamp", companion.getCurrentTime());
                bundle.putString("perseusSessionId", "N/A");
                bundle.putString("perseusHitMatchId", "N/A");
                bundle.putString("perseusClientId", "N/A");
            }
            TalabatFirebase.Companion.dispatchEvent(context, "screen_opened", bundle);
        }

        public final void onBusyBottomSheetRecommendedRestaurantClicked(@NotNull Context context, @Nullable Restaurant restaurant, @Nullable String str, @Nullable String str2) {
            boolean z11;
            boolean z12;
            String str3;
            boolean z13;
            String str4;
            boolean z14;
            String str5;
            boolean z15;
            String str6;
            boolean z16;
            String str7;
            String str8;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            if (restaurant != null) {
                boolean z17 = false;
                if (str == null || str.length() == 0) {
                    z11 = true;
                } else {
                    z11 = false;
                }
                if (z11) {
                    str = "N/A";
                }
                bundle.putString("screenName", str);
                if (str2 == null || str2.length() == 0) {
                    z12 = true;
                } else {
                    z12 = false;
                }
                if (z12) {
                    str2 = "N/A";
                }
                bundle.putString("screenType", str2);
                Companion companion = TalabatGTM.Companion;
                if (companion.getRestaurantMenuSections().size() > 0) {
                    str3 = String.valueOf(companion.getRestaurantMenuSections().size());
                } else {
                    str3 = "0";
                }
                bundle.putString(ShopDetailsLoadedEvent.MENU_CATEGORY_NUMBER, str3);
                bundle.putString(PaymentMethodChangedEventKt.ATTRIBUTE_KEY_ORDER_PAYMENT_METHOD_CHANGED, "N/A");
                bundle.putString("shopStatus", SDKCoreEvent.ForegroundStatus.VALUE_BUSY);
                bundle.putString("orderPaymentMethod", "N/A");
                int i11 = restaurant.branchId;
                StringBuilder sb2 = new StringBuilder();
                sb2.append(i11);
                bundle.putString("shopId", sb2.toString());
                bundle.putString("userId", companion.getUserId());
                bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_ORDER_PAYMENT_METHOD_DEFAULT, "N/A");
                bundle.putString("userPreferences", "N/A");
                String str9 = restaurant.areaName;
                if (str9 == null || str9.length() == 0) {
                    z13 = true;
                } else {
                    z13 = false;
                }
                if (z13) {
                    str4 = "N/A";
                } else {
                    str4 = restaurant.areaName;
                }
                bundle.putString("shopArea", str4);
                String str10 = restaurant.branchName;
                if (str10 == null || str10.length() == 0) {
                    z14 = true;
                } else {
                    z14 = false;
                }
                if (z14) {
                    str5 = "N/A";
                } else {
                    str5 = restaurant.branchName;
                }
                bundle.putString("shopName", str5);
                bundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
                bundle.putString("orderPreorder", "N/A");
                bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
                bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
                String str11 = GlobalDataModel.SelectedCityName;
                if (str11 == null || str11.length() == 0) {
                    z15 = true;
                } else {
                    z15 = false;
                }
                if (z15) {
                    str6 = "N/A";
                } else {
                    str6 = GlobalDataModel.SelectedCityName;
                }
                bundle.putString("locationCity", str6);
                bundle.putString("locationAddress", companion.getLocationAddress(context));
                bundle.putString("locationLat", companion.getLocationLatitude());
                bundle.putString("locationLon", companion.getLocationLongitude());
                String valueOf = String.valueOf(restaurant.f13872id);
                if (valueOf == null || valueOf.length() == 0) {
                    z16 = true;
                } else {
                    z16 = false;
                }
                if (z16) {
                    str7 = "N/A";
                } else {
                    str7 = String.valueOf(restaurant.f13872id);
                }
                bundle.putString("chainId", str7);
                String str12 = restaurant.f13873name;
                if (str12 == null || str12.length() == 0) {
                    z17 = true;
                }
                if (z17) {
                    str8 = "N/A";
                } else {
                    str8 = restaurant.f13873name;
                }
                bundle.putString("chainName", str8);
                bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
                bundle.putString("orderPickup", "N/A");
                bundle.putString("userTimeStamp", companion.getCurrentTime());
                bundle.putString("perseusSessionId", "N/A");
                bundle.putString("perseusHitMatchId", "N/A");
                bundle.putString("perseusClientId", "N/A");
            }
            TalabatFirebase.Companion.dispatchEvent(context, "shop_busy_recommendation_clicked", bundle);
        }

        public final void onBusyBottomSheetViewAllClicked(@NotNull Context context, @Nullable Restaurant restaurant, @Nullable String str, @Nullable String str2) {
            boolean z11;
            boolean z12;
            String str3;
            boolean z13;
            String str4;
            boolean z14;
            String str5;
            boolean z15;
            String str6;
            boolean z16;
            String str7;
            String str8;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            if (restaurant != null) {
                boolean z17 = false;
                if (str == null || str.length() == 0) {
                    z11 = true;
                } else {
                    z11 = false;
                }
                if (z11) {
                    str = "N/A";
                }
                bundle.putString("screenName", str);
                if (str2 == null || str2.length() == 0) {
                    z12 = true;
                } else {
                    z12 = false;
                }
                if (z12) {
                    str2 = "N/A";
                }
                bundle.putString("screenType", str2);
                Companion companion = TalabatGTM.Companion;
                if (companion.getRestaurantMenuSections().size() > 0) {
                    str3 = String.valueOf(companion.getRestaurantMenuSections().size());
                } else {
                    str3 = "0";
                }
                bundle.putString(ShopDetailsLoadedEvent.MENU_CATEGORY_NUMBER, str3);
                bundle.putString(PaymentMethodChangedEventKt.ATTRIBUTE_KEY_ORDER_PAYMENT_METHOD_CHANGED, "N/A");
                bundle.putString("shopStatus", SDKCoreEvent.ForegroundStatus.VALUE_BUSY);
                bundle.putString("orderPaymentMethod", "N/A");
                int i11 = restaurant.branchId;
                StringBuilder sb2 = new StringBuilder();
                sb2.append(i11);
                bundle.putString("shopId", sb2.toString());
                bundle.putString("userId", companion.getUserId());
                bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_ORDER_PAYMENT_METHOD_DEFAULT, "N/A");
                bundle.putString("userPreferences", "N/A");
                String str9 = restaurant.areaName;
                if (str9 == null || str9.length() == 0) {
                    z13 = true;
                } else {
                    z13 = false;
                }
                if (z13) {
                    str4 = "N/A";
                } else {
                    str4 = restaurant.areaName;
                }
                bundle.putString("shopArea", str4);
                String str10 = restaurant.branchName;
                if (str10 == null || str10.length() == 0) {
                    z14 = true;
                } else {
                    z14 = false;
                }
                if (z14) {
                    str5 = "N/A";
                } else {
                    str5 = restaurant.branchName;
                }
                bundle.putString("shopName", str5);
                bundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
                bundle.putString("orderPreorder", "N/A");
                bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
                bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
                String str11 = GlobalDataModel.SelectedCityName;
                if (str11 == null || str11.length() == 0) {
                    z15 = true;
                } else {
                    z15 = false;
                }
                if (z15) {
                    str6 = "N/A";
                } else {
                    str6 = GlobalDataModel.SelectedCityName;
                }
                bundle.putString("locationCity", str6);
                bundle.putString("locationAddress", companion.getLocationAddress(context));
                bundle.putString("locationLat", companion.getLocationLatitude());
                bundle.putString("locationLon", companion.getLocationLongitude());
                String valueOf = String.valueOf(restaurant.f13872id);
                if (valueOf == null || valueOf.length() == 0) {
                    z16 = true;
                } else {
                    z16 = false;
                }
                if (z16) {
                    str7 = "N/A";
                } else {
                    str7 = String.valueOf(restaurant.f13872id);
                }
                bundle.putString("chainId", str7);
                String str12 = restaurant.f13873name;
                if (str12 == null || str12.length() == 0) {
                    z17 = true;
                }
                if (z17) {
                    str8 = "N/A";
                } else {
                    str8 = restaurant.f13873name;
                }
                bundle.putString("chainName", str8);
                bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
                bundle.putString("orderPickup", "N/A");
                bundle.putString("userTimeStamp", companion.getCurrentTime());
                bundle.putString("perseusSessionId", "N/A");
                bundle.putString("perseusHitMatchId", "N/A");
                bundle.putString("perseusClientId", "N/A");
            }
            TalabatFirebase.Companion.dispatchEvent(context, "shop_busy_view_similar_restaurants_clicked", bundle);
        }

        public final void onCategoryDetailsLoaded(@NotNull Context context, @Nullable Restaurant restaurant, @Nullable MenuSection menuSection, @NotNull String str, @NotNull String str2) {
            boolean z11;
            String str3;
            boolean z12;
            boolean z13;
            String str4;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "screenName");
            Intrinsics.checkNotNullParameter(str2, "screenType");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationLat", getLocationLatitude());
            String str5 = GlobalDataModel.SelectedCityName;
            boolean z14 = false;
            if (str5 == null || str5.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str6 = "N/A";
            if (z11) {
                str3 = str6;
            } else {
                str3 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str3);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("userId", getUserId());
            if (str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = str6;
            }
            bundle.putString("screenType", str2);
            if (str.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str = str6;
            }
            bundle.putString("screenName", str);
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("optionClicked", str6);
            bundle.putString("shopSortingSelected", str6);
            bundle.putString("shopFilteringSelected", str6);
            if (menuSection != null) {
                str4 = menuSection.f13864name;
            } else {
                str4 = null;
            }
            if (str4 == null || str4.length() == 0) {
                z14 = true;
            }
            if (!z14) {
                if (menuSection != null) {
                    str6 = menuSection.f13864name;
                } else {
                    str6 = null;
                }
            }
            bundle.putString("productCategory", str6);
            bundle.putString("shopCategoryList", getMenuSectionNamesForGA());
            bundle.putString("listingPageType", listingType(restaurant));
            bundle.putString("deliveryProvider", restaurantType(restaurant));
            TalabatFirebase.Companion.dispatchEvent(context, "category_details_clicked", bundle);
        }

        public final void onCategoryDetailsUpdated(@NotNull Context context, @Nullable Restaurant restaurant, @Nullable String str, @Nullable MenuSection menuSection) {
            boolean z11;
            String str2;
            boolean z12;
            String str3;
            String str4;
            String str5;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str6 = GlobalDataModel.SelectedCityName;
            boolean z13 = false;
            if (str6 == null || str6.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str7 = "N/A";
            if (z11) {
                str2 = str7;
            } else {
                str2 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str2);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (str == null || str.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str3 = str7;
            } else {
                str3 = str.toLowerCase();
                Intrinsics.checkNotNullExpressionValue(str3, "this as java.lang.String).toLowerCase()");
            }
            bundle.putString("shopSortingSelected", str3);
            if (restaurant != null) {
                str4 = restaurant.getCuisineString();
            } else {
                str4 = str7;
            }
            bundle.putString("shopCategoryList", str4);
            if (menuSection != null) {
                str5 = menuSection.f13864name;
            } else {
                str5 = null;
            }
            if (str5 == null || str5.length() == 0) {
                z13 = true;
            }
            if (!z13) {
                if (menuSection != null) {
                    str7 = menuSection.f13864name;
                } else {
                    str7 = null;
                }
            }
            bundle.putString("productCategory", str7);
            bundle.putString("listingPageType", listingType(restaurant));
            bundle.putString("deliveryProvider", restaurantType(restaurant));
            TalabatFirebase.Companion.dispatchEvent(context, "category_details_updated", bundle);
        }

        public final void onCategorySelected(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onCategorySelectorClosed(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onCategorySelectorOpened(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onChangeAreaClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onChangeCountryConfirmed(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onChangeCountrySelected(@NotNull Context context, @NotNull AddressAnalyticsTracker addressAnalyticsTracker) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(addressAnalyticsTracker, "addressAnalyticsTracker");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", addressAnalyticsTracker.getLocationAddress());
            bundle.putString("locationLat", addressAnalyticsTracker.getLocationLat());
            bundle.putString("locationLon", addressAnalyticsTracker.getLocationLon());
            bundle.putString("locationCity", addressAnalyticsTracker.getLocationCity());
            bundle.putString("locationArea", addressAnalyticsTracker.getLocationArea());
            bundle.putString("locationCountry", addressAnalyticsTracker.getLocationCountry());
            bundle.putString("screenType", addressAnalyticsTracker.getScreenType());
            bundle.putString("screenName", addressAnalyticsTracker.getScreenName());
            bundle.putString("locationMethod", addressAnalyticsTracker.getLocationMethod());
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_DELIVERY_ADDRESS_STATUS, addressAnalyticsTracker.getDeliveryAddressStatus());
            bundle.putString("mapErrorMessage", addressAnalyticsTracker.getMapErrorMessage());
            bundle.putString("apiMethod", addressAnalyticsTracker.getApiMethod());
            bundle.putString("apiResponse", addressAnalyticsTracker.getApiResponse());
            bundle.putString("geolocationAccuracy", addressAnalyticsTracker.getGeolocationAccuracy());
            bundle.putString("locationDialogueAccepted", addressAnalyticsTracker.getLocationDialogueAccepted());
            bundle.putString("locationDialogueType", addressAnalyticsTracker.getLocationDialogueType());
            bundle.putString("addressComponentType", addressAnalyticsTracker.getAddressComponentType());
            bundle.putString("countrySelected", addressAnalyticsTracker.getCountrySelected());
            bundle.putString(Param.MAP_TYPE, addressAnalyticsTracker.getMapType());
            bundle.putString("eventOrigin", addressAnalyticsTracker.getJourneyType());
            TalabatFirebase.Companion.dispatchEvent(context, "change_country_selected", bundle);
            LogAddressEvent("change_country_selected", addressAnalyticsTracker);
        }

        public final void onChangeCountryShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onComplianceContinueToCheckout(@NotNull Context context) {
            boolean z11;
            String str;
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            TalabatFirebase.Companion companion = TalabatFirebase.Companion;
            Bundle bundle = new Bundle();
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            Companion companion2 = TalabatGTM.Companion;
            bundle.putString("locationAddress", companion2.getLocationAddress(context));
            String str3 = GlobalDataModel.SelectedCityName;
            if (str3 == null || str3.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            } else {
                str = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str);
            bundle.putString("locationLat", companion2.getLocationLatitude());
            bundle.putString("locationLat", companion2.getLocationLongitude());
            bundle.putString("locationArea", companion2.getSelectedAreaId());
            bundle.putString("screenName", ScreenNames.VERIFY_ACCOUNT_INFO);
            bundle.putString("screenType", ScreenNames.getScreenType(ScreenNames.VERIFY_ACCOUNT_INFO));
            bundle.putString("userOnlinePaymentMethods", "N/A");
            if (LoggedInHelper.isLoggedIn()) {
                str2 = "true";
            } else {
                str2 = "false";
            }
            bundle.putString("userLoggedIn", str2);
            bundle.putString("userId", companion2.getUserId());
            Unit unit = Unit.INSTANCE;
            companion.dispatchEvent(context, "account_update_success", bundle);
        }

        public final void onComplianceUserBlocked(@NotNull Context context, @NotNull String str) {
            boolean z11;
            String str2;
            String str3;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "blockedMessage");
            TalabatFirebase.Companion companion = TalabatFirebase.Companion;
            Bundle bundle = new Bundle();
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            Companion companion2 = TalabatGTM.Companion;
            bundle.putString("locationAddress", companion2.getLocationAddress(context));
            String str4 = GlobalDataModel.SelectedCityName;
            if (str4 == null || str4.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            } else {
                str2 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str2);
            bundle.putString("locationLat", companion2.getLocationLatitude());
            bundle.putString("locationLat", companion2.getLocationLongitude());
            bundle.putString("locationArea", companion2.getSelectedAreaId());
            bundle.putString("screenName", ScreenNames.VERIFY_ACCOUNT_INFO);
            bundle.putString("screenType", ScreenNames.getScreenType(ScreenNames.VERIFY_ACCOUNT_INFO));
            bundle.putString("userOnlinePaymentMethods", "N/A");
            if (LoggedInHelper.isLoggedIn()) {
                str3 = "true";
            } else {
                str3 = "false";
            }
            bundle.putString("userLoggedIn", str3);
            bundle.putString("userId", companion2.getUserId());
            bundle.putString("InterruptionMessageTitle", str);
            Unit unit = Unit.INSTANCE;
            companion.dispatchEvent(context, "user_flow_interrupted", bundle);
        }

        public final void onContactOptionClickedOrderConfirmation(@NotNull Context context, @Nullable MostRecentOrderList mostRecentOrderList, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4, @NotNull String str5, @NotNull String str6) {
            String str7;
            String str8;
            String str9;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str5, "estimatedTimeRange");
            Intrinsics.checkNotNullParameter(str6, BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_EXPEDITION_TYPE);
            Bundle bundle = new Bundle();
            boolean z11 = false;
            if (str == null || str.length() == 0) {
                str = "N/A";
            }
            bundle.putString("screenType", str);
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str10 = GlobalDataModel.SelectedCityName;
            if (str10 == null || str10.length() == 0) {
                str7 = "N/A";
            } else {
                str7 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str7);
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (str2 == null || str2.length() == 0) {
                str2 = "N/A";
            }
            bundle.putString("screenName", str2);
            Boolean bool = null;
            String str11 = mostRecentOrderList != null ? mostRecentOrderList.encryptedOrderId : null;
            if (str11 == null || str11.length() == 0) {
                str8 = "N/A";
            } else {
                str8 = mostRecentOrderList != null ? mostRecentOrderList.encryptedOrderId : null;
            }
            bundle.putString("transactionId", str8);
            if (str4 == null || str4.length() == 0) {
                str4 = "N/A";
            }
            bundle.putString("contactOption", str4);
            bundle.putString("userId", getUserId());
            bundle.putString("shopId", String.valueOf(mostRecentOrderList != null ? Integer.valueOf(mostRecentOrderList.branchId) : null));
            if (mostRecentOrderList != null) {
                str9 = getPaymentMethod(mostRecentOrderList.paymentMethod);
            } else {
                str9 = "N/A";
            }
            bundle.putString("orderPaymentMethod", str9);
            bundle.putString("reOrder", "false");
            bundle.putString("orderPickup", "false");
            if (mostRecentOrderList != null) {
                bool = Boolean.valueOf(mostRecentOrderList.isPreOrder);
            }
            bundle.putString("orderPreorder", String.valueOf(bool));
            if (str5.length() == 0) {
                str5 = "N/A";
            }
            bundle.putString("deliveryTime", str5);
            if (str6.length() == 0) {
                z11 = true;
            }
            if (z11) {
                str6 = "N/A";
            }
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_EXPEDITION_TYPE, str6);
            TalabatFirebase.Companion.dispatchEvent(context, "contact_option_clicked", bundle);
        }

        public final void onCuisineButtonClicked(@NotNull Context context, boolean z11) {
            String str;
            Intrinsics.checkNotNullParameter(context, "context");
            if (z11) {
                str = "pickup_cuisine";
            } else {
                str = "shop_list_cuisine";
            }
            TalabatFirebase.Companion.dispatchEvent(context, "filters_clicked", addVendorListCuisinesProperties(z11, getCommonBundle(context), str));
        }

        public final void onCuisineScreenApplySelection(@NotNull Context context, @NotNull String str, boolean z11) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "shopCategorySelected");
            Bundle a11 = a(this, z11, getCommonBundle(context), (String) null, 4, (Object) null);
            if (z11) {
                a11.putString("eventOrigin", "pickup_cuisine");
                a11.putString("screenName", "pickup_vendor_list");
            }
            a11.putString("shopCategorySelected", str);
            TalabatFirebase.Companion.dispatchEvent(context, "filters_applied", a11);
        }

        public final void onCuisineScreenClearSelection(@NotNull Context context, @NotNull String str) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "shopCategorySelected");
            Bundle a11 = a(this, false, getCommonBundle(context), (String) null, 4, (Object) null);
            a11.putString("shopCategorySelected", str);
            TalabatFirebase.Companion.dispatchEvent(context, ClearFiltersClicked.EVENT_NAME, a11);
        }

        public final void onCuisineScreenSelectCuisine(@NotNull Context context, @NotNull String str, boolean z11) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "shopCategorySelected");
            Bundle a11 = a(this, z11, getCommonBundle(context), (String) null, 4, (Object) null);
            a11.putString("shopCategorySelected", str);
            TalabatFirebase.Companion.dispatchEvent(context, "filter_option_clicked", a11);
        }

        public final void onDarkstoresAgeVerificationShown(@NotNull Context context, @Nullable String str, @Nullable String str2) {
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            setBaseRestuarantBundleParams(getRestaurantForDarkstores(str), bundle);
            getAgeVerificationEventBundle(bundle, str2);
            TalabatFirebase.Companion.dispatchEvent(context, "age_verification_shown", bundle);
        }

        public final void onDarkstoresAllButtonClicked(@NotNull Context context, @NotNull String str, @NotNull String str2, @NotNull String str3, @Nullable String str4, @Nullable String str5) {
            boolean z11;
            String str6;
            boolean z12;
            String str7;
            String str8;
            String str9;
            boolean z13;
            String str10;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "extraRestaurant");
            Intrinsics.checkNotNullParameter(str2, "screenName");
            Intrinsics.checkNotNullParameter(str3, "shopCategory");
            Bundle bundle = new Bundle();
            Restaurant restaurantForDarkstores = getRestaurantForDarkstores(str);
            boolean z14 = false;
            if (restaurantForDarkstores != null) {
                Companion companion = TalabatGTM.Companion;
                bundle.putString("locationAddress", companion.getLocationAddress(context));
                bundle.putString("locationLat", companion.getLocationLatitude());
                bundle.putString("locationLon", companion.getLocationLongitude());
                String str11 = GlobalDataModel.SelectedCityName;
                if (str11 == null || str11.length() == 0) {
                    z11 = true;
                } else {
                    z11 = false;
                }
                if (z11) {
                    str6 = "N/A";
                } else {
                    str6 = GlobalDataModel.SelectedCityName;
                }
                bundle.putString("locationCity", str6);
                bundle.putString("locationArea", companion.getSelectedAreaId());
                bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
                Integer valueOf = Integer.valueOf(restaurantForDarkstores.branchId);
                StringBuilder sb2 = new StringBuilder();
                sb2.append(valueOf);
                bundle.putString("shopId", sb2.toString());
                bundle.putString("screenType", "shop_details");
                bundle.putString("screenName", "N/A");
                String str12 = restaurantForDarkstores.branchName;
                if (str12 == null || str12.length() == 0) {
                    z12 = true;
                } else {
                    z12 = false;
                }
                if (z12) {
                    str7 = "N/A";
                } else {
                    str7 = restaurantForDarkstores.branchName;
                }
                bundle.putString("shopName", str7);
                if (companion.getRestaurantMenuSections().size() > 0) {
                    str8 = String.valueOf(companion.getRestaurantMenuSections().size());
                } else {
                    str8 = "0";
                }
                bundle.putString(ShopDetailsLoadedEvent.MENU_CATEGORY_NUMBER, str8);
                bundle.putString("shopStatus", companion.getShopStatus(restaurantForDarkstores.statusType));
                bundle.putString("shopDeliveryFee", Float.valueOf(restaurantForDarkstores.deliveryCharges).toString());
                if (restaurantForDarkstores.hasCusine()) {
                    str9 = restaurantForDarkstores.GACuisineString();
                } else {
                    str9 = "N/A";
                }
                bundle.putString("shopMainCuisine", str9);
                bundle.putString("menuName", "N/A");
                Integer valueOf2 = Integer.valueOf(restaurantForDarkstores.f13872id);
                StringBuilder sb3 = new StringBuilder();
                sb3.append(valueOf2);
                bundle.putString("chainId", sb3.toString());
                String str13 = restaurantForDarkstores.f13873name;
                if (str13 == null || str13.length() == 0) {
                    z13 = true;
                } else {
                    z13 = false;
                }
                if (z13) {
                    str10 = "N/A";
                } else {
                    str10 = restaurantForDarkstores.f13873name;
                }
                bundle.putString("chainName", str10);
                bundle.putString("userId", companion.getUserId());
                bundle.putString("shopType", companion.listingType(restaurantForDarkstores));
            }
            bundle.putString("screenName", str2);
            bundle.putString("shopCategorySelected", str3);
            if (str5 == null || str5.length() == 0) {
                z14 = true;
            }
            if (z14) {
                str5 = "N/A";
            }
            bundle.putString("originType", str5);
            bundle.putString("categoryId", str3);
            TalabatFirebase.Companion.dispatchEvent(context, "view_all_clicked", bundle);
        }

        public final void onDarkstoresBannerShown(@NotNull Context context, @NotNull String str, @NotNull String str2, @NotNull String str3, @Nullable String str4, @NotNull String str5, int i11) {
            boolean z11;
            boolean z12;
            boolean z13;
            String str6;
            boolean z14;
            String str7;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "extraRestaurant");
            Intrinsics.checkNotNullParameter(str2, "globalId");
            Intrinsics.checkNotNullParameter(str3, "name");
            Intrinsics.checkNotNullParameter(str5, "type");
            Bundle bundle = new Bundle();
            Restaurant restaurantForDarkstores = getRestaurantForDarkstores(str);
            boolean z15 = false;
            if (restaurantForDarkstores != null) {
                int i12 = restaurantForDarkstores.f13872id;
                StringBuilder sb2 = new StringBuilder();
                sb2.append(i12);
                bundle.putString("chainId", sb2.toString());
                String str8 = restaurantForDarkstores.branchName;
                if (str8 == null || str8.length() == 0) {
                    z13 = true;
                } else {
                    z13 = false;
                }
                if (z13) {
                    str6 = "N/A";
                } else {
                    str6 = restaurantForDarkstores.branchName;
                }
                bundle.putString("shopName", str6);
                String str9 = restaurantForDarkstores.f13873name;
                if (str9 == null || str9.length() == 0) {
                    z14 = true;
                } else {
                    z14 = false;
                }
                if (z14) {
                    str7 = "N/A";
                } else {
                    str7 = restaurantForDarkstores.f13873name;
                }
                bundle.putString("chainName", str7);
                int i13 = restaurantForDarkstores.branchId;
                StringBuilder sb3 = new StringBuilder();
                sb3.append(i13);
                bundle.putString("shopId", sb3.toString());
                bundle.putString("shopType", TalabatGTM.Companion.listingType(restaurantForDarkstores));
            }
            if (str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            }
            bundle.putString("bannerId", str2);
            if (str3.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str3 = "N/A";
            }
            bundle.putString("bannerName", str3);
            if (str4 == null || str4.length() == 0) {
                z15 = true;
            }
            if (z15) {
                str4 = "N/A";
            }
            bundle.putString("screenName", str4);
            bundle.putString("bannerType", str5);
            bundle.putString("bannerPosition", String.valueOf(i11));
            TalabatFirebase.Companion.dispatchEvent(context, "banner_store_shown", bundle);
        }

        public final void onDarkstoresCategoryClicked(@NotNull Context context, @NotNull String str, @NotNull String str2, @Nullable String str3, @NotNull List<String> list, int i11, @Nullable String str4) {
            boolean z11;
            boolean z12;
            boolean z13;
            String str5;
            boolean z14;
            String str6;
            boolean z15;
            String str7;
            boolean z16;
            String str8;
            Context context2 = context;
            String str9 = str;
            List<String> list2 = list;
            Intrinsics.checkNotNullParameter(context2, "context");
            Intrinsics.checkNotNullParameter(str9, "extraRestaurant");
            String str10 = str2;
            Intrinsics.checkNotNullParameter(str10, "name");
            Intrinsics.checkNotNullParameter(list2, "subcategories");
            Bundle bundle = new Bundle();
            Restaurant restaurantForDarkstores = getRestaurantForDarkstores(str9);
            String str11 = "N/A";
            boolean z17 = false;
            if (restaurantForDarkstores != null) {
                Companion companion = TalabatGTM.Companion;
                bundle.putString("locationAddress", companion.getLocationAddress(context2));
                bundle.putString("locationLat", companion.getLocationLatitude());
                bundle.putString("locationLon", companion.getLocationLongitude());
                String str12 = GlobalDataModel.SelectedCityName;
                if (str12 == null || str12.length() == 0) {
                    z14 = true;
                } else {
                    z14 = false;
                }
                if (z14) {
                    str6 = str11;
                } else {
                    str6 = GlobalDataModel.SelectedCityName;
                }
                bundle.putString("locationCity", str6);
                bundle.putString("locationArea", companion.getSelectedAreaId());
                bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
                int i12 = restaurantForDarkstores.f13872id;
                StringBuilder sb2 = new StringBuilder();
                sb2.append(i12);
                bundle.putString("chainId", sb2.toString());
                String str13 = restaurantForDarkstores.branchName;
                if (str13 == null || str13.length() == 0) {
                    z15 = true;
                } else {
                    z15 = false;
                }
                if (z15) {
                    str7 = str11;
                } else {
                    str7 = restaurantForDarkstores.branchName;
                }
                bundle.putString("shopName", str7);
                String str14 = restaurantForDarkstores.f13873name;
                if (str14 == null || str14.length() == 0) {
                    z16 = true;
                } else {
                    z16 = false;
                }
                if (z16) {
                    str8 = str11;
                } else {
                    str8 = restaurantForDarkstores.f13873name;
                }
                bundle.putString("chainName", str8);
                int i13 = restaurantForDarkstores.branchId;
                StringBuilder sb3 = new StringBuilder();
                sb3.append(i13);
                bundle.putString("shopId", sb3.toString());
                bundle.putString("shopType", companion.listingType(restaurantForDarkstores));
            }
            if (str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str10 = str11;
            }
            bundle.putString("mainCategory", str10);
            String joinToString$default = CollectionsKt___CollectionsKt.joinToString$default(list2, ",", (CharSequence) null, (CharSequence) null, 0, (CharSequence) null, (Function1) null, 62, (Object) null);
            if (joinToString$default == null || joinToString$default.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                joinToString$default = str11;
            }
            bundle.putString("subCategory", joinToString$default);
            if (str4 == null || str4.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str5 = str11;
            } else {
                str5 = str4;
            }
            bundle.putString("screenName", str5);
            if (str3 == null || str3.length() == 0) {
                z17 = true;
            }
            if (!z17) {
                str11 = str3;
            }
            bundle.putString("categoryId", str11);
            bundle.putString(SearchTracker.CATEGORY_POSITION, String.valueOf(i11));
            TalabatFirebase.Companion.dispatchEvent(context2, "category_details_clicked", bundle);
        }

        public final void onDarkstoresCategoryLoaded(@NotNull Context context, @NotNull String str, @NotNull String str2, @Nullable String str3, @NotNull List<String> list, @NotNull List<ProductTracking> list2, @Nullable String str4, boolean z11, @Nullable String str5) {
            boolean z12;
            String str6;
            String str7;
            boolean z13;
            String str8;
            boolean z14;
            boolean z15;
            boolean z16;
            String str9;
            boolean z17;
            String str10;
            boolean z18;
            String str11;
            Context context2 = context;
            String str12 = str;
            List<String> list3 = list;
            List<ProductTracking> list4 = list2;
            Intrinsics.checkNotNullParameter(context2, "context");
            Intrinsics.checkNotNullParameter(str12, "extraRestaurant");
            String str13 = str2;
            Intrinsics.checkNotNullParameter(str13, "name");
            Intrinsics.checkNotNullParameter(list3, "subcategories");
            Intrinsics.checkNotNullParameter(list4, "products");
            Bundle bundle = new Bundle();
            Restaurant restaurantForDarkstores = getRestaurantForDarkstores(str12);
            boolean z19 = true;
            if (str3 == null || str3.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            String str14 = "N/A";
            if (z12) {
                str6 = str14;
            } else {
                str6 = str3;
            }
            if (restaurantForDarkstores != null) {
                str7 = restaurantForDarkstores.branchName;
            } else {
                str7 = null;
            }
            if (str7 == null || str7.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str7 = str14;
            }
            if (restaurantForDarkstores != null) {
                Companion companion = TalabatGTM.Companion;
                bundle.putString("locationAddress", companion.getLocationAddress(context2));
                bundle.putString("locationLat", companion.getLocationLatitude());
                bundle.putString("locationLon", companion.getLocationLongitude());
                String str15 = GlobalDataModel.SelectedCityName;
                if (str15 == null || str15.length() == 0) {
                    z17 = true;
                } else {
                    z17 = false;
                }
                if (z17) {
                    str10 = str14;
                } else {
                    str10 = GlobalDataModel.SelectedCityName;
                }
                bundle.putString("locationCity", str10);
                bundle.putString("locationArea", companion.getSelectedAreaId());
                bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
                int i11 = restaurantForDarkstores.f13872id;
                StringBuilder sb2 = new StringBuilder();
                sb2.append(i11);
                bundle.putString("chainId", sb2.toString());
                bundle.putString("shopName", str7);
                String str16 = restaurantForDarkstores.f13873name;
                if (str16 == null || str16.length() == 0) {
                    z18 = true;
                } else {
                    z18 = false;
                }
                if (z18) {
                    str11 = str14;
                } else {
                    str11 = restaurantForDarkstores.f13873name;
                }
                bundle.putString("chainName", str11);
                int i12 = restaurantForDarkstores.branchId;
                StringBuilder sb3 = new StringBuilder();
                sb3.append(i12);
                bundle.putString("shopId", sb3.toString());
                bundle.putString("shopType", companion.listingType(restaurantForDarkstores));
            }
            if (list.isEmpty()) {
                str8 = str14;
            } else {
                str8 = (String) CollectionsKt___CollectionsKt.first(list);
            }
            bundle.putString("productCategory", str8);
            if (str2.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str13 = str14;
            }
            bundle.putString("mainCategory", str13);
            String joinToString$default = CollectionsKt___CollectionsKt.joinToString$default(list3, ",", (CharSequence) null, (CharSequence) null, 0, (CharSequence) null, (Function1) null, 62, (Object) null);
            if (joinToString$default.length() == 0) {
                z15 = true;
            } else {
                z15 = false;
            }
            if (z15) {
                joinToString$default = str14;
            }
            bundle.putString("subCategory", joinToString$default);
            if (str4 == null || str4.length() == 0) {
                z16 = true;
            } else {
                z16 = false;
            }
            if (z16) {
                str9 = str14;
            } else {
                str9 = str4;
            }
            bundle.putString("screenName", str9);
            bundle.putString("originType", "category");
            bundle.putString("categoryId", str6);
            Iterable<ProductTracking> iterable = list4;
            ArrayList arrayList = new ArrayList(CollectionsKt__IterablesKt.collectionSizeOrDefault(iterable, 10));
            for (ProductTracking bundle2 : iterable) {
                arrayList.add(TalabatGTM.Companion.toBundle(bundle2, str6, str7));
            }
            Object[] array = arrayList.toArray(new Bundle[0]);
            Intrinsics.checkNotNull(array, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");
            bundle.putParcelableArray(FirebaseAnalytics.Param.ITEMS, (Parcelable[]) array);
            if (!(str5 == null || str5.length() == 0)) {
                z19 = false;
            }
            if (!z19) {
                str14 = str5;
            }
            bundle.putString("eventOrigin", str14);
            TalabatFirebase.Companion companion2 = TalabatFirebase.Companion;
            String str17 = "category_details_expanded";
            bundle.putString("originalEventName", str17);
            Unit unit = Unit.INSTANCE;
            companion2.dispatchEvent(context2, FirebaseAnalytics.Event.VIEW_SEARCH_RESULTS, bundle);
            if (!z11) {
                str17 = "category_details_loaded";
            }
            companion2.dispatchEvent(context2, str17, bundle);
        }

        public final void onDarkstoresCategoryUpdated(@NotNull Context context, @NotNull String str, @NotNull String str2, @Nullable String str3, @NotNull String str4, @NotNull List<ProductTracking> list) {
            boolean z11;
            String str5;
            boolean z12;
            boolean z13;
            String str6;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "extraRestaurant");
            Intrinsics.checkNotNullParameter(str2, "categoryName");
            Intrinsics.checkNotNullParameter(str4, "selectedItem");
            Intrinsics.checkNotNullParameter(list, "products");
            Restaurant restaurantForDarkstores = getRestaurantForDarkstores(str);
            boolean z14 = true;
            if (str3 == null || str3.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str3 = "N/A";
            }
            if (restaurantForDarkstores != null) {
                str5 = restaurantForDarkstores.branchName;
            } else {
                str5 = null;
            }
            if (str5 == null || str5.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str5 = "N/A";
            }
            Bundle bundle = new Bundle();
            if (restaurantForDarkstores != null) {
                bundle.putString("shopListType", TalabatGTM.Companion.listingType(restaurantForDarkstores));
                bundle.putString("shopName", str5);
                int i11 = restaurantForDarkstores.branchId;
                StringBuilder sb2 = new StringBuilder();
                sb2.append(i11);
                bundle.putString("shopId", sb2.toString());
                int i12 = restaurantForDarkstores.f13872id;
                StringBuilder sb3 = new StringBuilder();
                sb3.append(i12);
                bundle.putString("chainId", sb3.toString());
                String str7 = restaurantForDarkstores.f13873name;
                if (str7 == null || str7.length() == 0) {
                    z13 = true;
                } else {
                    z13 = false;
                }
                if (z13) {
                    str6 = "N/A";
                } else {
                    str6 = restaurantForDarkstores.f13873name;
                }
                bundle.putString("chainName", str6);
            }
            bundle.putString("shopFilteringSelected", str4);
            if (str2.length() != 0) {
                z14 = false;
            }
            if (z14) {
                str2 = "N/A";
            }
            bundle.putString("mainCategory", str2);
            bundle.putString("categoryId", str3);
            bundle.putString("eventOrigin", "category_shelf_view");
            Iterable<ProductTracking> iterable = list;
            ArrayList arrayList = new ArrayList(CollectionsKt__IterablesKt.collectionSizeOrDefault(iterable, 10));
            for (ProductTracking bundle2 : iterable) {
                arrayList.add(TalabatGTM.Companion.toBundle(bundle2, str3, str5));
            }
            Object[] array = arrayList.toArray(new Bundle[0]);
            Intrinsics.checkNotNull(array, "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");
            bundle.putParcelableArray(FirebaseAnalytics.Param.ITEMS, (Parcelable[]) array);
            TalabatFirebase.Companion.dispatchEvent(context, "category_details_updated", bundle);
        }

        public final void onDarkstoresComponentClicked(@NotNull Context context, @NotNull String str, @NotNull String str2, @NotNull String str3) {
            String str4;
            String str5;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "extraRestaurant");
            Intrinsics.checkNotNullParameter(str2, "eventOrigin");
            Intrinsics.checkNotNullParameter(str3, "shopClickedOrigin");
            Bundle bundle = new Bundle();
            Restaurant restaurantForDarkstores = getRestaurantForDarkstores(str);
            if (restaurantForDarkstores != null) {
                bundle.putString("shopListType", "grocery");
                bundle.putString("shopName", restaurantForDarkstores.f13873name);
                bundle.putString("shopId", String.valueOf(restaurantForDarkstores.branchId));
                bundle.putString("chainId", String.valueOf(restaurantForDarkstores.f13872id));
                bundle.putString("chainName", restaurantForDarkstores.branchName);
                bundle.putString("deliveryProvider", "shop_delivery");
                Companion companion = TalabatGTM.Companion;
                bundle.putString("shopOfferType", companion.getOfferType(restaurantForDarkstores));
                String shopStatus = companion.getShopStatus(restaurantForDarkstores.statusType);
                String str6 = "N/A";
                if (shopStatus == null) {
                    shopStatus = str6;
                }
                bundle.putString("shopStatus", shopStatus);
                bundle.putString("shopDeliveryTime", restaurantForDarkstores.deliveryTime);
                String cuisineString = restaurantForDarkstores.getCuisineString();
                if (cuisineString == null) {
                    cuisineString = str6;
                } else {
                    Intrinsics.checkNotNullExpressionValue(cuisineString, "info.cuisineString ?: \"N/A\"");
                }
                bundle.putString("shopCategoryList", cuisineString);
                bundle.putString("eventOrigin", str2);
                bundle.putString("shopClickOrigin", str3);
                String midasRequestId = MidasHttpInterceptorKt.getMidasRequestId();
                if (midasRequestId == null) {
                    midasRequestId = "";
                }
                bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.CLICK_MIDAS_REQUEST_ID, midasRequestId);
                Restaurant.PremiumType premiumType = restaurantForDarkstores.premiumType;
                if (!(premiumType == null || (str5 = premiumType.token) == null)) {
                    str6 = str5;
                }
                bundle.putString("ncrRequestToken", str6);
                Restaurant restaurant = GlobalDataModel.SELECTED.restaurant;
                if (restaurant != null) {
                    str4 = restaurant.deliveryMode();
                } else {
                    str4 = null;
                }
                bundle.putString("listingPageType", str4);
            }
            getTalabatFirebase().dispatchEvent(context, "shop_clicked", bundle);
            trackAdExEvent("shop_clicked", bundle);
        }

        public final void onDarkstoresLoaded(@NotNull Context context, @Nullable String str, @Nullable String str2) {
            boolean z11;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            Restaurant restaurantForDarkstores = getRestaurantForDarkstores(str);
            if (restaurantForDarkstores != null) {
                bundle.putString("shopName", restaurantForDarkstores.f13873name);
                bundle.putString("shopId", String.valueOf(restaurantForDarkstores.branchId));
                bundle.putString("chainId", String.valueOf(restaurantForDarkstores.f13872id));
                bundle.putString("chainName", restaurantForDarkstores.branchName);
                Companion companion = TalabatGTM.Companion;
                bundle.putString("shopOfferType", companion.getOfferType(restaurantForDarkstores));
                String shopStatus = companion.getShopStatus(restaurantForDarkstores.statusType);
                if (shopStatus == null) {
                    shopStatus = "N/A";
                }
                bundle.putString("shopStatus", shopStatus);
                bundle.putString("shopDeliveryTime", restaurantForDarkstores.deliveryTime);
                String cuisineString = restaurantForDarkstores.getCuisineString();
                if (cuisineString == null) {
                    cuisineString = "N/A";
                } else {
                    Intrinsics.checkNotNullExpressionValue(cuisineString, "info.cuisineString ?: \"N/A\"");
                }
                bundle.putString("shopCategoryList", cuisineString);
                bundle.putString("deliveryProvider", companion.restaurantType(restaurantForDarkstores));
                bundle.putString("shopType", companion.listingType(restaurantForDarkstores));
            }
            bundle.putString("shopListType", "grocery");
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            }
            bundle.putString("screenName", str2);
            TalabatFirebase.Companion.dispatchEvent(context, "darkstore_loaded", bundle);
        }

        public final void onDarkstoresLookingGlassClicked(@NotNull Context context, @NotNull String str) {
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "extraRestaurant");
            Bundle bundle = new Bundle();
            Restaurant restaurantForDarkstores = getRestaurantForDarkstores(str);
            if (restaurantForDarkstores != null) {
                bundle.putString("shopListType", "grocery");
                bundle.putString("shopName", restaurantForDarkstores.f13873name);
                bundle.putString("shopId", String.valueOf(restaurantForDarkstores.branchId));
                bundle.putString("chainId", String.valueOf(restaurantForDarkstores.f13872id));
                bundle.putString("chainName", restaurantForDarkstores.branchName);
                bundle.putString("deliveryProvider", "shop_delivery");
                Companion companion = TalabatGTM.Companion;
                bundle.putString("shopOfferType", companion.getOfferType(restaurantForDarkstores));
                String shopStatus = companion.getShopStatus(restaurantForDarkstores.statusType);
                String str3 = "N/A";
                if (shopStatus == null) {
                    shopStatus = str3;
                }
                bundle.putString("shopStatus", shopStatus);
                bundle.putString("shopDeliveryTime", restaurantForDarkstores.deliveryTime);
                String cuisineString = restaurantForDarkstores.getCuisineString();
                if (cuisineString == null) {
                    cuisineString = str3;
                } else {
                    Intrinsics.checkNotNullExpressionValue(cuisineString, "info.cuisineString ?: \"N/A\"");
                }
                bundle.putString("shopCategoryList", cuisineString);
                String midasRequestId = MidasHttpInterceptorKt.getMidasRequestId();
                if (midasRequestId == null) {
                    midasRequestId = "";
                }
                bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.CLICK_MIDAS_REQUEST_ID, midasRequestId);
                Restaurant.PremiumType premiumType = restaurantForDarkstores.premiumType;
                if (!(premiumType == null || (str2 = premiumType.token) == null)) {
                    str3 = str2;
                }
                bundle.putString("ncrRequestToken", str3);
                bundle.putString("screenName", "Home");
                bundle.putString("screenType", ScreenNames.SCREEN_TYPE_ORDERCONFIRM);
                bundle.putString("eventOrigin", "looking_glass");
                bundle.putString("shopClickOrigin", "item_carousel");
                bundle.putString("listingPageType", "darkstore");
            }
            getTalabatFirebase().dispatchEvent(context, "shop_clicked", bundle);
            trackAdExEvent("shop_clicked", bundle);
        }

        public final void onDarkstoresLookingGlassShown(@NotNull Context context, @NotNull String str) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "extraRestaurant");
            Bundle bundle = new Bundle();
            Restaurant restaurantForDarkstores = getRestaurantForDarkstores(str);
            if (restaurantForDarkstores != null) {
                bundle.putString("shopListType", "grocery");
                bundle.putString("shopName", restaurantForDarkstores.f13873name);
                bundle.putString("shopId", String.valueOf(restaurantForDarkstores.branchId));
                bundle.putString("chainId", String.valueOf(restaurantForDarkstores.f13872id));
                bundle.putString("chainName", restaurantForDarkstores.branchName);
                bundle.putString("deliveryProvider", "shop_delivery");
                Companion companion = TalabatGTM.Companion;
                bundle.putString("shopOfferType", companion.getOfferType(restaurantForDarkstores));
                String shopStatus = companion.getShopStatus(restaurantForDarkstores.statusType);
                String str2 = "N/A";
                if (shopStatus == null) {
                    shopStatus = str2;
                }
                bundle.putString("shopStatus", shopStatus);
                bundle.putString("shopDeliveryTime", restaurantForDarkstores.deliveryTime);
                String cuisineString = restaurantForDarkstores.getCuisineString();
                if (cuisineString != null) {
                    Intrinsics.checkNotNullExpressionValue(cuisineString, "info.cuisineString ?: \"N/A\"");
                    str2 = cuisineString;
                }
                bundle.putString("shopCategoryList", str2);
                bundle.putString("screenName", "looking_glass");
                bundle.putString("screenType", ScreenNames.SCREEN_TYPE_ORDERCONFIRM);
                bundle.putString("listingPageType", "darkstore");
                bundle.putString("widgetType", "looking_glass");
                bundle.putString("widgetName", "item_carousel");
            }
            TalabatFirebase.Companion.dispatchEvent(context, "widget_shown", bundle);
        }

        public final void onDarkstoresProductOpened(@NotNull Context context, @NotNull String str, @NotNull String str2, @NotNull String str3, float f11, boolean z11, @Nullable String str4, @NotNull String str5, @NotNull String str6) {
            boolean z12;
            String str7;
            boolean z13;
            boolean z14;
            boolean z15;
            String str8;
            boolean z16;
            String str9;
            Context context2 = context;
            String str10 = str5;
            String str11 = str6;
            Intrinsics.checkNotNullParameter(context, "context");
            String str12 = str;
            Intrinsics.checkNotNullParameter(str12, "id");
            String str13 = str2;
            Intrinsics.checkNotNullParameter(str13, "name");
            Intrinsics.checkNotNullParameter(str3, "description");
            Intrinsics.checkNotNullParameter(str10, "extraRestaurant");
            Intrinsics.checkNotNullParameter(str11, "screenName");
            Bundle bundle = new Bundle();
            Restaurant restaurantForDarkstores = getRestaurantForDarkstores(str10);
            boolean z17 = false;
            String str14 = "N/A";
            if (restaurantForDarkstores != null) {
                Companion companion = TalabatGTM.Companion;
                bundle.putString("locationAddress", companion.getLocationAddress(context));
                String str15 = GlobalDataModel.SelectedCityName;
                if (str15 == null || str15.length() == 0) {
                    z12 = true;
                } else {
                    z12 = false;
                }
                if (z12) {
                    str7 = str14;
                } else {
                    str7 = GlobalDataModel.SelectedCityName;
                }
                bundle.putString("locationCity", str7);
                bundle.putString("locationArea", companion.getSelectedAreaId());
                bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
                bundle.putString("userId", companion.getUserId());
                bundle.putString("screenType", ScreenNames.ITEM_CHOICE_SCREEN);
                bundle.putString("userTimeStamp", companion.getCurrentTime());
                bundle.putString("shopId", Integer.valueOf(restaurantForDarkstores.branchId).toString());
                bundle.putString("eventOrigin", GlobalDataModel.ShopClickOrigin);
                if (str2.length() == 0) {
                    z13 = true;
                } else {
                    z13 = false;
                }
                if (z13) {
                    str13 = str14;
                }
                bundle.putString(ProductTrackingProvider.NAME, str13);
                if (str.length() == 0) {
                    z14 = true;
                } else {
                    z14 = false;
                }
                if (z14) {
                    str12 = str14;
                }
                bundle.putString("productSku", str12);
                String str16 = restaurantForDarkstores.branchName;
                if (str16 == null || str16.length() == 0) {
                    z15 = true;
                } else {
                    z15 = false;
                }
                if (z15) {
                    str8 = str14;
                } else {
                    str8 = restaurantForDarkstores.branchName;
                }
                bundle.putString("shopName", str8);
                bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
                bundle.putString(ProductTrackingProvider.QUANTITY, "1");
                bundle.putString("productVariant", str14);
                bundle.putString(ProductTrackingProvider.PRICE, String.valueOf(f11));
                String valueOf = String.valueOf(restaurantForDarkstores.f13872id);
                if (valueOf == null || valueOf.length() == 0) {
                    z16 = true;
                } else {
                    z16 = false;
                }
                if (z16) {
                    str9 = str14;
                } else {
                    str9 = String.valueOf(restaurantForDarkstores.f13872id);
                }
                bundle.putString("chainId", str9);
                bundle.putString("shopType", companion.listingType(restaurantForDarkstores));
            }
            if (str4 == null || str4.length() == 0) {
                z17 = true;
            }
            if (!z17) {
                str14 = str4;
            }
            bundle.putString("categoryId", str14);
            bundle.putString("screenName", str11);
            bundle.putString(ProductTrackingProvider.FAVOURITE, String.valueOf(z11));
            TalabatFirebase.Companion.dispatchEvent(context, "product_choice_opened", bundle);
        }

        public final void onDarkstoresSearchBarClicked(@NotNull Context context, @NotNull String str, @NotNull String str2) {
            boolean z11;
            String str3;
            boolean z12;
            String str4;
            boolean z13;
            String str5;
            String str6;
            String str7;
            boolean z14;
            String str8;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "extraRestaurant");
            Intrinsics.checkNotNullParameter(str2, "screenName");
            Bundle bundle = new Bundle();
            Restaurant restaurantForDarkstores = getRestaurantForDarkstores(str);
            if (restaurantForDarkstores != null) {
                Companion companion = TalabatGTM.Companion;
                bundle.putString("locationAddress", companion.getLocationAddress(context));
                bundle.putString("locationLat", companion.getLocationLatitude());
                bundle.putString("locationLon", companion.getLocationLongitude());
                String str9 = GlobalDataModel.SelectedCityName;
                boolean z15 = false;
                if (str9 == null || str9.length() == 0) {
                    z11 = true;
                } else {
                    z11 = false;
                }
                String str10 = "N/A";
                if (z11) {
                    str3 = str10;
                } else {
                    str3 = GlobalDataModel.SelectedCityName;
                }
                bundle.putString("locationCity", str3);
                bundle.putString("locationArea", companion.getSelectedAreaId());
                bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
                String valueOf = String.valueOf(restaurantForDarkstores.branchId);
                if (valueOf == null || valueOf.length() == 0) {
                    z12 = true;
                } else {
                    z12 = false;
                }
                if (z12) {
                    str4 = str10;
                } else {
                    str4 = String.valueOf(restaurantForDarkstores.branchId);
                }
                bundle.putString("shopId", str4);
                bundle.putString("screenType", "shop_details");
                bundle.putString("screenName", str10);
                String str11 = restaurantForDarkstores.branchName;
                if (str11 == null || str11.length() == 0) {
                    z13 = true;
                } else {
                    z13 = false;
                }
                if (z13) {
                    str5 = str10;
                } else {
                    str5 = restaurantForDarkstores.branchName;
                }
                bundle.putString("shopName", str5);
                if (companion.getRestaurantMenuSections().size() > 0) {
                    str6 = String.valueOf(companion.getRestaurantMenuSections().size());
                } else {
                    str6 = "0";
                }
                bundle.putString(ShopDetailsLoadedEvent.MENU_CATEGORY_NUMBER, str6);
                bundle.putString("shopStatus", companion.getShopStatus(restaurantForDarkstores.statusType));
                bundle.putString("shopDeliveryFee", String.valueOf(restaurantForDarkstores.deliveryCharges));
                if (restaurantForDarkstores.hasCusine()) {
                    str7 = restaurantForDarkstores.GACuisineString();
                } else {
                    str7 = str10;
                }
                bundle.putString("shopMainCuisine", str7);
                bundle.putString("menuName", str10);
                String valueOf2 = String.valueOf(restaurantForDarkstores.f13872id);
                if (valueOf2 == null || valueOf2.length() == 0) {
                    z14 = true;
                } else {
                    z14 = false;
                }
                if (z14) {
                    str8 = str10;
                } else {
                    str8 = String.valueOf(restaurantForDarkstores.f13872id);
                }
                bundle.putString("chainId", str8);
                String str12 = restaurantForDarkstores.f13873name;
                if (str12 == null || str12.length() == 0) {
                    z15 = true;
                }
                if (!z15) {
                    str10 = restaurantForDarkstores.f13873name;
                }
                bundle.putString("chainName", str10);
                bundle.putString("userId", companion.getUserId());
                bundle.putString("shopType", companion.listingType(restaurantForDarkstores));
            }
            bundle.putString("screenName", str2);
            bundle.putString("eventOrigin", "search");
            TalabatFirebase.Companion.dispatchEvent(context, "search_bar_clicked", bundle);
        }

        public final void onDeliverHereClicked(@NotNull Context context, @Nullable LatLng latLng) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onDuplicateOrderPopupClosed(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onDuplicateOrderPopupConfirmClicked(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onDuplicateOrderPopupShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onExperimentRunForApptimize(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3) {
            boolean z11;
            boolean z12;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z13 = false;
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            }
            bundle.putString(RemoteConfigConstants.ExperimentDescriptionFieldKey.EXPERIMENT_ID, str2);
            if (str3 == null || str3.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str3 = "N/A";
            }
            bundle.putString("experimentVariation", str3);
            if (str == null || str.length() == 0) {
                z13 = true;
            }
            if (z13) {
                str = "N/A";
            }
            bundle.putString("screenType", str);
            TalabatFirebase.Companion.dispatchEvent(context, "ab_test_participated", bundle);
        }

        public final void onFilterButtonClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
            TalabatFirebase.Companion.dispatchEvent(context, "filters_clicked", addVendorListCuisinesProperties(false, getCommonBundle(context), "shop_list_filters"));
        }

        public final void onFilterOptionSelected(@NotNull Context context, @Nullable String str, @Nullable String str2) {
            Intrinsics.checkNotNullParameter(context, "context");
            TalabatFirebase.Companion.dispatchEvent(context, "filter_option_clicked", addVendorListFilterProperties(addVendorListCuisinesProperties(false, getCommonBundle(context), "filter"), str, str2));
        }

        public final void onFilterScreenApplySelection(@NotNull Context context, @Nullable String str, @Nullable String str2) {
            Intrinsics.checkNotNullParameter(context, "context");
            TalabatFirebase.Companion.dispatchEvent(context, "filters_applied", addVendorListFilterProperties(addVendorListCuisinesProperties(false, getCommonBundle(context), "filter"), str, str2));
        }

        public final void onFilterScreenClearSelection(@NotNull Context context, @Nullable String str, @Nullable String str2) {
            Intrinsics.checkNotNullParameter(context, "context");
            TalabatFirebase.Companion.dispatchEvent(context, ClearFiltersClicked.EVENT_NAME, addVendorListFilterProperties(addVendorListCuisinesProperties(false, getCommonBundle(context), "filter"), str, str2));
        }

        public final void onFilterViewLoaded(@NotNull Context context, @Nullable String str, @Nullable String str2, @NotNull String str3) {
            boolean z11;
            boolean z12;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str3, "listingPageType");
            Bundle bundle = new Bundle();
            bundle.putString("userId", getUserId());
            boolean z13 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str4 = "N/A";
            if (z11) {
                str = str4;
            }
            bundle.putString("screenType", str);
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = str4;
            }
            bundle.putString("screenName", str2);
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str5 = GlobalDataModel.SelectedCityName;
            if (str5 == null || str5.length() == 0) {
                z13 = true;
            }
            if (!z13) {
                str4 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str4);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("listingPageType", str3);
            TalabatFirebase.Companion.dispatchEvent(context, "filter_view_loaded", bundle);
        }

        public final void onFindRestaurantClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onGeoLocationClicked(@NotNull Context context, @NotNull String str, @NotNull String str2, @NotNull String str3) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "screenName");
            Intrinsics.checkNotNullParameter(str2, "screenType");
            Intrinsics.checkNotNullParameter(str3, "locationStatus");
            Bundle bundle = new Bundle();
            bundle.putString("screenName", str);
            bundle.putString("screenType", str2);
            bundle.putString("status", str3);
            TalabatFirebase.Companion.dispatchEvent(context, "geolocation_clicked", bundle);
        }

        public final void onGeoLocationRecievedHomeMap(@NotNull Context context, @Nullable LatLng latLng) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onGeolocationDialogueAccepted(@NotNull Context context, @NotNull AddressAnalyticsTracker addressAnalyticsTracker) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(addressAnalyticsTracker, "addressAnalyticsTracker");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", addressAnalyticsTracker.getLocationAddress());
            bundle.putString("locationLat", addressAnalyticsTracker.getLocationLat());
            bundle.putString("locationLon", addressAnalyticsTracker.getLocationLon());
            bundle.putString("locationCity", addressAnalyticsTracker.getLocationCity());
            bundle.putString("locationArea", addressAnalyticsTracker.getLocationArea());
            bundle.putString("locationCountry", addressAnalyticsTracker.getLocationCountry());
            bundle.putString("screenType", addressAnalyticsTracker.getScreenType());
            bundle.putString("screenName", addressAnalyticsTracker.getScreenName());
            bundle.putString("locationMethod", addressAnalyticsTracker.getLocationMethod());
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_DELIVERY_ADDRESS_STATUS, addressAnalyticsTracker.getDeliveryAddressStatus());
            bundle.putString("mapErrorMessage", addressAnalyticsTracker.getMapErrorMessage());
            bundle.putString("apiMethod", addressAnalyticsTracker.getApiMethod());
            bundle.putString("apiResponse", addressAnalyticsTracker.getApiResponse());
            bundle.putString("geolocationAccuracy", addressAnalyticsTracker.getGeolocationAccuracy());
            bundle.putString("locationDialogueAccepted", addressAnalyticsTracker.getLocationDialogueAccepted());
            bundle.putString("locationDialogueType", addressAnalyticsTracker.getLocationDialogueType());
            bundle.putString("addressComponentType", addressAnalyticsTracker.getAddressComponentType());
            bundle.putString("countrySelected", addressAnalyticsTracker.getCountrySelected());
            bundle.putString(Param.MAP_TYPE, addressAnalyticsTracker.getMapType());
            bundle.putString("eventOrigin", addressAnalyticsTracker.getJourneyType());
            TalabatFirebase.Companion.dispatchEvent(context, "geolocation_dialogue_accepted", bundle);
            LogAddressEvent("geolocation_dialogue_accepted", addressAnalyticsTracker);
        }

        public final void onGeolocationReceived(@NotNull Context context, @Nullable LatLng latLng) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onGeolocationRequested(@NotNull Context context, @NotNull AddressAnalyticsTracker addressAnalyticsTracker) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(addressAnalyticsTracker, "addressAnalyticsTracker");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", addressAnalyticsTracker.getLocationAddress());
            bundle.putString("locationLat", addressAnalyticsTracker.getLocationLat());
            bundle.putString("locationLon", addressAnalyticsTracker.getLocationLon());
            bundle.putString("locationCity", addressAnalyticsTracker.getLocationCity());
            bundle.putString("locationArea", addressAnalyticsTracker.getLocationArea());
            bundle.putString("locationCountry", addressAnalyticsTracker.getLocationCountry());
            bundle.putString("screenType", addressAnalyticsTracker.getScreenType());
            bundle.putString("screenName", addressAnalyticsTracker.getScreenName());
            bundle.putString("locationMethod", addressAnalyticsTracker.getLocationMethod());
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_DELIVERY_ADDRESS_STATUS, addressAnalyticsTracker.getDeliveryAddressStatus());
            bundle.putString("mapErrorMessage", addressAnalyticsTracker.getMapErrorMessage());
            bundle.putString("apiMethod", addressAnalyticsTracker.getApiMethod());
            bundle.putString("apiResponse", addressAnalyticsTracker.getApiResponse());
            bundle.putString("geolocationAccuracy", addressAnalyticsTracker.getGeolocationAccuracy());
            bundle.putString("locationDialogueAccepted", addressAnalyticsTracker.getLocationDialogueAccepted());
            bundle.putString("locationDialogueType", addressAnalyticsTracker.getLocationDialogueType());
            bundle.putString("addressComponentType", addressAnalyticsTracker.getAddressComponentType());
            bundle.putString("countrySelected", addressAnalyticsTracker.getCountrySelected());
            bundle.putString(Param.MAP_TYPE, addressAnalyticsTracker.getMapType());
            bundle.putString("eventOrigin", addressAnalyticsTracker.getJourneyType());
            bundle.putString("distanceShift", addressAnalyticsTracker.getLocationDistance());
            TalabatFirebase.Companion.dispatchEvent(context, "geolocation_requested", bundle);
            LogAddressEvent("geolocation_requested", addressAnalyticsTracker);
        }

        public final void onGoGreenSelected(@NotNull Context context, boolean z11) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onGpsInfoReceived(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4, @NotNull String str5, @NotNull String str6, @NotNull String str7, @NotNull String str8) {
            boolean z11;
            String str9;
            boolean z12;
            String str10;
            boolean z13;
            String str11;
            boolean z14;
            String str12;
            boolean z15;
            boolean z16;
            boolean z17;
            Context context2 = context;
            Intrinsics.checkNotNullParameter(context2, "context");
            String str13 = str5;
            Intrinsics.checkNotNullParameter(str13, "screenName");
            String str14 = str6;
            Intrinsics.checkNotNullParameter(str14, "screenType");
            String str15 = str7;
            Intrinsics.checkNotNullParameter(str15, "locationLat");
            String str16 = str8;
            Intrinsics.checkNotNullParameter(str16, "locationLon");
            Bundle bundle = new Bundle();
            boolean z18 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str9 = "N/A";
            } else {
                str9 = str;
            }
            bundle.putString("gpsAccuracy", str9);
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str10 = "N/A";
            } else {
                str10 = str2;
            }
            bundle.putString("gpsMaximumWaitTime", str10);
            if (str3 == null || str3.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str11 = "N/A";
            } else {
                str11 = str3;
            }
            bundle.putString("gpsWaitTime", str11);
            if (str4 == null || str4.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str12 = "N/A";
            } else {
                str12 = str4;
            }
            bundle.putString("thresholdGpsAccuracy", str12);
            if (str5.length() == 0) {
                z15 = true;
            } else {
                z15 = false;
            }
            if (z15) {
                str13 = "N/A";
            }
            bundle.putString("screenName", str13);
            if (str6.length() == 0) {
                z16 = true;
            } else {
                z16 = false;
            }
            if (z16) {
                str14 = "N/A";
            }
            bundle.putString("screenType", str14);
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (str7.length() == 0) {
                z17 = true;
            } else {
                z17 = false;
            }
            if (z17) {
                str15 = "N/A";
            }
            bundle.putString("locationLat", str15);
            if (str8.length() == 0) {
                z18 = true;
            }
            if (z18) {
                str16 = "N/A";
            }
            bundle.putString("locationLon", str16);
            TalabatFirebase.Companion.dispatchEvent(context2, "gps_info_received", bundle);
        }

        public final void onGpsPopupStatus(@NotNull Context context, boolean z11, boolean z12, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onHelpcenterLinkClicked(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4, @Nullable String str5, boolean z11) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onHelpcentreLinkClicked(@NotNull Context context, @Nullable MostRecentOrderList mostRecentOrderList, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4) {
            boolean z11;
            boolean z12;
            String str5;
            boolean z13;
            boolean z14;
            String str6;
            boolean z15;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z16 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("screenType", str);
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str7 = GlobalDataModel.SelectedCityName;
            if (str7 == null || str7.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str5 = "N/A";
            } else {
                str5 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str5);
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (str2 == null || str2.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str2 = "N/A";
            }
            bundle.putString("screenName", str2);
            if (str3 == null || str3.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str3 = "N/A";
            }
            bundle.putString("linkText", str3);
            String str8 = null;
            if (mostRecentOrderList != null) {
                str6 = mostRecentOrderList.encryptedOrderId;
            } else {
                str6 = null;
            }
            if (str6 == null || str6.length() == 0) {
                z15 = true;
            } else {
                z15 = false;
            }
            if (z15) {
                str8 = "N/A";
            } else if (mostRecentOrderList != null) {
                str8 = mostRecentOrderList.encryptedOrderId;
            }
            bundle.putString("transactionId", str8);
            if (str4 == null || str4.length() == 0) {
                z16 = true;
            }
            if (z16) {
                str4 = "N/A";
            }
            bundle.putString("contactOption", str4);
            TalabatFirebase.Companion.dispatchEvent(context, "helpcentre_link_clicked", bundle);
        }

        public final void onHomeCuisinesClicked(@NotNull Context context, @NotNull String str) {
            boolean z11;
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "itemName");
            Bundle bundle = new Bundle();
            bundle.putString("userId", getUserId());
            bundle.putString("screenType", "home");
            bundle.putString("screenName", "Home Screen");
            String str3 = GlobalDataModel.SelectedCityName;
            if (str3 == null || str3.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            } else {
                str2 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str2);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("eventOrigin", "homescreen_cuisine");
            TalabatFirebase.Companion.dispatchEvent(context, "filter_option_clicked", bundle);
        }

        public final void onInformapAddressPopupShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onInformapAreaMismatchShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onInformapCloseClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onInformapContinueClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onInformapNewAddressClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onInformapWebviewClosed(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onInformapWebviewShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onJokerCheckoutLoaded(@NotNull Context context, @Nullable String str, @Nullable Restaurant restaurant) {
            boolean z11;
            Integer num;
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z12 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str3 = "N/A";
            if (z11) {
                str = str3;
            }
            bundle.putString("jokerTimeLeft", str);
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.branchId);
            } else {
                num = null;
            }
            bundle.putString("shopId", String.valueOf(num));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            if (restaurant == null || !restaurant.hasCusine()) {
                str2 = str3;
            } else {
                str2 = restaurant.GACuisineString();
            }
            bundle.putString("shopMainCuisine", str2);
            bundle.putString("locationAddress", getLocationAddress(context));
            String str4 = GlobalDataModel.SelectedCityName;
            if (str4 == null || str4.length() == 0) {
                z12 = true;
            }
            if (!z12) {
                str3 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str3);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            TalabatFirebase.Companion.dispatchEvent(context, "joker_checkout_loaded", bundle);
        }

        @JvmOverloads
        public final void onJokerLightboxExpanded(@NotNull Context context, @Nullable String str, @Nullable Integer num, @Nullable String str2, @Nullable String str3, @Nullable String str4, @NotNull List<ImpressionProperties> list) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(list, "listOfImpressions");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationCity", locationCity());
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("jokerOffersShown", "true");
            bundle.putString("jokerAlreadyAccepted", "N/A");
            if (str != null) {
                bundle.putString("jokerRequestId", str);
            }
            if (num != null) {
                bundle.putString("jokerOffersShown", String.valueOf(num.intValue()));
            }
            if (str2 != null) {
                bundle.putString("swimlaneTitleList", str2);
            }
            if (str3 != null) {
                bundle.putString("screenName", str3);
            }
            if (str4 != null) {
                bundle.putString("screenType", str4);
            }
            bundle.putParcelableArrayList(FirebaseAnalytics.Param.ITEMS, getSortedImpressionBundle(list));
            bundle.putString("originalEventName", "joker_lightbox_expanded");
            TalabatFirebase.Companion.dispatchEvent(context, FirebaseAnalytics.Event.VIEW_SEARCH_RESULTS, bundle);
        }

        @JvmOverloads
        public final void onJokerLightboxExpanded(@NotNull Context context, @Nullable String str, @Nullable Integer num, @Nullable String str2, @Nullable String str3, @NotNull List<ImpressionProperties> list) {
            Intrinsics.checkNotNullParameter(context, "context");
            List<ImpressionProperties> list2 = list;
            Intrinsics.checkNotNullParameter(list2, "listOfImpressions");
            onJokerLightboxExpanded$default(this, context, str, num, str2, str3, (String) null, list2, 32, (Object) null);
        }

        @JvmOverloads
        public final void onJokerLightboxExpanded(@NotNull Context context, @Nullable String str, @Nullable Integer num, @Nullable String str2, @NotNull List<ImpressionProperties> list) {
            Intrinsics.checkNotNullParameter(context, "context");
            List<ImpressionProperties> list2 = list;
            Intrinsics.checkNotNullParameter(list2, "listOfImpressions");
            onJokerLightboxExpanded$default(this, context, str, num, str2, (String) null, (String) null, list2, 48, (Object) null);
        }

        @JvmOverloads
        public final void onJokerLightboxExpanded(@NotNull Context context, @Nullable String str, @Nullable Integer num, @NotNull List<ImpressionProperties> list) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(list, "listOfImpressions");
            onJokerLightboxExpanded$default(this, context, str, num, (String) null, (String) null, (String) null, list, 56, (Object) null);
        }

        @JvmOverloads
        public final void onJokerLightboxExpanded(@NotNull Context context, @Nullable String str, @NotNull List<ImpressionProperties> list) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(list, "listOfImpressions");
            onJokerLightboxExpanded$default(this, context, str, (Integer) null, (String) null, (String) null, (String) null, list, 60, (Object) null);
        }

        @JvmOverloads
        public final void onJokerLightboxExpanded(@NotNull Context context, @NotNull List<ImpressionProperties> list) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(list, "listOfImpressions");
            onJokerLightboxExpanded$default(this, context, (String) null, (Integer) null, (String) null, (String) null, (String) null, list, 62, (Object) null);
        }

        @JvmOverloads
        public final void onJokerLightboxShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
            onJokerLightboxShown$default(this, context, (String) null, (Integer) null, (String) null, (String) null, (String) null, 62, (Object) null);
        }

        @JvmOverloads
        public final void onJokerLightboxShown(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
            onJokerLightboxShown$default(this, context, str, (Integer) null, (String) null, (String) null, (String) null, 60, (Object) null);
        }

        @JvmOverloads
        public final void onJokerLightboxShown(@NotNull Context context, @Nullable String str, @Nullable Integer num) {
            Intrinsics.checkNotNullParameter(context, "context");
            onJokerLightboxShown$default(this, context, str, num, (String) null, (String) null, (String) null, 56, (Object) null);
        }

        @JvmOverloads
        public final void onJokerLightboxShown(@NotNull Context context, @Nullable String str, @Nullable Integer num, @Nullable String str2) {
            Intrinsics.checkNotNullParameter(context, "context");
            onJokerLightboxShown$default(this, context, str, num, str2, (String) null, (String) null, 48, (Object) null);
        }

        @JvmOverloads
        public final void onJokerLightboxShown(@NotNull Context context, @Nullable String str, @Nullable Integer num, @Nullable String str2, @Nullable String str3) {
            Intrinsics.checkNotNullParameter(context, "context");
            onJokerLightboxShown$default(this, context, str, num, str2, str3, (String) null, 32, (Object) null);
        }

        @JvmOverloads
        public final void onJokerLightboxShown(@NotNull Context context, @Nullable String str, @Nullable Integer num, @Nullable String str2, @Nullable String str3, @Nullable String str4) {
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationCity", locationCity());
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("jokerOffersShown", "true");
            bundle.putString("jokerAlreadyAccepted", "N/A");
            if (str != null) {
                bundle.putString("jokerRequestId", str);
            }
            if (num != null) {
                bundle.putString("jokerOffersShown", String.valueOf(num.intValue()));
            }
            if (str2 != null) {
                bundle.putString("swimlaneTitleList", str2);
            }
            if (str3 != null) {
                bundle.putString("screenName", str3);
            }
            if (str4 != null) {
                bundle.putString("screenType", str4);
            }
            TalabatFirebase.Companion.dispatchEvent(context, GemLightboxShownEvent.EVENT_NAME, bundle);
        }

        public final void onJokerModalRejected(@NotNull Context context, @Nullable String str) {
            boolean z11;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z12 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str2 = "N/A";
            if (z11) {
                str = str2;
            }
            bundle.putString("jokerTimeLeft", str);
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("jokerOffersShown", str2);
            String str3 = GlobalDataModel.SelectedCityName;
            if (str3 == null || str3.length() == 0) {
                z12 = true;
            }
            if (!z12) {
                str2 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str2);
            TalabatFirebase.Companion.dispatchEvent(context, "joker_lightbox_rejected", bundle);
        }

        public final void onJokerModalShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onJokerOrderComplete(@NotNull Context context, @Nullable String str, @Nullable Restaurant restaurant, @Nullable String str2, @Nullable String str3) {
            boolean z11;
            boolean z12;
            String str4;
            Integer num;
            String str5;
            boolean z13;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z14 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("jokerTimeLeft", str);
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str6 = GlobalDataModel.SelectedCityName;
            if (str6 == null || str6.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str4 = "N/A";
            } else {
                str4 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str4);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.branchId);
            } else {
                num = null;
            }
            bundle.putString("shopId", String.valueOf(num));
            if (restaurant == null || !restaurant.hasCusine()) {
                str5 = "N/A";
            } else {
                str5 = restaurant.GACuisineString();
            }
            bundle.putString("shopMainCuisine", str5);
            if (str3 == null || str3.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str3 = "N/A";
            }
            bundle.putString("transactionId", str3);
            if (str2 == null || str2.length() == 0) {
                z14 = true;
            }
            if (z14) {
                str2 = "N/A";
            }
            bundle.putString("tierNumber", str2);
            TalabatFirebase.Companion.dispatchEvent(context, "joker_order_complete", bundle);
        }

        public final void onJokerResumeAccepted(@NotNull Context context, @Nullable String str, @Nullable Restaurant restaurant) {
            boolean z11;
            Integer num;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str2 = "N/A";
            if (z11) {
                str = str2;
            }
            bundle.putString("jokerTimeLeft", str);
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.branchId);
            } else {
                num = null;
            }
            bundle.putString("shopId", String.valueOf(num));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            if (restaurant != null && restaurant.hasCusine()) {
                str2 = restaurant.GACuisineString();
            }
            bundle.putString("shopMainCuisine", str2);
            TalabatFirebase.Companion.dispatchEvent(context, "joker_resume_accepted", bundle);
        }

        public final void onJokerResumeRejected(@NotNull Context context, @Nullable String str, @Nullable Restaurant restaurant) {
            boolean z11;
            String str2;
            Integer num;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z12 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str3 = "N/A";
            if (z11) {
                str = str3;
            }
            bundle.putString("jokerTimeLeft", str);
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str4 = GlobalDataModel.SelectedCityName;
            if (str4 == null || str4.length() == 0) {
                z12 = true;
            }
            if (z12) {
                str2 = str3;
            } else {
                str2 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str2);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.branchId);
            } else {
                num = null;
            }
            bundle.putString("shopId", String.valueOf(num));
            if (restaurant != null && restaurant.hasCusine()) {
                str3 = restaurant.GACuisineString();
            }
            bundle.putString("shopMainCuisine", str3);
            TalabatFirebase.Companion.dispatchEvent(context, "joker_resume_rejected", bundle);
        }

        public final void onJokerResumeShown(@NotNull Context context, @Nullable Restaurant restaurant, @Nullable String str) {
            Integer num;
            String str2;
            boolean z11;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("jokerOffersShown", "N/A");
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.branchId);
            } else {
                num = null;
            }
            bundle.putString("shopId", String.valueOf(num));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            if (restaurant == null || !restaurant.hasCusine()) {
                str2 = "N/A";
            } else {
                str2 = restaurant.GACuisineString();
            }
            bundle.putString("shopMainCuisine", str2);
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("jokerTimeLeft", str);
            TalabatFirebase.Companion.dispatchEvent(context, "joker_resume_shown", bundle);
        }

        public final void onJokerShopAbandonCompleted(@NotNull Context context, @Nullable String str, @Nullable Restaurant restaurant, @Nullable String str2) {
            boolean z11;
            boolean z12;
            String str3;
            Object obj;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z13 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("jokerTimeLeft", str);
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str4 = GlobalDataModel.SelectedCityName;
            if (str4 == null || str4.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str3 = "N/A";
            } else {
                str3 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str3);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            if (restaurant != null) {
                obj = Integer.valueOf(restaurant.branchId);
            } else {
                obj = "";
            }
            StringBuilder sb2 = new StringBuilder();
            sb2.append(obj);
            bundle.putString("shopId", sb2.toString());
            if (str2 == null || str2.length() == 0) {
                z13 = true;
            }
            if (z13) {
                str2 = "N/A";
            }
            bundle.putString("jokerPageTypeTimeout", str2);
            TalabatFirebase.Companion.dispatchEvent(context, "joker_shop_abandon_completed", bundle);
        }

        public final void onJokerShopAbandonStarted(@NotNull Context context, @Nullable String str, @Nullable Restaurant restaurant) {
            boolean z11;
            Integer num;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z12 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str2 = "N/A";
            if (z11) {
                str = str2;
            }
            bundle.putString("jokerTimeLeft", str);
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str3 = GlobalDataModel.SelectedCityName;
            if (str3 == null || str3.length() == 0) {
                z12 = true;
            }
            if (!z12) {
                str2 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str2);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.branchId);
            } else {
                num = null;
            }
            bundle.putString("shopId", String.valueOf(num));
            TalabatFirebase.Companion.dispatchEvent(context, "joker_shop_abandon_started", bundle);
        }

        public final void onJokerShopLoaded(@NotNull Context context, @Nullable String str, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
            onJokerShopLoaded(context, str, restaurant, false);
        }

        public final void onJokerTierReached(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable Restaurant restaurant) {
            boolean z11;
            String str4;
            boolean z12;
            Integer num;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z13 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("shopPosition", str);
            if (restaurant == null || !restaurant.hasCusine()) {
                str4 = "N/A";
            } else {
                str4 = restaurant.GACuisineString();
            }
            bundle.putString("shopMainCuisine", str4);
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = "N/A";
            }
            bundle.putString("jokerTimeLeft", str2);
            if (str3 == null || str3.length() == 0) {
                z13 = true;
            }
            if (z13) {
                str3 = "N/A";
            }
            bundle.putString("tierNumber", str3);
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.branchId);
            } else {
                num = null;
            }
            bundle.putString("shopId", String.valueOf(num));
            TalabatFirebase.Companion.dispatchEvent(context, "joker_tier_reached", bundle);
        }

        public final void onJokerTimeOut(@NotNull Context context, @Nullable String str) {
            boolean z11;
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z12 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("jokerPageTypeTimeout", str);
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str3 = GlobalDataModel.SelectedCityName;
            if (str3 == null || str3.length() == 0) {
                z12 = true;
            }
            if (z12) {
                str2 = "N/A";
            } else {
                str2 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str2);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("shopId", "N/A");
            TalabatFirebase.Companion.dispatchEvent(context, "joker_timeout", bundle);
        }

        public final void onKNETFailureLghtboxClosed(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "checkOutScreen");
        }

        public final void onKNETFailureLghtboxShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "checkOutScreen");
        }

        public final void onLocationAttempted(@NotNull Context context, @NotNull AddressAnalyticsTracker addressAnalyticsTracker) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(addressAnalyticsTracker, "addressAnalyticsTracker");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", addressAnalyticsTracker.getLocationAddress());
            bundle.putString("locationLat", addressAnalyticsTracker.getLocationLat());
            bundle.putString("locationLon", addressAnalyticsTracker.getLocationLon());
            bundle.putString("locationCity", addressAnalyticsTracker.getLocationCity());
            bundle.putString("locationArea", addressAnalyticsTracker.getLocationArea());
            bundle.putString("locationCountry", addressAnalyticsTracker.getLocationCountry());
            bundle.putString("screenType", addressAnalyticsTracker.getScreenType());
            bundle.putString("screenName", addressAnalyticsTracker.getScreenName());
            bundle.putString("locationMethod", addressAnalyticsTracker.getLocationMethod());
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_DELIVERY_ADDRESS_STATUS, addressAnalyticsTracker.getDeliveryAddressStatus());
            bundle.putString("mapErrorMessage", addressAnalyticsTracker.getMapErrorMessage());
            bundle.putString("apiMethod", addressAnalyticsTracker.getApiMethod());
            bundle.putString("apiResponse", addressAnalyticsTracker.getApiResponse());
            bundle.putString("geolocationAccuracy", addressAnalyticsTracker.getGeolocationAccuracy());
            bundle.putString("locationDialogueAccepted", addressAnalyticsTracker.getLocationDialogueAccepted());
            bundle.putString("locationDialogueType", addressAnalyticsTracker.getLocationDialogueType());
            bundle.putString("addressComponentType", addressAnalyticsTracker.getAddressComponentType());
            bundle.putString("countrySelected", addressAnalyticsTracker.getCountrySelected());
            bundle.putString(Param.MAP_TYPE, addressAnalyticsTracker.getMapType());
            bundle.putString("addressCount", addressAnalyticsTracker.getAddressCount());
            bundle.putString("eventOrigin", addressAnalyticsTracker.getJourneyType());
            TalabatFirebase.Companion.dispatchEvent(context, "location_attempted", bundle);
            LogAddressEvent("location_attempted", addressAnalyticsTracker);
        }

        public final void onLoginEmailUnregistered(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMapBlockUpdated(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMapErrorShown(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMapLoaded(@NotNull Context context, @NotNull AddressAnalyticsTracker addressAnalyticsTracker) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(addressAnalyticsTracker, "addressAnalyticsTracker");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", addressAnalyticsTracker.getLocationAddress());
            bundle.putString("locationLat", addressAnalyticsTracker.getLocationLat());
            bundle.putString("locationLon", addressAnalyticsTracker.getLocationLon());
            bundle.putString("locationCity", addressAnalyticsTracker.getLocationCity());
            bundle.putString("locationArea", addressAnalyticsTracker.getLocationArea());
            bundle.putString("locationCountry", addressAnalyticsTracker.getLocationCountry());
            bundle.putString("screenType", addressAnalyticsTracker.getScreenType());
            bundle.putString("screenName", addressAnalyticsTracker.getScreenName());
            bundle.putString("locationMethod", addressAnalyticsTracker.getLocationMethod());
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_DELIVERY_ADDRESS_STATUS, addressAnalyticsTracker.getDeliveryAddressStatus());
            bundle.putString("mapErrorMessage", addressAnalyticsTracker.getMapErrorMessage());
            bundle.putString("apiMethod", addressAnalyticsTracker.getApiMethod());
            bundle.putString("apiResponse", addressAnalyticsTracker.getApiResponse());
            bundle.putString("geolocationAccuracy", addressAnalyticsTracker.getGeolocationAccuracy());
            bundle.putString("locationDialogueAccepted", addressAnalyticsTracker.getLocationDialogueAccepted());
            bundle.putString("locationDialogueType", addressAnalyticsTracker.getLocationDialogueType());
            bundle.putString("addressComponentType", addressAnalyticsTracker.getAddressComponentType());
            bundle.putString("countrySelected", addressAnalyticsTracker.getCountrySelected());
            bundle.putString(Param.MAP_TYPE, addressAnalyticsTracker.getMapType());
            bundle.putString("eventOrigin", addressAnalyticsTracker.getJourneyType());
            TalabatFirebase.Companion.dispatchEvent(context, "map_loaded", bundle);
            LogAddressEvent("map_loaded", addressAnalyticsTracker);
        }

        public final void onMapLocateMeClicked(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMapSearchComplete(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMapSearchStarted(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMapStreetUpdated(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMapUserGuideDismissed(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMapUserGuideShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMapViewChanged(@NotNull Context context, @Nullable String str, @Nullable String str2) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMapViewLoaded(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMcdAddressPopupShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMcdBlockSelectionShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMcdCloseClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMcdEditLocationClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMcdMapClosed(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMcdMapConfirmClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMcdMapResultReturned(@NotNull Context context, boolean z11) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMcdMapResultReturned(@NotNull Context context, boolean z11, boolean z12) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMcdMapShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMcdNewAddressClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMcdProceedClicked(@NotNull Context context, boolean z11, boolean z12) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMcdProceedStreetClicked(@NotNull Context context, boolean z11, boolean z12) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMcdUpdateaAddressClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onMobileNumberVerificationFailed(@NotNull Context context, @Nullable String str) {
            boolean z11;
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLat", getLocationLongitude());
            String str3 = GlobalDataModel.SelectedCityName;
            boolean z12 = false;
            if (str3 == null || str3.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            } else {
                str2 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str2);
            bundle.putString("locationArea", getSelectedAreaId());
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (str == null || str.length() == 0) {
                z12 = true;
            }
            if (z12) {
                str = "N/A";
            }
            bundle.putString("shopId", str);
            bundle.putString("userId", getUserId());
            TalabatFirebase.Companion.dispatchEvent(context, "mobile_verification_failed", bundle);
        }

        public final void onMobileNumberVerificationValidated(@NotNull Context context, @Nullable String str) {
            boolean z11;
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLat", getLocationLongitude());
            String str3 = GlobalDataModel.SelectedCityName;
            boolean z12 = false;
            if (str3 == null || str3.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            } else {
                str2 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str2);
            bundle.putString("locationArea", getSelectedAreaId());
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (str == null || str.length() == 0) {
                z12 = true;
            }
            if (z12) {
                str = "N/A";
            }
            bundle.putString("shopId", str);
            bundle.putString("userId", getUserId());
            TalabatFirebase.Companion.dispatchEvent(context, "mobile_verification_validated", bundle);
        }

        public final void onMoreReviewsClicked(@NotNull Context context, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onOtherLocationClicked(@NotNull Context context, @Nullable String str, @Nullable String str2) {
            boolean z11;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z12 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("screenName", str);
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            }
            if (z12) {
                str2 = "N/A";
            }
            bundle.putString("screenType", str2);
            TalabatFirebase.Companion.dispatchEvent(context, "other_location_clicked ", bundle);
        }

        public final void onPArallelBinMoreClicked(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onPasswordResetSelection(@NotNull Context context, @Nullable String str, @Nullable String str2, @NotNull String str3) {
            boolean z11;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str3, NativeProtocol.WEB_DIALOG_ACTION);
            Bundle bundle = new Bundle();
            boolean z12 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("screenName", str);
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            }
            if (z12) {
                str2 = "N/A";
            }
            bundle.putString("screenType", str2);
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            TalabatFirebase.Companion.dispatchEvent(context, "password_reset_" + str3, bundle);
        }

        public final void onPasswordResetSubmit(@NotNull Context context, @Nullable String str, @Nullable String str2, @NotNull String str3, @NotNull String str4) {
            boolean z11;
            boolean z12;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str3, NativeProtocol.WEB_DIALOG_ACTION);
            Intrinsics.checkNotNullParameter(str4, "errorMessage");
            Bundle bundle = new Bundle();
            boolean z13 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("screenName", str);
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = "N/A";
            }
            bundle.putString("screenType", str2);
            if (Intrinsics.areEqual((Object) str3, (Object) TrackingUtils.ResetPasswordOption.Failed.getValue())) {
                if (str4.length() == 0) {
                    z13 = true;
                }
                if (z13) {
                    str4 = "N/A";
                }
                bundle.putString("errorMessage", str4);
            }
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            TalabatFirebase.Companion.dispatchEvent(context, "password_reset_" + str3, bundle);
        }

        public final void onPreSelectedAddresSelected(@NotNull Context context, @Nullable Address address) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onProductChoiceFailed(@NotNull Context context, @Nullable CartMenuItem cartMenuItem, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onProductImageClicked(@NotNull Context context, @Nullable CartMenuItem cartMenuItem) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onSearchBarClicked(@NotNull Context context, @Nullable String str, @Nullable String str2, @NotNull String str3, @NotNull String str4) {
            boolean z11;
            boolean z12;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str3, "listingPageType");
            Intrinsics.checkNotNullParameter(str4, "eventOrigin");
            Bundle bundle = new Bundle();
            bundle.putString("userId", getUserId());
            boolean z13 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str5 = "N/A";
            if (z11) {
                str = str5;
            }
            bundle.putString("screenType", str);
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = str5;
            }
            bundle.putString("screenName", str2);
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str6 = GlobalDataModel.SelectedCityName;
            if (str6 == null || str6.length() == 0) {
                z13 = true;
            }
            if (!z13) {
                str5 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str5);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("listingPageType", str3);
            bundle.putString("eventOrigin", str4);
            TalabatFirebase.Companion.dispatchEvent(context, "search_bar_clicked", bundle);
        }

        public final void onSearchButtonClicked(@NotNull Context context, @Nullable String str, @Nullable String str2) {
            boolean z11;
            boolean z12;
            String str3;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z13 = false;
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            }
            bundle.putString("screenType", str2);
            bundle.putString("screenName", "N/A");
            bundle.putString("searchTerm", "N/A");
            bundle.putString("searchSectionList", "N/A");
            bundle.putString(SearchTracker.SECTION, "N/A");
            bundle.putString("searchPosition", "N/A");
            bundle.putString("searchId", "N/A");
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str4 = GlobalDataModel.SelectedCityName;
            if (str4 == null || str4.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str3 = "N/A";
            } else {
                str3 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str3);
            if (str == null || str.length() == 0) {
                z13 = true;
            }
            if (z13) {
                str = "N/A";
            }
            bundle.putString("locationArea", str);
            bundle.putString("userId", getUserId());
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("lastShopSeen", "N/A");
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("shopPosition", "N/A");
            TalabatFirebase.Companion.dispatchEvent(context, SearchTracker.ITEM_CLICKED, bundle);
        }

        public final void onSearchClicked(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4, @Nullable String str5, @Nullable String str6) {
            boolean z11;
            boolean z12;
            boolean z13;
            boolean z14;
            boolean z15;
            boolean z16;
            String str7;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z17 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("screenType", str);
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = "N/A";
            }
            bundle.putString("screenName", str2);
            if (str3 == null || str3.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str3 = "N/A";
            }
            bundle.putString("searchTerm", str3);
            if (str4 == null || str4.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str4 = "N/A";
            }
            bundle.putString("searchSectionList", str4);
            if (str5 == null || str5.length() == 0) {
                z15 = true;
            } else {
                z15 = false;
            }
            if (z15) {
                str5 = "N/A";
            }
            bundle.putString(SearchTracker.SECTION, str5);
            bundle.putString("searchPosition", "N/A");
            bundle.putString("searchId", "N/A");
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str8 = GlobalDataModel.SelectedCityName;
            if (str8 == null || str8.length() == 0) {
                z16 = true;
            } else {
                z16 = false;
            }
            if (z16) {
                str7 = "N/A";
            } else {
                str7 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str7);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("userId", getUserId());
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("lastShopSeen", "N/A");
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (str6 == null || str6.length() == 0) {
                z17 = true;
            }
            if (z17) {
                str6 = "N/A";
            }
            bundle.putString("shopPosition", str6);
            TalabatFirebase.Companion.dispatchEvent(context, SearchTracker.ITEM_CLICKED, bundle);
        }

        public final void onSearchErrorShown(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3) {
            boolean z11;
            String str4;
            boolean z12;
            boolean z13;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str5 = GlobalDataModel.SelectedCityName;
            boolean z14 = false;
            if (str5 == null || str5.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str4 = "N/A";
            } else {
                str4 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str4);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("errorMessage", "N/A");
            bundle.putString("userId", getUserId());
            if (str == null || str.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str = "N/A";
            }
            bundle.putString("screenType", str);
            if (str2 == null || str2.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str2 = "N/A";
            }
            bundle.putString("screenName", str2);
            bundle.putString("userTimeStamp", getCurrentTime());
            if (str3 == null || str3.length() == 0) {
                z14 = true;
            }
            if (z14) {
                str3 = "N/A";
            }
            bundle.putString("searchTerm", str3);
            TalabatFirebase.Companion.dispatchEvent(context, SearchTracker.ERROR, bundle);
        }

        public final void onSearchRestaurantClicked(@NotNull Context context, @Nullable String str, @Nullable String str2, @NotNull QuickRestaurant quickRestaurant, int i11) {
            boolean z11;
            boolean z12;
            String str3;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(quickRestaurant, "restaurant");
            Bundle bundle = new Bundle();
            bundle.putString("userId", getUserId());
            boolean z13 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("screenType", str);
            bundle.putString("screenName", "Home Search Screen");
            String str4 = GlobalDataModel.SelectedCityName;
            if (str4 == null || str4.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str3 = "N/A";
            } else {
                str3 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str3);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationAddress", getLocationAddress(context));
            if (str2 == null || str2.length() == 0) {
                z13 = true;
            }
            if (z13) {
                str2 = "N/A";
            }
            bundle.putString("searchTerm", str2);
            bundle.putString("shopType", StoreInfoTrackingProvider.SHOP_TYPE_RESTAURANT);
            bundle.putString("shopPosition", String.valueOf(i11));
            bundle.putString("shopClickOrigin", "search");
            bundle.putString("shopId", String.valueOf(quickRestaurant.f13869id));
            String midasRequestId = MidasHttpInterceptorKt.getMidasRequestId();
            if (midasRequestId == null) {
                midasRequestId = "";
            }
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.CLICK_MIDAS_REQUEST_ID, midasRequestId);
            bundle.putString("shopSponsoring", RestaurantsEventsKt.sponsoringData(GlobalDataModel.SELECTED.getRestaurant()));
            TalabatFirebase.Companion.dispatchEvent(context, "shop.clicked", bundle);
        }

        public final void onSearchResultsDisplayed(@NotNull Context context, @Nullable String str, @Nullable String str2, @NotNull ArrayList<QuickRestaurant> arrayList) {
            boolean z11;
            boolean z12;
            String str3;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(arrayList, StoreInfoTrackingProvider.SHOP_TYPE_RESTAURANT);
            Bundle bundle = new Bundle();
            bundle.putString("userId", getUserId());
            boolean z13 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("screenType", str);
            bundle.putString("screenName", "Home Search Screen");
            String str4 = GlobalDataModel.SelectedCityName;
            if (str4 == null || str4.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str3 = "N/A";
            } else {
                str3 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str3);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationAddress", getLocationAddress(context));
            if (str2 == null || str2.length() == 0) {
                z13 = true;
            }
            if (z13) {
                str2 = "N/A";
            }
            bundle.putString("searchTerm", str2);
            bundle.putString("searchSectionList", arrayList.toString());
            bundle.putString(SearchTracker.SECTION, StoreInfoTrackingProvider.SHOP_TYPE_RESTAURANT);
            bundle.putString("shopPosition", String.valueOf(arrayList.size()));
            bundle.putString("shopClickOrigin", "search");
            ArrayList arrayList2 = new ArrayList(CollectionsKt__IterablesKt.collectionSizeOrDefault(arrayList, 10));
            for (QuickRestaurant quickRestaurant : arrayList) {
                arrayList2.add(Integer.valueOf(quickRestaurant.f13869id));
            }
            bundle.putString("shopsIds", arrayList2.toString());
            bundle.putString(SearchTracker.SECTION, StoreInfoTrackingProvider.SHOP_TYPE_RESTAURANT);
            String midasRequestId = MidasHttpInterceptorKt.getMidasRequestId();
            if (midasRequestId == null) {
                midasRequestId = "";
            }
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.CLICK_MIDAS_REQUEST_ID, midasRequestId);
            bundle.putString("shopSponsoring", RestaurantsEventsKt.sponsoringData(GlobalDataModel.SELECTED.getRestaurant()));
            TalabatFirebase.Companion.dispatchEvent(context, "shop.clicked", bundle);
        }

        public final void onShopListExpanded(@NotNull Context context, @Nullable String str, @NotNull List<? extends Pair<Integer, ? extends Restaurant>> list) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(list, "restaurantsWithPosition");
            Bundle commonBundle = getCommonBundle(context);
            addVendorListProperties(commonBundle, str, (Restaurant) ((Pair) list.get(0)).getSecond());
            addImpressionForRestaurantList(commonBundle, list, str);
            TalabatFirebase.Companion.dispatchEvent(context, FirebaseAnalytics.Event.VIEW_SEARCH_RESULTS, commonBundle);
        }

        public final void onSnappingGpsInfo(@NotNull Context context, @NotNull String str, @NotNull String str2, @NotNull String str3, @NotNull String str4) {
            boolean z11;
            boolean z12;
            boolean z13;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "snappingScenario");
            Intrinsics.checkNotNullParameter(str2, "snapingDistance");
            Intrinsics.checkNotNullParameter(str3, "latitude");
            Intrinsics.checkNotNullParameter(str4, "longitude");
            Bundle bundle = new Bundle();
            boolean z14 = true;
            if (str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("snappingScenario", str);
            if (str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = "N/A";
            }
            bundle.putString("snappingDistance", str2);
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (str3.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str3 = "N/A";
            }
            bundle.putString("locationLat", str3);
            if (str4.length() != 0) {
                z14 = false;
            }
            if (z14) {
                str4 = "N/A";
            }
            bundle.putString("locationLon", str4);
            TalabatFirebase.Companion.dispatchEvent(context, "snapping_gps_info", bundle);
        }

        public final void onStartOrderingClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onTabInfoClicked(@NotNull Context context, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onTabMenuClicked(@NotNull Context context, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onTabReviewsClicked(@NotNull Context context, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onUnifiedOrderEnquiryClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onUnifiedOrderMapClosed(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onUnifiedOrderMapEnforceClosed(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onUnifiedOrderMapShown(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onUnifiedOrderTrackOrderClicked(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onUnifiedRateOrderClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onUninstallApp(@NotNull Context context, boolean z11) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onUpdateAddressClosed(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onUpdateAddressSelected(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void onUpdateAddressShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void otherVerificationOptionSelected(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void paymentErrorClosed(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void paymentErrorShown(@NotNull Context context, @Nullable String str, @NotNull String str2, @Nullable String str3) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str2, "errorReasonMessage");
        }

        public final void paymentFailedClosed(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void paymentFailedShown(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void paymentMethodChoosed(@NotNull Context context, int i11, @NotNull String str, @NotNull String str2, int i12, @NotNull Restaurant restaurant) {
            boolean z11;
            String str3;
            boolean z12;
            String str4;
            boolean z13;
            String str5;
            boolean z14;
            String str6;
            boolean z15;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, TalabatAppBoy.BRAZE_PROPERTY_KEY_PAYMENT_METHOD);
            Intrinsics.checkNotNullParameter(str2, "defaultPayementMethod");
            Intrinsics.checkNotNullParameter(restaurant, "restaurant");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationLat", getLocationLatitude());
            String str7 = GlobalDataModel.SelectedCityName;
            boolean z16 = false;
            if (str7 == null || str7.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str3 = "N/A";
            } else {
                str3 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str3);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            String str8 = restaurant.branchName;
            if (str8 == null || str8.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str4 = "N/A";
            } else {
                str4 = restaurant.branchName;
            }
            bundle.putString("shopName", str4);
            int i13 = restaurant.branchId;
            StringBuilder sb2 = new StringBuilder();
            sb2.append(i13);
            bundle.putString("shopId", sb2.toString());
            String str9 = restaurant.areaName;
            if (str9 == null || str9.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str5 = "N/A";
            } else {
                str5 = restaurant.areaName;
            }
            bundle.putString("shopArea", str5);
            bundle.putString("shopStatus", getShopStatus(restaurant.statusType));
            int i14 = restaurant.f13872id;
            StringBuilder sb3 = new StringBuilder();
            sb3.append(i14);
            bundle.putString("chainId", sb3.toString());
            bundle.putString("chainShops", "N/A");
            String str10 = restaurant.f13873name;
            if (str10 == null || str10.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str6 = "N/A";
            } else {
                str6 = restaurant.f13873name;
            }
            bundle.putString("chainName", str6);
            bundle.putString("userId", getUserId());
            bundle.putString("screenType", "N/A");
            bundle.putString("screenName", "N/A");
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("orderPreorder", "N/A");
            bundle.putString("orderPickup", "N/A");
            bundle.putString("userPreferences", "N/A");
            bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
            bundle.putString("shopDeliveryFee", String.valueOf(Cart.getInstance().getDeliveryCharges()));
            bundle.putString("surchargeValue", TalabatGTMKt.getSurchargeValue());
            bundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
            if (str2.length() > 0) {
                z15 = true;
            } else {
                z15 = false;
            }
            if (!z15) {
                str2 = "N/A";
            }
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_ORDER_PAYMENT_METHOD_DEFAULT, str2);
            bundle.putBoolean(PaymentMethodChangedEventKt.ATTRIBUTE_KEY_ORDER_PAYMENT_METHOD_CHANGED, true);
            if (str.length() == 0) {
                z16 = true;
            }
            if (z16) {
                str = "N/A";
            }
            bundle.putString("orderPaymentMethod", str);
            String str11 = "0";
            if (getRestaurantMenuSections() != null && getRestaurantMenuSections().size() > 0) {
                str11 = String.valueOf(getRestaurantMenuSections().size());
            }
            bundle.putString(ShopDetailsLoadedEvent.MENU_CATEGORY_NUMBER, str11);
            TalabatFirebase.Companion.dispatchEvent(context, PaymentMethodChangedEvent.EVENT_NAME, bundle);
        }

        public final void productSearchClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void purchaseInitialised(@NotNull Context context, @NotNull String str, @Nullable String str2, @Nullable Restaurant restaurant, boolean z11, @NotNull String str3, @Nullable Double d11) {
            boolean z12;
            String str4;
            String str5;
            Integer num;
            String str6;
            boolean z13;
            String str7;
            String str8;
            boolean z14;
            String str9;
            String str10;
            boolean z15;
            boolean z16;
            String str11;
            String str12;
            Boolean bool;
            String str13;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "restaurantId");
            Intrinsics.checkNotNullParameter(str3, "defaultPayementMethod");
            Bundle bundle = new Bundle();
            PolygonEvents polygonEvents = GlobalDataModel.POLYGON_TRACKING.polygonEvents;
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str14 = GlobalDataModel.SelectedCityName;
            boolean z17 = false;
            if (str14 == null || str14.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str4 = "N/A";
            } else {
                str4 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str4);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("userId", getUserId());
            bundle.putString("screenType", "checkout");
            bundle.putString("screenName", "N/A");
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("shopOfferType", getOfferType(restaurant));
            bundle.putString("shopWithOffer", getShopOffer(restaurant));
            bundle.putString("listingPageType", listingType(restaurant));
            bundle.putString("deliveryProvider", pickupRiderDeliveryProvider(restaurant));
            if (restaurant != null) {
                str5 = getShopStatus(restaurant.statusType);
            } else {
                str5 = "N/A";
            }
            bundle.putString("shopStatus", str5);
            bundle.putString("shopType", listingType(restaurant));
            String str15 = null;
            if (restaurant != null) {
                num = Integer.valueOf(restaurant.f13872id);
            } else {
                num = null;
            }
            StringBuilder sb2 = new StringBuilder();
            sb2.append(num);
            bundle.putString("chainId", sb2.toString());
            bundle.putString("chainShops", "N/A");
            if (restaurant != null) {
                str6 = restaurant.f13873name;
            } else {
                str6 = null;
            }
            if (str6 == null || str6.length() == 0) {
                z13 = true;
            } else {
                z13 = false;
            }
            if (z13) {
                str7 = "N/A";
            } else if (restaurant != null) {
                str7 = restaurant.f13873name;
            } else {
                str7 = null;
            }
            bundle.putString("chainName", str7);
            if (restaurant != null) {
                str8 = restaurant.branchName;
            } else {
                str8 = null;
            }
            if (str8 == null || str8.length() == 0) {
                z14 = true;
            } else {
                z14 = false;
            }
            if (z14) {
                str9 = "N/A";
            } else if (restaurant != null) {
                str9 = restaurant.branchName;
            } else {
                str9 = null;
            }
            bundle.putString("shopName", str9);
            if (restaurant != null) {
                str10 = Integer.valueOf(restaurant.branchId).toString();
            } else {
                str10 = null;
            }
            bundle.putString("shopId", str10);
            bundle.putString("userOnlinePaymentMethods", "N/A");
            bundle.putString("shopPaymentMethods", getPaymentMethods(restaurant));
            if (str3.length() > 0) {
                z15 = true;
            } else {
                z15 = false;
            }
            if (!z15) {
                str3 = "N/A";
            }
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_ORDER_PAYMENT_METHOD_DEFAULT, str3);
            if (str2 == null || str2.length() == 0) {
                z16 = true;
            } else {
                z16 = false;
            }
            if (z16) {
                str2 = "N/A";
            }
            bundle.putString("orderPaymentMethod", str2);
            if (polygonEvents != null) {
                bundle.putBoolean("floodActive", polygonEvents.isActive);
                bundle.putString("floodType", polygonEvents.eventType);
                bundle.putString("floodMessage", polygonEvents.eventMsg);
                bundle.putInt("floodValue", polygonEvents.eventValue);
            } else {
                bundle.putString("floodActive", "N/A");
                bundle.putString("floodType", "N/A");
                bundle.putString("floodMessage", "N/A");
                bundle.putString("floodValue", "N/A");
            }
            bundle.putString("userPreferences", "N/A");
            if (restaurant != null) {
                str11 = restaurant.areaName;
            } else {
                str11 = null;
            }
            if (str11 == null || str11.length() == 0) {
                z17 = true;
            }
            if (z17) {
                str12 = "N/A";
            } else if (restaurant != null) {
                str12 = restaurant.areaName;
            } else {
                str12 = null;
            }
            bundle.putString("shopArea", str12);
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_DELIVERY_ADDRESS_STATUS, "N/A");
            bundle.putString("orderPreorder", "N/A");
            if (restaurant != null) {
                bool = restaurant.isPickup();
            } else {
                bool = null;
            }
            bundle.putString("orderPickup", String.valueOf(bool));
            if (restaurant != null) {
                str15 = restaurant.deliveryTime;
            }
            bundle.putString("shopDeliveryTime", str15);
            bundle.putString("shopListType", "N/A");
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_EXPEDITION_TYPE, "delivery");
            if (z11) {
                str13 = "contactless";
            } else {
                str13 = "regular";
            }
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_CONTACTLESS_DELIVERY, str13);
            putAppliedVoucherData(bundle, Cart.getInstance());
            if (d11 != null) {
                bundle.putDouble("riderTipValue", d11.doubleValue());
            }
            bundle.putString("shopDeliveryFee", String.valueOf(Cart.getInstance().getDeliveryCharges()));
            bundle.putString("surchargeValue", TalabatGTMKt.getSurchargeValue());
            bundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
            TalabatFirebase.Companion.dispatchEvent(context, "transaction_clicked", bundle);
        }

        public final void pushAddToCart(@NotNull Context context, @Nullable CartMenuItem cartMenuItem, int i11, @Nullable String str, @Nullable Restaurant restaurant, @Nullable String str2, @Nullable String str3, int i12, int i13, @NotNull String str4, @NotNull String str5) {
            String str6;
            MenuSection menuSection;
            MenuSection menuSection2;
            Context context2 = context;
            CartMenuItem cartMenuItem2 = cartMenuItem;
            Restaurant restaurant2 = restaurant;
            Intrinsics.checkNotNullParameter(context2, "context");
            String str7 = str4;
            Intrinsics.checkNotNullParameter(str7, "screenType");
            String str8 = str5;
            Intrinsics.checkNotNullParameter(str8, "screenName");
            Bundle bundle = new Bundle();
            Bundle bundle2 = new Bundle();
            Float f11 = null;
            bundle2.putString(FirebaseAnalytics.Param.ITEM_NAME, cartMenuItem2 != null ? cartMenuItem2.f13862name : null);
            Integer valueOf = cartMenuItem2 != null ? Integer.valueOf(cartMenuItem2.f13861id) : null;
            StringBuilder sb2 = new StringBuilder();
            sb2.append(valueOf);
            bundle2.putString("item_id", sb2.toString());
            Integer valueOf2 = cartMenuItem2 != null ? Integer.valueOf(cartMenuItem2.menuSectionId) : null;
            StringBuilder sb3 = new StringBuilder();
            sb3.append(valueOf2);
            bundle2.putString(FirebaseAnalytics.Param.ITEM_CATEGORY, sb3.toString());
            Float valueOf3 = cartMenuItem2 != null ? Float.valueOf(cartMenuItem.getItemPrice()) : null;
            StringBuilder sb4 = new StringBuilder();
            sb4.append(valueOf3);
            bundle2.putString(FirebaseAnalytics.Param.PRICE, sb4.toString());
            boolean z11 = false;
            String str9 = "N/A";
            bundle2.putString(FirebaseAnalytics.Param.ITEM_BRAND, str == null || str.length() == 0 ? str9 : str);
            Integer valueOf4 = cartMenuItem2 != null ? Integer.valueOf(cartMenuItem.getQuantity()) : null;
            StringBuilder sb5 = new StringBuilder();
            sb5.append(valueOf4);
            bundle2.putString(FirebaseAnalytics.Param.QUANTITY, sb5.toString());
            bundle.putParcelable(FirebaseAnalytics.Param.ITEMS, bundle2);
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationLat", getLocationLatitude());
            String str10 = GlobalDataModel.SelectedCityName;
            bundle.putString("locationCity", str10 == null || str10.length() == 0 ? str9 : GlobalDataModel.SelectedCityName);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            String str11 = restaurant2 != null ? restaurant2.branchName : null;
            bundle.putString("shopName", str11 == null || str11.length() == 0 ? str9 : restaurant2 != null ? restaurant2.branchName : null);
            String str12 = restaurant2 != null ? restaurant2.areaName : null;
            bundle.putString("shopArea", str12 == null || str12.length() == 0 ? str9 : restaurant2 != null ? restaurant2.areaName : null);
            bundle.putString("shopId", String.valueOf(restaurant2 != null ? Integer.valueOf(restaurant2.branchId) : null));
            bundle.putString("userId", getUserId());
            if (str4.length() == 0) {
                str7 = str9;
            }
            bundle.putString("screenType", str7);
            if (str5.length() == 0) {
                str8 = str9;
            }
            bundle.putString("screenName", str8);
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("listingPageType", restaurant2 != null ? listingType(restaurant2) : str9);
            bundle.putString("deliveryProvider", restaurant2 != null ? restaurantType(restaurant2) : str9);
            bundle.putString("shopType", restaurant2 != null ? listingType(restaurant2) : str9);
            String str13 = GlobalDataModel.ShopClickOrigin;
            Intrinsics.checkNotNullExpressionValue(str13, "ShopClickOrigin");
            bundle.putString("shopClickOrigin", str13.length() == 0 ? str9 : GlobalDataModel.ShopClickOrigin);
            String str14 = cartMenuItem2 != null ? cartMenuItem2.desc : null;
            bundle.putString(ProductTrackingProvider.DESCRIPTION, str14 == null || str14.length() == 0 ? str9 : cartMenuItem2 != null ? cartMenuItem2.desc : null);
            bundle.putString("productSku", String.valueOf(cartMenuItem2 != null ? Integer.valueOf(cartMenuItem2.f13861id) : null));
            bundle.putString(ProductTrackingProvider.QUANTITY, String.valueOf(cartMenuItem2 != null ? Integer.valueOf(cartMenuItem.getQuantity()) : null));
            bundle.putString(ProductTrackingProvider.NAME, cartMenuItem2 != null ? cartMenuItem2.f13862name : null);
            String str15 = (cartMenuItem2 == null || (menuSection2 = cartMenuItem2.menuSection) == null) ? null : menuSection2.f13864name;
            bundle.putString("productCategory", str15 == null || str15.length() == 0 ? str9 : (cartMenuItem2 == null || (menuSection = cartMenuItem2.menuSection) == null) ? null : menuSection.f13864name);
            String selectedMandatoryAndOptionalChoices = cartMenuItem2 != null ? cartMenuItem.getSelectedMandatoryAndOptionalChoices() : null;
            if (selectedMandatoryAndOptionalChoices == null || selectedMandatoryAndOptionalChoices.length() == 0) {
                str6 = str9;
            } else {
                str6 = cartMenuItem2 != null ? cartMenuItem.getSelectedMandatoryAndOptionalChoices() : null;
            }
            bundle.putString("productVariant", str6);
            bundle.putString("shopPaymentMethods", getPaymentMethods(restaurant2));
            bundle.putString("productToppings", str3);
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            }
            bundle.putString("eventOrigin", z11 ? str9 : str2);
            bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
            bundle.putString(ProductTrackingProvider.SALE_PRICE, String.valueOf(cartMenuItem2 != null ? Float.valueOf(cartMenuItem.getTotalPrice()) : null));
            bundle.putString("productMandatoryChoicePreselected", "false");
            String str16 = "0";
            bundle.putString("productMandatoryChoiceQuantity", i12 > 0 ? String.valueOf(i12) : str16);
            if (i13 > 0) {
                str16 = String.valueOf(i13);
            }
            bundle.putString("productOptionalChoiceQuantity", str16);
            if (cartMenuItem2 != null) {
                f11 = Float.valueOf(cartMenuItem.getTotalPrice());
            }
            bundle.putString(ProductTrackingProvider.PRICE, String.valueOf(f11));
            if (restaurant2 != null && restaurant.hasCusine()) {
                str9 = restaurant.GACuisineString();
            }
            bundle.putString("shopMainCuisine", str9);
            TalabatFirebase.Companion.dispatchEvent(context2, "add_to_cart", bundle);
        }

        public final void pushCreditRedeemFailed(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3) {
            boolean z11;
            boolean z12;
            String str4;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            boolean z13 = false;
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str5 = "N/A";
            if (z11) {
                str2 = str5;
            }
            bundle.putString("screenType", str2);
            if (str == null || str.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str = str5;
            }
            bundle.putString("screenName", str);
            bundle.putString("locationAddress", getLocationAddress(context));
            String str6 = GlobalDataModel.SelectedCityName;
            if (str6 == null || str6.length() == 0) {
                z13 = true;
            }
            if (!z13) {
                str5 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str5);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("userTimeStamp", getCurrentTime());
            if (LoggedInHelper.isLoggedIn()) {
                str4 = "true";
            } else {
                str4 = "false";
            }
            bundle.putString("userLoggedIn", str4);
            bundle.putString("userId", getUserId());
            bundle.putString("userOnlinePaymentMethods", "credit:" + getTalabatCreditBalance());
            bundle.putString("errorMessage", str3);
            TalabatFirebase.Companion.dispatchEvent(context, "credit_redeem_failed", bundle);
        }

        public final void pushOpenScreenEvent(@NotNull Context context, @Nullable String str, @Nullable Country country, @Nullable CustomerInfo customerInfo) {
            boolean z11;
            String str2;
            boolean z12;
            String str3;
            boolean z13;
            String str4;
            String str5;
            String str6;
            String str7;
            Intrinsics.checkNotNullParameter(context, "context");
            if (!isScreenViewEventInValid(str)) {
                Bundle bundle = new Bundle();
                bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
                bundle.putString("locationAddress", getLocationAddress(context));
                String str8 = GlobalDataModel.SelectedCityName;
                boolean z14 = false;
                if (str8 == null || str8.length() == 0) {
                    z11 = true;
                } else {
                    z11 = false;
                }
                if (z11) {
                    str2 = "N/A";
                } else {
                    str2 = GlobalDataModel.SelectedCityName;
                }
                bundle.putString("locationCity", str2);
                bundle.putString("locationLat", getLocationLatitude());
                bundle.putString("locationLon", getLocationLongitude());
                bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
                bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_DELIVERY_ADDRESS_STATUS, "N/A");
                String str9 = "false";
                if (str9.length() == 0) {
                    z12 = true;
                } else {
                    z12 = false;
                }
                if (z12) {
                    str3 = "N/A";
                } else {
                    str3 = str9;
                }
                bundle.putString("subscribedUser", str3);
                bundle.putString("subscriptionType", "N/A");
                bundle.putString("subscriptionStartDate", "N/A");
                bundle.putString("subscriptionEndDate", "N/A");
                if (str == null || str.length() == 0) {
                    z13 = true;
                } else {
                    z13 = false;
                }
                if (z13) {
                    str4 = "N/A";
                } else {
                    str4 = str;
                }
                bundle.putString("screenName", str4);
                String str10 = GlobalDataModel.googleAdId;
                if (str10 == null || str10.length() == 0) {
                    z14 = true;
                }
                if (z14) {
                    str5 = "N/A";
                } else {
                    str5 = GlobalDataModel.googleAdId;
                }
                bundle.putString(ConstantsKt.GOOGLE_AD_ID, str5);
                if (GlobalDataModel.PageOpenFromHelpCenter) {
                    str6 = "help_center";
                } else {
                    str6 = ScreenNames.getScreenType(str);
                }
                bundle.putString("screenType", str6);
                bundle.putString("userOnlinePaymentMethods", "N/A");
                if (LoggedInHelper.isLoggedIn()) {
                    str7 = "true";
                } else {
                    str7 = str9;
                }
                bundle.putString("userLoggedIn", str7);
                bundle.putString("userId", getUserId());
                bundle.putString("orderInProgress", "N/A");
                bundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
                bundle.putString("userTimeStamp", getCurrentTime());
                if (!Cart.getInstance().hasItems()) {
                    str9 = "true";
                }
                bundle.putString(ShopDetailsLoadedEvent.CART_EMPTY, str9);
                bundle.putString("userTotalOrders", "N/A");
                bundle.putString(ConstantsKt.SELECTED_LANGUAGE, TalabatAdjust.gtmLanguageSelected(GlobalDataModel.SelectedLanguage));
                bundle.putString("featureFlag", "N/A");
                bundle.putString("userOnlinePaymentMethods", "credit:" + getTalabatCreditBalance());
                TalabatFirebase.Companion.dispatchEvent(context, "screen_opened", bundle);
            }
        }

        public final void pushOrderComplete(@NotNull Context context, @Nullable Purchase purchase, @Nullable String str, @Nullable Restaurant restaurant, boolean z11, int i11, @Nullable Double d11) {
            Context context2 = context;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            setBundleForPurchaseCompleteEvent(context, bundle, purchase, str, restaurant, z11, i11, d11);
            TalabatFirebase.Companion companion = TalabatFirebase.Companion;
            companion.dispatchEvent(context, "ecommerce_purchase", bundle);
            companion.dispatchEvent(context, "purchase", bundle);
        }

        public final void pushSuccessfulCreditRedeemCompleted(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable Float f11) {
            boolean z11;
            boolean z12;
            String str3;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            boolean z13 = false;
            if (str2 == null || str2.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str4 = "N/A";
            if (z11) {
                str2 = str4;
            }
            bundle.putString("screenType", str2);
            if (str == null || str.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str = str4;
            }
            bundle.putString("screenName", str);
            bundle.putString("locationAddress", getLocationAddress(context));
            String str5 = GlobalDataModel.SelectedCityName;
            if (str5 == null || str5.length() == 0) {
                z13 = true;
            }
            if (!z13) {
                str4 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str4);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("userTimeStamp", getCurrentTime());
            if (LoggedInHelper.isLoggedIn()) {
                str3 = "true";
            } else {
                str3 = "false";
            }
            bundle.putString("userLoggedIn", str3);
            bundle.putString("userId", getUserId());
            bundle.putString("userOnlinePaymentMethods", "credit:" + getTalabatCreditBalanceAfterRedeemSuccessful(f11));
            bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
            bundle.putString("creditAmountAdd", String.valueOf(f11));
            TalabatFirebase.Companion.dispatchEvent(context, "credit_redeem_completed", bundle);
        }

        public final void pushTipRiderClicked(@NotNull Context context, @NotNull String str, @NotNull String str2, @NotNull String str3, @NotNull String str4, @NotNull String str5) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "orderStatus");
            Intrinsics.checkNotNullParameter(str2, "orderId");
            Intrinsics.checkNotNullParameter(str3, "tipValue");
            Intrinsics.checkNotNullParameter(str4, "paymentMethod");
            Intrinsics.checkNotNullParameter(str5, "source");
            Bundle commonBundle = getCommonBundle(context);
            commonBundle.putString("orderId", str2);
            commonBundle.putString("orderDeliveryStatus", str);
            commonBundle.putString("riderTipValue", str3);
            commonBundle.putString("tipClickOrigin", str5);
            TalabatFirebase.Companion.dispatchEvent(context, "rider_tip_clicked", commonBundle);
        }

        public final void pushTipRiderCompleted(@NotNull Context context, @NotNull String str, @NotNull String str2, @NotNull String str3, @NotNull String str4, @NotNull String str5) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "orderStatus");
            Intrinsics.checkNotNullParameter(str2, "orderId");
            Intrinsics.checkNotNullParameter(str3, "tipValue");
            Intrinsics.checkNotNullParameter(str4, "paymentMethod");
            Intrinsics.checkNotNullParameter(str5, "source");
            Bundle commonBundle = getCommonBundle(context);
            commonBundle.putString("orderId", str2);
            commonBundle.putString("orderDeliveryStatus", str);
            commonBundle.putString("riderTipValue", str3);
            commonBundle.putString("tipClickOrigin", str5);
            TalabatFirebase.Companion.dispatchEvent(context, "rider_tip_completed", commonBundle);
        }

        public final void pushTipRiderFailure(@NotNull Context context, @NotNull String str, @NotNull String str2, @NotNull String str3, @NotNull String str4) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "orderStatus");
            Intrinsics.checkNotNullParameter(str2, "orderId");
            Intrinsics.checkNotNullParameter(str3, "errorMessage");
            Intrinsics.checkNotNullParameter(str4, "paymentMethod");
            Bundle commonBundle = getCommonBundle(context);
            commonBundle.putString("orderDeliveryStatus", str);
            commonBundle.putString("orderId", str2);
            commonBundle.putString("errorMessage", str3);
            commonBundle.putString("tippingPaymentMethod", str4);
            TalabatFirebase.Companion.dispatchEvent(context, "rider_tip_failed", commonBundle);
        }

        public final void pushTipRiderOpen(@NotNull Context context, @NotNull String str, @NotNull String str2, @NotNull String str3) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "orderStatus");
            Intrinsics.checkNotNullParameter(str2, "orderId");
            Intrinsics.checkNotNullParameter(str3, "tipClickOrigin");
            Bundle commonBundle = getCommonBundle(context);
            commonBundle.putString("orderDeliveryStatus", str);
            commonBundle.putString("orderId", str2);
            commonBundle.putString("tipClickOrigin", str3);
            TalabatFirebase.Companion.dispatchEvent(context, "rider_tip_opened", commonBundle);
        }

        public final void pushWalletTopupAttempted(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3) {
            boolean z11;
            String str4;
            boolean z12;
            String str5;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("userOnlinePaymentMethods", "credit:" + getTalabatCreditBalance());
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("locationAddress", getLocationAddress(context));
            String str6 = GlobalDataModel.SelectedCityName;
            boolean z13 = false;
            if (str6 == null || str6.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str4 = "N/A";
            } else {
                str4 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str4);
            bundle.putString("userTimeStamp", getCurrentTime());
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = "N/A";
            }
            bundle.putString("screenType", str2);
            if (str == null || str.length() == 0) {
                z13 = true;
            }
            if (z13) {
                str = "N/A";
            }
            bundle.putString("screenName", str);
            if (LoggedInHelper.isLoggedIn()) {
                str5 = "true";
            } else {
                str5 = "false";
            }
            bundle.putString("userLoggedIn", str5);
            bundle.putString("userId", getUserId());
            bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
            bundle.putString("topupAmount", str3);
            TalabatFirebase.Companion.dispatchEvent(context, "wallet_topup_attempted", bundle);
        }

        public final void pushWalletTopupClicked(@NotNull Context context, @Nullable String str, @Nullable String str2) {
            boolean z11;
            String str3;
            boolean z12;
            String str4;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("userOnlinePaymentMethods", "credit:" + getTalabatCreditBalance());
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("locationAddress", getLocationAddress(context));
            String str5 = GlobalDataModel.SelectedCityName;
            boolean z13 = false;
            if (str5 == null || str5.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str3 = "N/A";
            } else {
                str3 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str3);
            bundle.putString("userTimeStamp", getCurrentTime());
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = "N/A";
            }
            bundle.putString("screenType", str2);
            if (str == null || str.length() == 0) {
                z13 = true;
            }
            if (z13) {
                str = "N/A";
            }
            bundle.putString("screenName", str);
            if (LoggedInHelper.isLoggedIn()) {
                str4 = "true";
            } else {
                str4 = "false";
            }
            bundle.putString("userLoggedIn", str4);
            bundle.putString("userId", getUserId());
            TalabatFirebase.Companion.dispatchEvent(context, "wallet_topup_clicked", bundle);
        }

        public final void pushWalletTopupFailed(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4) {
            boolean z11;
            String str5;
            boolean z12;
            String str6;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("userOnlinePaymentMethods", "credit:" + getTalabatCreditBalance());
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("locationAddress", getLocationAddress(context));
            String str7 = GlobalDataModel.SelectedCityName;
            boolean z13 = false;
            if (str7 == null || str7.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str5 = "N/A";
            } else {
                str5 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str5);
            bundle.putString("userTimeStamp", getCurrentTime());
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = "N/A";
            }
            bundle.putString("screenType", str2);
            if (str == null || str.length() == 0) {
                z13 = true;
            }
            if (z13) {
                str = "N/A";
            }
            bundle.putString("screenName", str);
            if (LoggedInHelper.isLoggedIn()) {
                str6 = "true";
            } else {
                str6 = "false";
            }
            bundle.putString("userLoggedIn", str6);
            bundle.putString("userId", getUserId());
            bundle.putString("walletAmountAdd", str3);
            bundle.putString("errorMessage", str4);
            TalabatFirebase.Companion.dispatchEvent(context, "wallet_topup_failed", bundle);
        }

        public final void pushWalletTopupSuccess(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4) {
            boolean z11;
            String str5;
            boolean z12;
            String str6;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("userOnlinePaymentMethods", "credit:" + getTalabatCreditBalance());
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("locationAddress", getLocationAddress(context));
            String str7 = GlobalDataModel.SelectedCityName;
            boolean z13 = false;
            if (str7 == null || str7.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str5 = "N/A";
            } else {
                str5 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str5);
            bundle.putString("userTimeStamp", getCurrentTime());
            if (str2 == null || str2.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str2 = "N/A";
            }
            bundle.putString("screenType", str2);
            if (str == null || str.length() == 0) {
                z13 = true;
            }
            if (z13) {
                str = "N/A";
            }
            bundle.putString("screenName", str);
            if (LoggedInHelper.isLoggedIn()) {
                str6 = "true";
            } else {
                str6 = "false";
            }
            bundle.putString("userLoggedIn", str6);
            bundle.putString("userId", getUserId());
            bundle.putString("walletAmountAdd", str3);
            bundle.putString("errorMessage", str4);
            TalabatFirebase.Companion.dispatchEvent(context, "wallet_topup_success", bundle);
        }

        /* JADX WARNING: Removed duplicated region for block: B:33:0x007b  */
        /* JADX WARNING: Removed duplicated region for block: B:34:0x007d  */
        /* JADX WARNING: Removed duplicated region for block: B:37:0x0082  */
        /* JADX WARNING: Removed duplicated region for block: B:40:0x008e  */
        /* JADX WARNING: Removed duplicated region for block: B:41:0x0090  */
        /* JADX WARNING: Removed duplicated region for block: B:43:0x0093  */
        /* JADX WARNING: Removed duplicated region for block: B:46:0x009f  */
        /* JADX WARNING: Removed duplicated region for block: B:48:0x00a2  */
        @androidx.annotation.VisibleForTesting
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public final void putAppliedVoucherData(@org.jetbrains.annotations.NotNull android.os.Bundle r7, @org.jetbrains.annotations.Nullable buisnessmodels.Cart r8) {
            /*
                r6 = this;
                java.lang.String r0 = "<this>"
                kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, r0)
                r0 = 0
                r1 = 1
                java.lang.String r2 = ""
                if (r8 == 0) goto L_0x0073
                java.lang.String r3 = r8.getVoucherCode()
                if (r3 == 0) goto L_0x001a
                boolean r3 = kotlin.text.StringsKt__StringsJVMKt.isBlank(r3)
                if (r3 == 0) goto L_0x0018
                goto L_0x001a
            L_0x0018:
                r3 = r0
                goto L_0x001b
            L_0x001a:
                r3 = r1
            L_0x001b:
                if (r3 == 0) goto L_0x004d
                boolean r3 = r8.isLoyaltyAvailable()
                if (r3 == 0) goto L_0x004d
                JsonModels.Response.LoyaltyVoucherResponse.LoyaltyVoucherRM r3 = r8.getLoyaltyVoucher()
                JsonModels.Response.LoyaltyVoucherResponse.LoyaltyVoucherResult r3 = r3.result
                if (r3 == 0) goto L_0x0032
                java.lang.String r3 = r3.getTitle()
                if (r3 == 0) goto L_0x0032
                goto L_0x0033
            L_0x0032:
                r3 = r2
            L_0x0033:
                float r4 = r8.getLoyaltyDiscount()
                java.lang.String r4 = java.lang.String.valueOf(r4)
                JsonModels.Response.LoyaltyVoucherResponse.LoyaltyVoucherRM r8 = r8.getLoyaltyVoucher()
                JsonModels.Response.LoyaltyVoucherResponse.LoyaltyVoucherResult r8 = r8.result
                if (r8 == 0) goto L_0x004a
                java.lang.String r8 = r8.getVoucherOptionType()
                if (r8 == 0) goto L_0x004a
                goto L_0x004b
            L_0x004a:
                r8 = r2
            L_0x004b:
                r2 = r3
                goto L_0x0075
            L_0x004d:
                java.lang.String r3 = r8.getVoucherCode()
                if (r3 == 0) goto L_0x005c
                boolean r3 = kotlin.text.StringsKt__StringsJVMKt.isBlank(r3)
                if (r3 == 0) goto L_0x005a
                goto L_0x005c
            L_0x005a:
                r3 = r0
                goto L_0x005d
            L_0x005c:
                r3 = r1
            L_0x005d:
                if (r3 != 0) goto L_0x0073
                java.lang.String r2 = r8.getVoucherCode()
                java.lang.String r3 = "voucherCode"
                kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r2, r3)
                float r8 = r8.voucherDiscount
                java.lang.String r8 = java.lang.String.valueOf(r8)
                java.lang.String r3 = "MARKETING"
                r4 = r8
                r8 = r3
                goto L_0x0075
            L_0x0073:
                r8 = r2
                r4 = r8
            L_0x0075:
                int r3 = r2.length()
                if (r3 != 0) goto L_0x007d
                r3 = r1
                goto L_0x007e
            L_0x007d:
                r3 = r0
            L_0x007e:
                java.lang.String r5 = "N/A"
                if (r3 == 0) goto L_0x0083
                r2 = r5
            L_0x0083:
                java.lang.String r3 = "coupon"
                r7.putString(r3, r2)
                int r2 = r4.length()
                if (r2 != 0) goto L_0x0090
                r2 = r1
                goto L_0x0091
            L_0x0090:
                r2 = r0
            L_0x0091:
                if (r2 == 0) goto L_0x0094
                r4 = r5
            L_0x0094:
                java.lang.String r2 = "couponValue"
                r7.putString(r2, r4)
                int r2 = r8.length()
                if (r2 != 0) goto L_0x00a0
                r0 = r1
            L_0x00a0:
                if (r0 == 0) goto L_0x00a3
                r8 = r5
            L_0x00a3:
                java.lang.String r0 = "SubmittedVoucher"
                r7.putString(r0, r8)
                java.lang.String r8 = "offerVoucherId"
                java.lang.String r0 = r6.getAppliedVoucherId()
                r7.putString(r8, r0)
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: tracking.gtm.TalabatGTM.Companion.putAppliedVoucherData(android.os.Bundle, buisnessmodels.Cart):void");
        }

        public final void rateorderClicked(@NotNull Context context, @Nullable String str) {
            boolean z11;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("transactionId", str);
            TalabatFirebase.Companion.dispatchEvent(context, "order_rate_clicked", bundle);
        }

        public final void rateorderSubmitted(@NotNull Context context, @Nullable String str) {
            boolean z11;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str = "N/A";
            }
            bundle.putString("transactionId", str);
            TalabatFirebase.Companion.dispatchEvent(context, "order_rate_submitted", bundle);
        }

        public final void register(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4, boolean z11) {
            boolean z12;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            boolean z13 = false;
            if (str3 == null || str3.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str3 = "N/A";
            }
            bundle.putString("registrationType", str3);
            bundle.putString("userId", getUserId());
            StringBuilder sb2 = new StringBuilder();
            sb2.append(z11);
            bundle.putString("newsletterSubscribed", sb2.toString());
            if (str4 == null || str4.length() == 0) {
                z13 = true;
            }
            if (z13) {
                str4 = "N/A";
            }
            bundle.putString("registrationErrorMessage", str4);
            TalabatFirebase.Companion.dispatchEvent(context, "register_" + str2, bundle);
        }

        public final void removeFromCart(@NotNull Context context, @Nullable CartMenuItem cartMenuItem, int i11, @Nullable String str, @Nullable Restaurant restaurant, @NotNull String str2, @NotNull String str3, @NotNull String str4) {
            String str5;
            MenuSection menuSection;
            MenuSection menuSection2;
            Context context2 = context;
            CartMenuItem cartMenuItem2 = cartMenuItem;
            Restaurant restaurant2 = restaurant;
            Intrinsics.checkNotNullParameter(context2, "context");
            String str6 = str2;
            Intrinsics.checkNotNullParameter(str6, "eventOrigin");
            String str7 = str3;
            Intrinsics.checkNotNullParameter(str7, "screenType");
            String str8 = str4;
            Intrinsics.checkNotNullParameter(str8, "screenName");
            Bundle bundle = new Bundle();
            Bundle bundle2 = new Bundle();
            bundle2.putString(FirebaseAnalytics.Param.ITEM_NAME, cartMenuItem2 != null ? cartMenuItem2.f13862name : null);
            Integer valueOf = cartMenuItem2 != null ? Integer.valueOf(cartMenuItem2.f13861id) : null;
            StringBuilder sb2 = new StringBuilder();
            sb2.append(valueOf);
            bundle2.putString("item_id", sb2.toString());
            Integer valueOf2 = cartMenuItem2 != null ? Integer.valueOf(cartMenuItem2.menuSectionId) : null;
            StringBuilder sb3 = new StringBuilder();
            sb3.append(valueOf2);
            bundle2.putString(FirebaseAnalytics.Param.ITEM_CATEGORY, sb3.toString());
            Float valueOf3 = cartMenuItem2 != null ? Float.valueOf(cartMenuItem.getItemPrice()) : null;
            StringBuilder sb4 = new StringBuilder();
            sb4.append(valueOf3);
            bundle2.putString(FirebaseAnalytics.Param.PRICE, sb4.toString());
            bundle2.putString(FirebaseAnalytics.Param.ITEM_BRAND, str);
            Integer valueOf4 = cartMenuItem2 != null ? Integer.valueOf(cartMenuItem.getQuantity()) : null;
            StringBuilder sb5 = new StringBuilder();
            sb5.append(valueOf4);
            bundle2.putString(FirebaseAnalytics.Param.QUANTITY, sb5.toString());
            bundle.putParcelable(FirebaseAnalytics.Param.ITEMS, bundle2);
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationLat", getLocationLatitude());
            String str9 = GlobalDataModel.SelectedCityName;
            boolean z11 = false;
            String str10 = "N/A";
            bundle.putString("locationCity", str9 == null || str9.length() == 0 ? str10 : GlobalDataModel.SelectedCityName);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            String str11 = restaurant2 != null ? restaurant2.branchName : null;
            bundle.putString("shopName", str11 == null || str11.length() == 0 ? str10 : restaurant2 != null ? restaurant2.branchName : null);
            bundle.putString("userId", getUserId());
            if (str3.length() == 0) {
                str7 = str10;
            }
            bundle.putString("screenType", str7);
            if (str4.length() == 0) {
                str8 = str10;
            }
            bundle.putString("screenName", str8);
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("listingPageType", restaurant2 != null ? listingType(restaurant2) : str10);
            bundle.putString("deliveryProvider", restaurant2 != null ? restaurantType(restaurant2) : str10);
            Integer valueOf5 = restaurant2 != null ? Integer.valueOf(restaurant2.branchId) : null;
            StringBuilder sb6 = new StringBuilder();
            sb6.append(valueOf5);
            bundle.putString("shopId", sb6.toString());
            bundle.putString("shopType", restaurant2 != null ? listingType(restaurant2) : str10);
            String str12 = cartMenuItem2 != null ? cartMenuItem2.desc : null;
            bundle.putString(ProductTrackingProvider.DESCRIPTION, str12 == null || str12.length() == 0 ? str10 : cartMenuItem2 != null ? cartMenuItem2.desc : null);
            bundle.putString("productSku", String.valueOf(cartMenuItem2 != null ? Integer.valueOf(cartMenuItem2.f13861id) : null));
            bundle.putString(ProductTrackingProvider.QUANTITY, String.valueOf(cartMenuItem2 != null ? Integer.valueOf(cartMenuItem.getQuantity()) : null));
            String str13 = cartMenuItem2 != null ? cartMenuItem2.f13862name : null;
            bundle.putString(ProductTrackingProvider.NAME, str13 == null || str13.length() == 0 ? str10 : cartMenuItem2 != null ? cartMenuItem2.f13862name : null);
            String str14 = (cartMenuItem2 == null || (menuSection2 = cartMenuItem2.menuSection) == null) ? null : menuSection2.f13864name;
            bundle.putString("productCategory", str14 == null || str14.length() == 0 ? str10 : (cartMenuItem2 == null || (menuSection = cartMenuItem2.menuSection) == null) ? null : menuSection.f13864name);
            String selectedMandatoryAndOptionalChoices = cartMenuItem2 != null ? cartMenuItem.getSelectedMandatoryAndOptionalChoices() : null;
            if (selectedMandatoryAndOptionalChoices == null || selectedMandatoryAndOptionalChoices.length() == 0) {
                str5 = str10;
            } else {
                str5 = cartMenuItem2 != null ? cartMenuItem.getSelectedMandatoryAndOptionalChoices() : null;
            }
            bundle.putString("productVariant", str5);
            bundle.putString("productToppings", str10);
            bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
            bundle.putString("shopMainCuisine", (restaurant2 == null || !restaurant.hasCusine()) ? str10 : restaurant.GACuisineString());
            bundle.putString(ProductTrackingProvider.SALE_PRICE, String.valueOf(cartMenuItem2 != null ? Float.valueOf(cartMenuItem.getTotalPrice()) : null));
            bundle.putString(ProductTrackingProvider.PRICE, String.valueOf(cartMenuItem2 != null ? Float.valueOf(cartMenuItem.getTotalPrice()) : null));
            bundle.putString(ShopDetailsLoadedEvent.MENU_CATEGORY_NUMBER, getRestaurantMenuSections().size() > 0 ? String.valueOf(getRestaurantMenuSections().size()) : "0");
            if (str2.length() == 0) {
                str6 = str10;
            }
            bundle.putString("eventOrigin", str6);
            String str15 = GlobalDataModel.ShopClickOrigin;
            if (str15 == null || StringsKt__StringsJVMKt.isBlank(str15)) {
                z11 = true;
            }
            if (!z11) {
                str10 = GlobalDataModel.ShopClickOrigin;
            }
            bundle.putString("shopClickOrigin", str10);
            TalabatFirebase.Companion.dispatchEvent(context2, "remove_from_cart", bundle);
        }

        public final void reorderClicked(@NotNull Context context, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            String str = GlobalDataModel.SelectedCityName;
            bundle.putString("locationCity", str == null || str.length() == 0 ? "N/A" : GlobalDataModel.SelectedCityName);
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("screenName", "N/A");
            bundle.putString("userId", getUserId());
            Integer valueOf = restaurant != null ? Integer.valueOf(restaurant.branchId) : null;
            StringBuilder sb2 = new StringBuilder();
            sb2.append(valueOf);
            bundle.putString("shopId", sb2.toString());
            bundle.putString("screenType", "N/A");
            TalabatFirebase.Companion.dispatchEvent(context, "reorder_clicked", bundle);
        }

        public final void restaurantClicked(@NotNull Context context, @Nullable String str, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        /* JADX WARNING: Code restructure failed: missing block: B:10:0x0036, code lost:
            r12 = r12.restaurants;
         */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public final void restaurantClicked(@org.jetbrains.annotations.NotNull android.content.Context r20, boolean r21, @org.jetbrains.annotations.Nullable datamodels.Restaurant r22, @org.jetbrains.annotations.Nullable java.lang.String r23, @org.jetbrains.annotations.Nullable java.lang.String r24, @org.jetbrains.annotations.Nullable java.lang.String r25, @org.jetbrains.annotations.Nullable java.lang.String r26, @org.jetbrains.annotations.Nullable java.lang.String r27, @org.jetbrains.annotations.Nullable java.lang.String r28, @org.jetbrains.annotations.Nullable JsonModels.PolygonEvents r29, @org.jetbrains.annotations.NotNull java.lang.String r30, @org.jetbrains.annotations.Nullable java.util.HashMap<java.lang.String, java.lang.String> r31, @org.jetbrains.annotations.NotNull tracking.ShopClickedEvent.EventOriginSource r32, boolean r33, @org.jetbrains.annotations.Nullable java.lang.String r34, @org.jetbrains.annotations.Nullable java.lang.Integer r35, @org.jetbrains.annotations.Nullable java.lang.Integer r36) {
            /*
                r19 = this;
                r0 = r19
                r1 = r20
                r2 = r22
                r3 = r29
                r4 = r30
                r5 = r32
                java.lang.String r6 = "context"
                kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, r6)
                java.lang.String r6 = "listViewType"
                kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, r6)
                java.lang.String r7 = "eventSource"
                kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, r7)
                android.os.Bundle r7 = new android.os.Bundle
                r7.<init>()
                if (r2 == 0) goto L_0x0448
                datamodels.Swimlane r8 = com.talabat.helpers.GlobalDataModel.SelectedSwimlane
                r9 = 0
                java.lang.String r10 = ""
                if (r8 == 0) goto L_0x0060
                if (r8 == 0) goto L_0x0031
                java.lang.String r8 = r8.getSlug()
                if (r8 != 0) goto L_0x0032
            L_0x0031:
                r8 = r10
            L_0x0032:
                datamodels.Swimlane r12 = com.talabat.helpers.GlobalDataModel.SelectedSwimlane
                if (r12 == 0) goto L_0x003f
                java.util.ArrayList<datamodels.Restaurant> r12 = r12.restaurants
                if (r12 == 0) goto L_0x003f
                int r12 = r12.size()
                goto L_0x0040
            L_0x003f:
                r12 = 0
            L_0x0040:
                datamodels.Swimlane r13 = com.talabat.helpers.GlobalDataModel.SelectedSwimlane
                if (r13 == 0) goto L_0x0049
                int r13 = r13.getPosition()
                goto L_0x004a
            L_0x0049:
                r13 = 0
            L_0x004a:
                datamodels.Swimlane r14 = com.talabat.helpers.GlobalDataModel.SelectedSwimlane
                if (r14 == 0) goto L_0x0059
                datamodels.Strategy r14 = r14.getStrategy()
                if (r14 == 0) goto L_0x0059
                java.lang.String r14 = r14.getRecommendationStrategy()
                goto L_0x005a
            L_0x0059:
                r14 = r9
            L_0x005a:
                if (r14 != 0) goto L_0x005d
                r14 = r10
            L_0x005d:
                com.talabat.helpers.GlobalDataModel.SelectedSwimlane = r9
                goto L_0x0064
            L_0x0060:
                r8 = r10
                r14 = r8
                r12 = 0
                r13 = 0
            L_0x0064:
                boolean r15 = r2.isDiscountAvaialble
                r16 = 1
                if (r15 != 0) goto L_0x0075
                boolean r15 = r2.isPromotionAvailable
                if (r15 != 0) goto L_0x0075
                int r15 = r2.upsellId
                if (r15 == 0) goto L_0x0073
                goto L_0x0075
            L_0x0073:
                r15 = 0
                goto L_0x0077
            L_0x0075:
                r15 = r16
            L_0x0077:
                java.lang.StringBuilder r9 = new java.lang.StringBuilder
                r9.<init>()
                if (r33 == 0) goto L_0x0083
                java.lang.String r11 = "gem"
                r9.append(r11)
            L_0x0083:
                boolean r11 = r2.isDiscountAvaialble
                r17 = r10
                java.lang.String r10 = ","
                if (r11 == 0) goto L_0x009f
                int r11 = r9.length()
                if (r11 <= 0) goto L_0x0094
                r11 = r16
                goto L_0x0095
            L_0x0094:
                r11 = 0
            L_0x0095:
                if (r11 == 0) goto L_0x009a
                r9.append(r10)
            L_0x009a:
                java.lang.String r11 = "discount"
                r9.append(r11)
            L_0x009f:
                boolean r11 = r2.isPromotionAvailable
                if (r11 == 0) goto L_0x00b7
                int r11 = r9.length()
                if (r11 <= 0) goto L_0x00ac
                r11 = r16
                goto L_0x00ad
            L_0x00ac:
                r11 = 0
            L_0x00ad:
                if (r11 == 0) goto L_0x00b2
                r9.append(r10)
            L_0x00b2:
                java.lang.String r11 = "promotion"
                r9.append(r11)
            L_0x00b7:
                int r11 = r2.upsellId
                if (r11 == 0) goto L_0x00cf
                int r11 = r9.length()
                if (r11 <= 0) goto L_0x00c4
                r11 = r16
                goto L_0x00c5
            L_0x00c4:
                r11 = 0
            L_0x00c5:
                if (r11 == 0) goto L_0x00ca
                r9.append(r10)
            L_0x00ca:
                java.lang.String r10 = r2.upsellName
                r9.append(r10)
            L_0x00cf:
                java.lang.String r10 = "locationAddress"
                java.lang.String r11 = r19.getLocationAddress(r20)
                r7.putString(r10, r11)
                java.lang.String r10 = "locationLat"
                java.lang.String r11 = r19.getLocationLatitude()
                r7.putString(r10, r11)
                java.lang.String r10 = "locationLon"
                java.lang.String r11 = r19.getLocationLongitude()
                r7.putString(r10, r11)
                java.lang.String r10 = com.talabat.helpers.GlobalDataModel.SelectedCityName
                if (r10 == 0) goto L_0x00f7
                int r10 = r10.length()
                if (r10 != 0) goto L_0x00f5
                goto L_0x00f7
            L_0x00f5:
                r10 = 0
                goto L_0x00f9
            L_0x00f7:
                r10 = r16
            L_0x00f9:
                java.lang.String r11 = "N/A"
                if (r10 == 0) goto L_0x00ff
                r10 = r11
                goto L_0x0101
            L_0x00ff:
                java.lang.String r10 = com.talabat.helpers.GlobalDataModel.SelectedCityName
            L_0x0101:
                java.lang.String r1 = "locationCity"
                r7.putString(r1, r10)
                int r1 = com.talabat.helpers.GlobalDataModel.SelectedAreaId
                java.lang.String r1 = java.lang.String.valueOf(r1)
                java.lang.String r10 = "locationArea"
                r7.putString(r10, r1)
                java.lang.String r1 = "locationCountry"
                java.lang.String r10 = tracking.TalabatAdjust.getSelectedCountryIso()
                r7.putString(r1, r10)
                java.lang.String r1 = "shopCategorySelected"
                r7.putString(r1, r11)
                datamodels.Restaurant r10 = com.talabat.helpers.GlobalDataModel.SELECTED.restaurant
                java.lang.String r18 = "0"
                if (r10 == 0) goto L_0x012e
                int r10 = r10.itemPosition
                java.lang.String r10 = java.lang.String.valueOf(r10)
                r33 = r1
                goto L_0x0132
            L_0x012e:
                r33 = r1
                r10 = r18
            L_0x0132:
                java.lang.String r1 = "shopPosition"
                r7.putString(r1, r10)
                java.lang.String r1 = "shopSponsoring"
                java.lang.String r10 = r19.getShopSponsoring()
                r7.putString(r1, r10)
                java.lang.String r1 = "shopType"
                java.lang.String r10 = r0.listingType(r2)
                r7.putString(r1, r10)
                library.talabat.SharedPreferencesManager r1 = library.talabat.SharedPreferencesManager.getInstance(r20)
                int r1 = r1.getLastFavVerticalId()
                java.lang.String r1 = r0.shopListType(r1)
                java.lang.String r10 = "shopListType"
                r7.putString(r10, r1)
                java.lang.String r1 = "shopPaymentMethods"
                java.lang.String r10 = r0.getPaymentMethods(r2)
                r7.putString(r1, r10)
                int r1 = r8.length()
                if (r1 <= 0) goto L_0x016c
                r1 = r16
                goto L_0x016d
            L_0x016c:
                r1 = 0
            L_0x016d:
                if (r1 == 0) goto L_0x0170
                goto L_0x0171
            L_0x0170:
                r8 = r11
            L_0x0171:
                java.lang.String r1 = "swimlaneTitle"
                r7.putString(r1, r8)
                java.lang.String r1 = "swimlaneTotal"
                java.lang.String r8 = java.lang.String.valueOf(r12)
                r7.putString(r1, r8)
                java.lang.String r1 = "swimlanePosition"
                java.lang.String r8 = java.lang.String.valueOf(r13)
                r7.putString(r1, r8)
                java.lang.String r1 = "swimlaneStrategy"
                r7.putString(r1, r14)
                datamodels.Restaurant r1 = com.talabat.helpers.GlobalDataModel.SELECTED.restaurant
                if (r1 == 0) goto L_0x0197
                int r1 = r1.itemDisplayed
                java.lang.String r18 = java.lang.String.valueOf(r1)
            L_0x0197:
                r1 = r18
                java.lang.String r8 = "swimlaneTilesDisplayed"
                r7.putString(r8, r1)
                java.lang.String r1 = "userId"
                java.lang.String r8 = r19.getUserId()
                r7.putString(r1, r8)
                if (r27 == 0) goto L_0x01b2
                int r1 = r27.length()
                if (r1 != 0) goto L_0x01b0
                goto L_0x01b2
            L_0x01b0:
                r1 = 0
                goto L_0x01b4
            L_0x01b2:
                r1 = r16
            L_0x01b4:
                if (r1 == 0) goto L_0x01b8
                r1 = r11
                goto L_0x01ba
            L_0x01b8:
                r1 = r27
            L_0x01ba:
                java.lang.String r8 = "screenType"
                r7.putString(r8, r1)
                java.lang.String r1 = "screenName"
                r7.putString(r1, r11)
                java.lang.String r1 = "userTimeStamp"
                java.lang.String r8 = r19.getCurrentTime()
                r7.putString(r1, r8)
                java.lang.String r1 = r2.deliveryTime
                if (r1 == 0) goto L_0x01da
                int r1 = r1.length()
                if (r1 != 0) goto L_0x01d8
                goto L_0x01da
            L_0x01d8:
                r1 = 0
                goto L_0x01dc
            L_0x01da:
                r1 = r16
            L_0x01dc:
                if (r1 == 0) goto L_0x01e0
                r1 = r11
                goto L_0x01e2
            L_0x01e0:
                java.lang.String r1 = r2.deliveryTime
            L_0x01e2:
                java.lang.String r8 = "shopDeliveryTime"
                r7.putString(r8, r1)
                java.lang.String r1 = "floodValue"
                java.lang.String r8 = "floodMessage"
                java.lang.String r10 = "floodType"
                java.lang.String r12 = "floodActive"
                if (r3 == 0) goto L_0x0206
                boolean r13 = r3.isActive
                r7.putBoolean(r12, r13)
                java.lang.String r12 = r3.eventType
                r7.putString(r10, r12)
                java.lang.String r10 = r3.eventMsg
                r7.putString(r8, r10)
                int r3 = r3.eventValue
                r7.putInt(r1, r3)
                goto L_0x0212
            L_0x0206:
                r7.putString(r12, r11)
                r7.putString(r10, r11)
                r7.putString(r8, r11)
                r7.putString(r1, r11)
            L_0x0212:
                java.lang.String r1 = "shopTilesDisplayed"
                r7.putString(r1, r11)
                java.lang.String r1 = r2.areaName
                if (r1 == 0) goto L_0x0224
                int r1 = r1.length()
                if (r1 != 0) goto L_0x0222
                goto L_0x0224
            L_0x0222:
                r1 = 0
                goto L_0x0226
            L_0x0224:
                r1 = r16
            L_0x0226:
                if (r1 == 0) goto L_0x022a
                r1 = r11
                goto L_0x022c
            L_0x022a:
                java.lang.String r1 = r2.areaName
            L_0x022c:
                java.lang.String r3 = "shopArea"
                r7.putString(r3, r1)
                java.lang.String r1 = r2.f13873name
                if (r1 == 0) goto L_0x023e
                int r1 = r1.length()
                if (r1 != 0) goto L_0x023c
                goto L_0x023e
            L_0x023c:
                r1 = 0
                goto L_0x0240
            L_0x023e:
                r1 = r16
            L_0x0240:
                if (r1 == 0) goto L_0x0244
                r1 = r11
                goto L_0x0246
            L_0x0244:
                java.lang.String r1 = r2.f13873name
            L_0x0246:
                java.lang.String r3 = "chainName"
                r7.putString(r3, r1)
                int r1 = r2.f13872id
                java.lang.StringBuilder r3 = new java.lang.StringBuilder
                r3.<init>()
                r3.append(r1)
                java.lang.String r1 = r3.toString()
                java.lang.String r3 = "chainId"
                r7.putString(r3, r1)
                java.lang.String r1 = "chainShops"
                r7.putString(r1, r11)
                java.lang.String r1 = r2.branchName
                if (r1 == 0) goto L_0x0270
                int r1 = r1.length()
                if (r1 != 0) goto L_0x026e
                goto L_0x0270
            L_0x026e:
                r1 = 0
                goto L_0x0272
            L_0x0270:
                r1 = r16
            L_0x0272:
                if (r1 == 0) goto L_0x0276
                r1 = r11
                goto L_0x0278
            L_0x0276:
                java.lang.String r1 = r2.branchName
            L_0x0278:
                java.lang.String r3 = "shopName"
                r7.putString(r3, r1)
                int r1 = r2.statusType
                java.lang.String r1 = r0.getShopStatus(r1)
                java.lang.String r3 = "shopStatus"
                r7.putString(r3, r1)
                java.lang.String r1 = com.talabat.helpers.GlobalDataModel.ShopClickOrigin
                java.lang.String r3 = "ShopClickOrigin"
                kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, r3)
                int r1 = r1.length()
                if (r1 <= 0) goto L_0x0298
                r1 = r16
                goto L_0x0299
            L_0x0298:
                r1 = 0
            L_0x0299:
                if (r1 == 0) goto L_0x029e
                java.lang.String r1 = com.talabat.helpers.GlobalDataModel.ShopClickOrigin
                goto L_0x029f
            L_0x029e:
                r1 = r11
            L_0x029f:
                java.lang.String r3 = "shopClickOrigin"
                r7.putString(r3, r1)
                if (r28 == 0) goto L_0x02af
                int r1 = r28.length()
                if (r1 != 0) goto L_0x02ad
                goto L_0x02af
            L_0x02ad:
                r1 = 0
                goto L_0x02b1
            L_0x02af:
                r1 = r16
            L_0x02b1:
                java.lang.String r3 = "this as java.lang.String).toLowerCase()"
                if (r1 == 0) goto L_0x02b7
                r1 = r11
                goto L_0x02c2
            L_0x02b7:
                if (r28 == 0) goto L_0x02c1
                java.lang.String r1 = r28.toLowerCase()
                kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, r3)
                goto L_0x02c2
            L_0x02c1:
                r1 = 0
            L_0x02c2:
                java.lang.String r8 = "searchTerm"
                r7.putString(r8, r1)
                if (r25 == 0) goto L_0x02d2
                int r1 = r25.length()
                if (r1 != 0) goto L_0x02d0
                goto L_0x02d2
            L_0x02d0:
                r1 = 0
                goto L_0x02d4
            L_0x02d2:
                r1 = r16
            L_0x02d4:
                if (r1 == 0) goto L_0x02d8
                r1 = r11
                goto L_0x02e3
            L_0x02d8:
                if (r25 == 0) goto L_0x02e2
                java.lang.String r1 = r25.toLowerCase()
                kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, r3)
                goto L_0x02e3
            L_0x02e2:
                r1 = 0
            L_0x02e3:
                java.lang.String r8 = "channelIndex"
                r7.putString(r8, r1)
                if (r26 == 0) goto L_0x02f3
                int r1 = r26.length()
                if (r1 != 0) goto L_0x02f1
                goto L_0x02f3
            L_0x02f1:
                r1 = 0
                goto L_0x02f5
            L_0x02f3:
                r1 = r16
            L_0x02f5:
                if (r1 == 0) goto L_0x02f9
                r1 = r11
                goto L_0x0300
            L_0x02f9:
                java.lang.String r1 = r26.toLowerCase()
                kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, r3)
            L_0x0300:
                java.lang.String r3 = "channel"
                r7.putString(r3, r1)
                boolean r1 = r2.isRecommendation
                java.lang.String r1 = java.lang.String.valueOf(r1)
                java.lang.String r3 = "shopRecommented"
                r7.putString(r3, r1)
                int r1 = r2.branchId
                java.lang.StringBuilder r3 = new java.lang.StringBuilder
                r3.<init>()
                r3.append(r1)
                java.lang.String r1 = r3.toString()
                java.lang.String r3 = "shopId"
                r7.putString(r3, r1)
                java.lang.String r1 = "shopCokeUpsell"
                java.lang.String r3 = java.lang.String.valueOf(r21)
                r7.putString(r1, r3)
                boolean r1 = r22.hasCusine()
                if (r1 == 0) goto L_0x0337
                java.lang.String r1 = r22.GACuisineString()
                goto L_0x0338
            L_0x0337:
                r1 = r11
            L_0x0338:
                java.lang.String r3 = "shopMainCuisine"
                r7.putString(r3, r1)
                java.lang.String r1 = "shopWithOffer"
                java.lang.String r3 = java.lang.String.valueOf(r15)
                r7.putString(r1, r3)
                java.lang.String r1 = "shopOfferType"
                java.lang.String r3 = r9.toString()
                r7.putString(r1, r3)
                java.lang.String r1 = "deliveryProvider"
                java.lang.String r3 = r0.restaurantType(r2)
                r7.putString(r1, r3)
                if (r23 == 0) goto L_0x0363
                int r1 = r23.length()
                if (r1 != 0) goto L_0x0361
                goto L_0x0363
            L_0x0361:
                r1 = 0
                goto L_0x0365
            L_0x0363:
                r1 = r16
            L_0x0365:
                if (r1 == 0) goto L_0x0369
                r1 = r11
                goto L_0x036b
            L_0x0369:
                r1 = r23
            L_0x036b:
                java.lang.String r3 = "clickOrigin"
                r7.putString(r3, r1)
                if (r24 == 0) goto L_0x037b
                int r1 = r24.length()
                if (r1 != 0) goto L_0x0379
                goto L_0x037b
            L_0x0379:
                r16 = 0
            L_0x037b:
                if (r16 == 0) goto L_0x037f
                r1 = r11
                goto L_0x0381
            L_0x037f:
                r1 = r24
            L_0x0381:
                java.lang.String r3 = "searchString"
                r7.putString(r3, r1)
                r7.putString(r6, r4)
                java.lang.String r1 = com.talabat.core.network.midas.MidasHttpInterceptorKt.getMidasRequestId()
                if (r1 != 0) goto L_0x0391
                r1 = r17
            L_0x0391:
                java.lang.String r3 = "midasRequestId"
                r7.putString(r3, r1)
                tracking.ShopClickedEvent r1 = tracking.ShopClickedEvent.INSTANCE
                java.lang.String r3 = r1.toEventData$com_talabat_talabatlib_talabatlib(r5)
                java.lang.String r4 = "eventOrigin"
                r7.putString(r4, r3)
                java.lang.String r3 = r32.getShopCategory()
                r4 = r33
                r7.putString(r4, r3)
                java.lang.String r3 = "shopFilteringSelected"
                java.lang.String r4 = r1.toShopFilterSelected$com_talabat_talabatlib_talabatlib(r5)
                r7.putString(r3, r4)
                java.lang.String r3 = "shopSortingSelected"
                java.lang.String r1 = r1.toShopSortingSelected$com_talabat_talabatlib_talabatlib(r5)
                r7.putString(r3, r1)
                datamodels.Restaurant$PremiumType r1 = r2.premiumType
                if (r1 == 0) goto L_0x03c4
                java.lang.String r1 = r1.token
                if (r1 != 0) goto L_0x03c5
            L_0x03c4:
                r1 = r11
            L_0x03c5:
                java.lang.String r3 = "ncrRequestToken"
                r7.putString(r3, r1)
                if (r31 == 0) goto L_0x03f2
                java.util.Set r1 = r31.entrySet()
                java.util.Iterator r1 = r1.iterator()
            L_0x03d4:
                boolean r3 = r1.hasNext()
                if (r3 == 0) goto L_0x03f0
                java.lang.Object r3 = r1.next()
                java.util.Map$Entry r3 = (java.util.Map.Entry) r3
                java.lang.Object r4 = r3.getKey()
                java.lang.String r4 = (java.lang.String) r4
                java.lang.Object r3 = r3.getValue()
                java.lang.String r3 = (java.lang.String) r3
                r7.putString(r4, r3)
                goto L_0x03d4
            L_0x03f0:
                kotlin.Unit r1 = kotlin.Unit.INSTANCE
            L_0x03f2:
                if (r34 != 0) goto L_0x03f5
                goto L_0x03f7
            L_0x03f5:
                r11 = r34
            L_0x03f7:
                java.lang.String r1 = "vendorSponsoringPlacement"
                r7.putString(r1, r11)
                library.talabat.SharedPreferencesManager r1 = library.talabat.SharedPreferencesManager.getInstance(r20)
                int r1 = r1.getLastFavVerticalId()
                java.lang.String r1 = r0.shopListType(r1)
                java.lang.String r3 = "listingPageType"
                r7.putString(r3, r1)
                if (r35 == 0) goto L_0x041e
                int r1 = r35.intValue()
                java.lang.String r3 = "productSku"
                java.lang.String r1 = java.lang.String.valueOf(r1)
                r7.putString(r3, r1)
                kotlin.Unit r1 = kotlin.Unit.INSTANCE
            L_0x041e:
                if (r36 == 0) goto L_0x042e
                r36.intValue()
                java.lang.String r1 = "featuredProductQuantity"
                java.lang.String r3 = r36.toString()
                r7.putString(r1, r3)
                kotlin.Unit r1 = kotlin.Unit.INSTANCE
            L_0x042e:
                java.lang.String r1 = r2.tStarLabel
                if (r1 != 0) goto L_0x0435
                r10 = r17
                goto L_0x0436
            L_0x0435:
                r10 = r1
            L_0x0436:
                java.lang.String r1 = "shopBadge"
                r7.putString(r1, r10)
                boolean r1 = com.talabat.helpers.RestaurantExtensionsKt.isFavourite(r22)
                java.lang.String r1 = java.lang.String.valueOf(r1)
                java.lang.String r2 = "shopIsFavorite"
                r7.putString(r2, r1)
            L_0x0448:
                tracking.gtm.ITalabatFirebase r1 = r19.getTalabatFirebase()
                java.lang.String r2 = "shop_clicked"
                r3 = r20
                r1.dispatchEvent(r3, r2, r7)
                r0.trackAdExEvent(r2, r7)
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: tracking.gtm.TalabatGTM.Companion.restaurantClicked(android.content.Context, boolean, datamodels.Restaurant, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, JsonModels.PolygonEvents, java.lang.String, java.util.HashMap, tracking.ShopClickedEvent$EventOriginSource, boolean, java.lang.String, java.lang.Integer, java.lang.Integer):void");
        }

        public final void restaurantMenuShown(@NotNull Context context, @NotNull String str, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "restaurantType");
        }

        @NotNull
        public final String restaurantType(@Nullable Restaurant restaurant) {
            if (restaurant == null) {
                return "N/A";
            }
            if (restaurant.isTalabatGo) {
                return "TGO";
            }
            if (restaurant.providesTrackorder) {
                return "9C";
            }
            if (restaurant.provideOrderSatus) {
                return "notifications";
            }
            return "shop_delivery";
        }

        @NotNull
        public final String restaurantTypeForOrderingExperience(@Nullable Restaurant restaurant) {
            return restaurant != null ? (restaurant.isTalabatGo || restaurant.providesTrackorder || restaurant.provideOrderSatus) ? "TGO" : "shop_delivery" : "N/A";
        }

        public final void retryConnectClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void searchClicked(@NotNull Context context, @Nullable String str, @Nullable String str2) {
            boolean z11;
            String str3;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("screenType", str);
            bundle.putString("screenName", "N/A");
            bundle.putString("searchTerm", "N/A");
            bundle.putString("searchSectionList", "N/A");
            bundle.putString(SearchTracker.SECTION, "N/A");
            bundle.putString("searchPosition", "N/A");
            bundle.putString("searchId", "N/A");
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str4 = GlobalDataModel.SelectedCityName;
            if (str4 == null || str4.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str3 = "N/A";
            } else {
                str3 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str3);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("userId", getUserId());
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("lastShopSeen", "N/A");
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("shopPosition", "N/A");
            bundle.putString("eventOrigin", str2);
            TalabatFirebase.Companion.dispatchEvent(context, "search_bar_clicked", bundle);
        }

        @VisibleForTesting
        public final void setBaseRestuarantBundleParams(@Nullable Restaurant restaurant, @NotNull Bundle bundle) {
            boolean z11;
            String str;
            boolean z12;
            String str2;
            Intrinsics.checkNotNullParameter(bundle, "bundle");
            if (restaurant != null) {
                Companion companion = TalabatGTM.Companion;
                bundle.putString("shopType", companion.listingType(restaurant));
                String valueOf = String.valueOf(restaurant.f13872id);
                boolean z13 = false;
                if (valueOf == null || valueOf.length() == 0) {
                    z11 = true;
                } else {
                    z11 = false;
                }
                String str3 = "N/A";
                if (z11) {
                    str = str3;
                } else {
                    str = String.valueOf(restaurant.f13872id);
                }
                bundle.putString("chainId", str);
                String valueOf2 = String.valueOf(restaurant.branchId);
                if (valueOf2 == null || valueOf2.length() == 0) {
                    z12 = true;
                } else {
                    z12 = false;
                }
                if (z12) {
                    str2 = str3;
                } else {
                    str2 = String.valueOf(restaurant.branchId);
                }
                bundle.putString("shopId", str2);
                bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
                bundle.putString("locationArea", companion.getSelectedAreaId());
                String str4 = GlobalDataModel.SelectedCityName;
                if (str4 == null || str4.length() == 0) {
                    z13 = true;
                }
                if (!z13) {
                    str3 = GlobalDataModel.SelectedCityName;
                }
                bundle.putString("locationCity", str3);
                bundle.putString("locationLon", companion.getLocationLongitude());
                bundle.putString("locationLat", companion.getLocationLatitude());
            }
        }

        @VisibleForTesting
        public final void setBundleForPurchaseCompleteEvent(@NotNull Context context, @NotNull Bundle bundle, @Nullable Purchase purchase, @Nullable String str, @Nullable Restaurant restaurant, boolean z11, int i11, @Nullable Double d11) {
            double d12;
            Bundle bundle2 = bundle;
            Restaurant restaurant2 = restaurant;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(bundle2, "bundle");
            PolygonEvents polygonEvents = GlobalDataModel.POLYGON_TRACKING.polygonEvents;
            ArrayList arrayList = new ArrayList();
            String str2 = "N/A";
            if (purchase != null) {
                Iterator<CartMenuItem> it = purchase.getCart().iterator();
                float f11 = 0.0f;
                while (it.hasNext()) {
                    CartMenuItem next = it.next();
                    Bundle bundle3 = new Bundle();
                    String str3 = next.f13862name;
                    bundle3.putString(FirebaseAnalytics.Param.ITEM_NAME, str3 == null || str3.length() == 0 ? str2 : next.f13862name);
                    int i12 = next.f13861id;
                    StringBuilder sb2 = new StringBuilder();
                    sb2.append(i12);
                    bundle3.putString("item_id", sb2.toString());
                    bundle3.putString(FirebaseAnalytics.Param.ITEM_CATEGORY, String.valueOf(next.menuSectionId));
                    bundle3.putString(FirebaseAnalytics.Param.PRICE, String.valueOf(next.getItemPrice()));
                    bundle3.putString(FirebaseAnalytics.Param.ITEM_BRAND, str == null || str.length() == 0 ? str2 : str);
                    try {
                        f11 += next.getItemPrice();
                    } catch (Exception e11) {
                        e11.printStackTrace();
                    }
                    bundle3.putString(FirebaseAnalytics.Param.QUANTITY, String.valueOf(next.getQuantity()));
                    bundle3.putString("currency", TalabatAdjust.getSelectedCurrencyCode());
                    arrayList.add(bundle3);
                }
                bundle2.putParcelableArrayList(FirebaseAnalytics.Param.ITEMS, arrayList);
                bundle2.putString("transaction_id", purchase.getTransactionId());
                if (f11 > 0.0f) {
                    d12 = (double) f11;
                } else {
                    String total = purchase.getTotal();
                    Intrinsics.checkNotNullExpressionValue(total, "purchase.total");
                    d12 = Double.parseDouble(total);
                }
                bundle2.putDouble("value", d12);
                String tax = purchase.getTax();
                Intrinsics.checkNotNullExpressionValue(tax, "purchase.tax");
                bundle2.putDouble("tax", Double.parseDouble(tax));
                bundle2.putString("currency", TalabatAdjust.getSelectedCurrencyCode());
                String voucherCode = purchase.getVoucherCode();
                bundle2.putString("coupon", voucherCode == null || voucherCode.length() == 0 ? str2 : purchase.getVoucherCode());
                String delCharges = purchase.getDelCharges();
                Intrinsics.checkNotNullExpressionValue(delCharges, "purchase.delCharges");
                bundle2.putDouble(FirebaseAnalytics.Param.SHIPPING, Double.parseDouble(delCharges));
            }
            bundle2.putString("locationAddress", getLocationAddress(context));
            bundle2.putString("locationLat", getLocationLatitude());
            bundle2.putString("locationLon", getLocationLongitude());
            String str4 = GlobalDataModel.SelectedCityName;
            bundle2.putString("locationCity", str4 == null || str4.length() == 0 ? str2 : GlobalDataModel.SelectedCityName);
            bundle2.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle2.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (polygonEvents != null) {
                bundle2.putBoolean("floodActive", polygonEvents.isActive);
                bundle2.putString("floodType", polygonEvents.eventType);
                bundle2.putString("floodMessage", polygonEvents.eventMsg);
                bundle2.putInt("floodValue", polygonEvents.eventValue);
            } else {
                bundle2.putString("floodActive", str2);
                bundle2.putString("floodType", str2);
                bundle2.putString("floodMessage", str2);
                bundle2.putString("floodValue", str2);
            }
            bundle2.putString("userPreferences", str2);
            bundle2.putString("userId", getUserId());
            bundle2.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_DELIVERY_ADDRESS_STATUS, str2);
            bundle2.putString("screenType", ScreenNames.getScreenType(ScreenNames.ORDER_CONFORMATION));
            bundle2.putString("screenName", ScreenNames.ORDER_CONFORMATION);
            bundle2.putString("userTimeStamp", getCurrentTime());
            bundle2.putString("shopListType", str2);
            bundle2.putString("deliveryProvider", pickupRiderDeliveryProvider(restaurant2));
            bundle2.putString("userTotalOrders", str2);
            String str5 = null;
            Integer valueOf = restaurant2 != null ? Integer.valueOf(restaurant2.itemPosition) : null;
            StringBuilder sb3 = new StringBuilder();
            sb3.append(valueOf);
            bundle2.putString("shopPosition", sb3.toString());
            bundle2.putString("shopType", listingType(restaurant2));
            Integer valueOf2 = restaurant2 != null ? Integer.valueOf(restaurant2.f13872id) : null;
            StringBuilder sb4 = new StringBuilder();
            sb4.append(valueOf2);
            bundle2.putString("chainId", sb4.toString());
            bundle2.putString("chainShops", str2);
            String str6 = restaurant2 != null ? restaurant2.f13873name : null;
            bundle2.putString("chainName", str6 == null || str6.length() == 0 ? str2 : restaurant2 != null ? restaurant2.f13873name : null);
            String str7 = restaurant2 != null ? restaurant2.branchName : null;
            bundle2.putString("shopName", str7 == null || str7.length() == 0 ? str2 : restaurant2 != null ? restaurant2.branchName : null);
            Integer valueOf3 = restaurant2 != null ? Integer.valueOf(restaurant2.branchId) : null;
            StringBuilder sb5 = new StringBuilder();
            sb5.append(valueOf3);
            bundle2.putString("shopId", sb5.toString());
            bundle2.putString("shopStatus", restaurant2 != null ? getShopStatus(restaurant2.statusType) : str2);
            String str8 = restaurant2 != null ? restaurant2.deliveryTime : null;
            bundle2.putString("shopDeliveryTime", str8 == null || str8.length() == 0 ? str2 : restaurant2 != null ? restaurant2.deliveryTime : null);
            bundle2.putString("shopDeliveryFee", String.valueOf(restaurant2 != null ? Float.valueOf(restaurant2.deliveryCharges) : null));
            bundle2.putString("shopWithOffer", getShopOffer(restaurant2));
            String str9 = GlobalDataModel.ShopClickOrigin;
            Intrinsics.checkNotNullExpressionValue(str9, "ShopClickOrigin");
            bundle2.putString("shopClickOrigin", str9.length() > 0 ? GlobalDataModel.ShopClickOrigin : str2);
            bundle2.putString("shopOfferType", getOfferType(restaurant2));
            String str10 = restaurant2 != null ? restaurant2.areaName : null;
            bundle2.putString("shopArea", str10 == null || str10.length() == 0 ? str2 : restaurant2 != null ? restaurant2.areaName : null);
            bundle2.putString("userOnlinePaymentMethods", str2);
            bundle2.putString("shopPaymentMethods", getPaymentMethods(restaurant2));
            bundle2.putString("orderPaymentMethod", purchase != null ? purchase.getPaymentMethod() : null);
            bundle2.putString("orderPickup", String.valueOf(restaurant2 != null ? restaurant.isPickup() : null));
            bundle2.putString("orderPreorder", str2);
            bundle2.putString("transactionType", (purchase == null || !purchase.isReorder()) ? "acquisition" : ScreenNames.SCREEN_TYPE_REORDER);
            String transactionId = purchase != null ? purchase.getTransactionId() : null;
            bundle2.putString("transactionId", transactionId == null || transactionId.length() == 0 ? str2 : purchase != null ? purchase.getTransactionId() : null);
            String displayOrderId = purchase != null ? purchase.getDisplayOrderId() : null;
            bundle2.putString("orderId", displayOrderId == null || displayOrderId.length() == 0 ? str2 : purchase != null ? purchase.getDisplayOrderId() : null);
            bundle2.putString("shopDeliveryFee", String.valueOf(Cart.getInstance().getDeliveryCharges()));
            bundle2.putString("surchargeValue", TalabatGTMKt.getSurchargeValue());
            bundle2.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
            bundle2.putString("orderDate", str2);
            bundle2.putString("wasInvited", str2);
            bundle2.putString("shopMainCuisine", (restaurant2 == null || !restaurant.hasCusine()) ? str2 : restaurant.GACuisineString());
            bundle2.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
            String voucherAmount = purchase != null ? purchase.getVoucherAmount() : null;
            bundle2.putString(GrowthTrackerConstants.COUPON_VALUE, voucherAmount == null || voucherAmount.length() == 0 ? str2 : purchase != null ? purchase.getVoucherAmount() : null);
            bundle2.putString(ShopDetailsLoadedEvent.SHOP_WITH_IMAGES, str2);
            bundle2.putString(ShopDetailsLoadedEvent.MENU_CATEGORY_NUMBER, getRestaurantMenuSections().size() > 0 ? String.valueOf(getRestaurantMenuSections().size()) : "0");
            bundle2.putString("userOnlinePaymentMethods", "credit:" + getTalabatCreditBalance());
            bundle2.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_EXPEDITION_TYPE, "delivery");
            bundle2.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_CONTACTLESS_DELIVERY, z11 ? "contactless" : "regular");
            if ((purchase != null ? purchase.getOfferCampaignId() : null) != null) {
                str2 = purchase != null ? purchase.getOfferCampaignId() : null;
            }
            bundle2.putString(ShopDetailsLoadedEvent.OFFER_CAMPAIGN_ID, str2);
            if (purchase != null) {
                str5 = purchase.getOfferVoucherId();
            }
            bundle2.putString("offerVoucherId", str5);
            bundle2.putString("customerCode", String.valueOf(i11));
            if (d11 != null) {
                bundle2.putDouble("riderTipValue", d11.doubleValue());
            }
            bundle2.putString(ShopDetailsLoadedEvent.OFFER_CAMPAIGN_ID, getAppliedCampaignIds());
        }

        public final void setTalabatFirebase(@NotNull ITalabatFirebase iTalabatFirebase) {
            Intrinsics.checkNotNullParameter(iTalabatFirebase, "<set-?>");
            TalabatGTM.talabatFirebase = iTalabatFirebase;
        }

        public final void shopListLoaded(@NotNull Context context, @Nullable ArrayList<Restaurant> arrayList, @Nullable String str, @Nullable String str2, @Nullable String str3, boolean z11, @Nullable String str4, @Nullable String str5, @Nullable String str6, @Nullable String str7, boolean z12, int i11, int i12, @Nullable String str8, @Nullable PolygonEvents polygonEvents, @NotNull String str9, @Nullable HashMap<String, String> hashMap, @Nullable String str10, @NotNull ShopClickedEvent.EventOriginSource eventOriginSource, @Nullable Boolean bool, @Nullable Boolean bool2, boolean z13) {
            int i13;
            boolean z14;
            boolean z15;
            boolean z16;
            String str11;
            String str12;
            String str13;
            String str14;
            String str15;
            String str16;
            String str17;
            ArrayList<Restaurant> arrayList2 = arrayList;
            int i14 = i11;
            int i15 = i12;
            PolygonEvents polygonEvents2 = polygonEvents;
            String str18 = str9;
            ShopClickedEvent.EventOriginSource eventOriginSource2 = eventOriginSource;
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str18, com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_LIST_VIEW_TYPE);
            Intrinsics.checkNotNullParameter(eventOriginSource2, "eventOriginSource");
            if (arrayList2 != null) {
                Iterator<Restaurant> it = arrayList.iterator();
                z16 = false;
                z15 = false;
                z14 = false;
                i13 = 0;
                while (it.hasNext()) {
                    Restaurant next = it.next();
                    if (next.isUpSelling) {
                        i13++;
                    }
                    int i16 = next.shopType;
                    if (i16 == 1) {
                        z16 = true;
                    } else if (i16 == 0) {
                        z15 = true;
                    } else if (i16 == 3) {
                        z14 = true;
                    }
                }
            } else {
                z16 = false;
                z15 = false;
                z14 = false;
                i13 = 0;
            }
            String str19 = z15 ? StoreInfoTrackingProvider.SHOP_TYPE_RESTAURANT : "";
            if (z16) {
                if (!Intrinsics.areEqual((Object) str19, (Object) "")) {
                    str19 = str19 + ",";
                }
                str19 = str19 + "groceries";
            }
            if (z14) {
                if (!Intrinsics.areEqual((Object) str19, (Object) "")) {
                    str19 = str19 + ",";
                }
                str19 = str19 + StoreInfoTrackingProvider.SHOP_TYPE_FLOWERS;
            }
            if (z13) {
                if (!Intrinsics.areEqual((Object) str19, (Object) "")) {
                    str19 = str19 + ",";
                }
                str19 = str19 + "pickup_vendor_list";
            }
            String str20 = z11 ? ShopListUpdatedEvent.EVENT_NAME : ShopListLoadedEvent.EVENT_NAME;
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str21 = GlobalDataModel.SelectedCityName;
            String str22 = "N/A";
            if (str21 == null || str21.length() == 0) {
                str11 = "pickup_vendor_list";
                str12 = str22;
            } else {
                str12 = GlobalDataModel.SelectedCityName;
                str11 = "pickup_vendor_list";
            }
            bundle.putString("locationCity", str12);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            String str23 = str3;
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOP_CATEGORY_SELECTED_QUANTITY, StringsKt__StringsJVMKt.equals(str23, TtmlNode.COMBINE_ALL, true) ? "0" : "1");
            ShopClickedEvent shopClickedEvent = ShopClickedEvent.INSTANCE;
            if (shopClickedEvent.toShopFilterSelected$com_talabat_talabatlib_talabatlib(eventOriginSource2) != null) {
                str23 = shopClickedEvent.toShopFilterSelected$com_talabat_talabatlib_talabatlib(eventOriginSource2);
            }
            bundle.putString("shopFilteringSelected", str23);
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOP_ATTRIBUTES_SELECTED, str22);
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOPS_OFFERS, "sub_free_delivery:" + 0);
            bundle.putString("searchTerm", str22);
            bundle.putString("userId", getUserId());
            if (!z13) {
                str14 = ScreenNames.getScreenType("Restaurant List Screen");
                str13 = "Restaurant List Screen";
            } else {
                str13 = "Restaurant List Screen";
                str14 = str11;
            }
            bundle.putString("screenType", str14);
            bundle.putString("screenName", !z13 ? str13 : str11);
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOP_LIST_TRIGGER, str7 == null || str7.length() == 0 ? str22 : str7);
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOPS_PREORDER, preOrderRestaurantsCount(arrayList2));
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOP_OFFERS_SELECTED, str22);
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOPS_OPEN, String.valueOf(i15 != 0 ? z12 ? i15 >= i14 ? i15 - i14 : i14 - i15 : i15 : 0));
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOP_CLOSED_NO_PREORDER, str22);
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOPS_CLOSED_TODAY, str22);
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SERVICE_AREA_DELIVERY, str22);
            bundle.putString("listingPageType", str4 == null || str4.length() == 0 ? str22 : str4);
            if (str19 == null || str19.length() == 0) {
                str19 = str22;
            }
            bundle.putString("shopListType", str19);
            bundle.putString("shopsIds", str8 == null || str8.length() == 0 ? str22 : str8);
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_CHAIN_IDS, str22);
            bundle.putString("deliveryProvider", str22);
            bundle.putString("shopCategorySelected", eventOriginSource.getShopCategory());
            if (polygonEvents2 != null) {
                str15 = str20;
                bundle.putBoolean("floodActive", polygonEvents2.isActive);
                bundle.putString("floodType", polygonEvents2.eventType);
                bundle.putString("floodMessage", polygonEvents2.eventMsg);
                bundle.putInt("floodValue", polygonEvents2.eventValue);
            } else {
                str15 = str20;
                bundle.putString("floodActive", str22);
                bundle.putString("floodType", str22);
                bundle.putString("floodMessage", str22);
                bundle.putString("floodValue", str22);
            }
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOP_RECOMMENDED_QUANTITY, String.valueOf(i11));
            bundle.putString("shopSortingSelected", shopClickedEvent.toShopSortingSelected$com_talabat_talabatlib_talabatlib(eventOriginSource2));
            Integer num = null;
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOP_QUANTITY_SHOWN, String.valueOf(arrayList2 != null ? Integer.valueOf(arrayList.size()) : null));
            if (arrayList2 != null) {
                num = Integer.valueOf(arrayList.size());
            }
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOP_QUANTITY_TOTAL, String.valueOf(num));
            if (str5 == null || str5.length() == 0) {
                str16 = str22;
            } else {
                str16 = str5.toLowerCase();
                Intrinsics.checkNotNullExpressionValue(str16, "this as java.lang.String).toLowerCase()");
            }
            bundle.putString("channelIndex", str16);
            if (str6 == null || str6.length() == 0) {
                str17 = str22;
            } else {
                str17 = str6.toLowerCase();
                Intrinsics.checkNotNullExpressionValue(str17, "this as java.lang.String).toLowerCase()");
            }
            bundle.putString("channel", str17);
            bundle.putString("shopCokeUpsell", String.valueOf(i13 > 0));
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_SHOP_COKE_UPSELL_QUANTITY, String.valueOf(i13));
            bundle.putString("userOnlinePaymentMethods", "credit:" + getTalabatCreditBalance());
            bundle.putString(com.talabat.feature.pickup.data.events.ConstantsKt.LOADED_LIST_VIEW_TYPE, str18);
            bundle.putString("listingPageType", z13 ? "pickup" : "rider");
            if (str10 != null) {
                if (!(str10.length() == 0)) {
                    str22 = str10;
                }
            }
            bundle.putString("eventOrigin", str22);
            if (hashMap != null) {
                for (Map.Entry next2 : hashMap.entrySet()) {
                    bundle.putString((String) next2.getKey(), (String) next2.getValue());
                }
            }
            addTelcoIfNeeded(bool2, bool, bundle);
            if (!z11) {
                PerformanceTracker performanceTracker = PerformanceTracker.INSTANCE;
                performanceTracker.addAppFlowTraceAttribute("appStartToInteractive", "Restaurants");
                performanceTracker.addAppFlowTraceAttribute("verticalClickToVendorLoaded", getShopTypeForTracking(arrayList2));
                performanceTracker.stopTrace("appStartToInteractive");
                performanceTracker.stopTrace("verticalClickToVendorLoaded");
            }
            getTalabatFirebase().dispatchEvent(context, str15, bundle);
        }

        @NotNull
        public final String shopListType(int i11) {
            switch (i11) {
                case 0:
                    return StoreInfoTrackingProvider.SHOP_TYPE_RESTAURANT;
                case 1:
                    return "groceries";
                case 2:
                    return StoreInfoTrackingProvider.SHOP_TYPE_PHARMACY;
                case 3:
                    return StoreInfoTrackingProvider.SHOP_TYPE_FLOWERS;
                case 4:
                    return StoreInfoTrackingProvider.SHOP_TYPE_ELECTRONICS;
                case 5:
                    return StoreInfoTrackingProvider.SHOP_TYPE_PET_SHOP;
                case 6:
                    return StoreInfoTrackingProvider.SHOP_TYPE_COSMETIC;
                default:
                    return "N/A";
            }
        }

        public final void sideMenuOpened(@NotNull Context context, @Nullable String str) {
            String str2;
            boolean z11;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            if (GlobalDataModel.PageOpenFromHelpCenter) {
                str2 = "help_center";
            } else {
                str2 = ScreenNames.getScreenType(str);
            }
            bundle.putString("screenType", str2);
            boolean z12 = false;
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            String str3 = "N/A";
            if (z11) {
                str = str3;
            }
            bundle.putString("screenName", str);
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str4 = GlobalDataModel.SelectedCityName;
            if (str4 == null || str4.length() == 0) {
                z12 = true;
            }
            if (!z12) {
                str3 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str3);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("userId", getUserId());
            bundle.putString("userTimeStamp", getCurrentTime());
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            TalabatFirebase.Companion.dispatchEvent(context, "navigation_clicked", bundle);
        }

        public final void sideMenuOptionSelected(@NotNull Context context, @Nullable String str) {
            boolean z11;
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str3 = GlobalDataModel.SelectedCityName;
            if (str3 == null || str3.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            } else {
                str2 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str2);
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("userId", getUserId());
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (!Intrinsics.areEqual((Object) str, (Object) ScreenNames.LIVE_SUPPORT)) {
                bundle.putString("screenType", "side_menu");
                bundle.putString("screenName", BnplNavigationOptionLoadedEventKt.VALUE_SCREEN_NAME_NAVIGATION);
                bundle.putString("navigationOption", str);
                TalabatFirebase.Companion.dispatchEvent(context, "navigation_option_clicked", bundle);
                return;
            }
            bundle.putString("screenType", "help_center");
            bundle.putString("screenName", "Help");
            TalabatFirebase.Companion.dispatchEvent(context, "contact_option_clicked", bundle);
        }

        /* JADX WARNING: Removed duplicated region for block: B:100:0x01cb  */
        /* JADX WARNING: Removed duplicated region for block: B:101:0x01cd  */
        /* JADX WARNING: Removed duplicated region for block: B:103:0x01d0  */
        /* JADX WARNING: Removed duplicated region for block: B:104:0x01d2  */
        /* JADX WARNING: Removed duplicated region for block: B:109:0x01e2  */
        /* JADX WARNING: Removed duplicated region for block: B:110:0x01e4  */
        /* JADX WARNING: Removed duplicated region for block: B:112:0x01e7  */
        /* JADX WARNING: Removed duplicated region for block: B:113:0x01e9  */
        /* JADX WARNING: Removed duplicated region for block: B:118:0x0204  */
        /* JADX WARNING: Removed duplicated region for block: B:119:0x0206  */
        /* JADX WARNING: Removed duplicated region for block: B:121:0x0209  */
        /* JADX WARNING: Removed duplicated region for block: B:122:0x020b  */
        /* JADX WARNING: Removed duplicated region for block: B:125:0x021a  */
        /* JADX WARNING: Removed duplicated region for block: B:126:0x0231  */
        /* JADX WARNING: Removed duplicated region for block: B:131:0x024a  */
        /* JADX WARNING: Removed duplicated region for block: B:132:0x024c  */
        /* JADX WARNING: Removed duplicated region for block: B:134:0x024f  */
        /* JADX WARNING: Removed duplicated region for block: B:135:0x0251  */
        /* JADX WARNING: Removed duplicated region for block: B:140:0x0263  */
        /* JADX WARNING: Removed duplicated region for block: B:141:0x0265  */
        /* JADX WARNING: Removed duplicated region for block: B:143:0x0268  */
        /* JADX WARNING: Removed duplicated region for block: B:144:0x026a  */
        /* JADX WARNING: Removed duplicated region for block: B:149:0x0294  */
        /* JADX WARNING: Removed duplicated region for block: B:150:0x0296  */
        /* JADX WARNING: Removed duplicated region for block: B:152:0x0299  */
        /* JADX WARNING: Removed duplicated region for block: B:153:0x029b  */
        /* JADX WARNING: Removed duplicated region for block: B:158:0x02b6  */
        /* JADX WARNING: Removed duplicated region for block: B:159:0x02b8  */
        /* JADX WARNING: Removed duplicated region for block: B:161:0x02bb  */
        /* JADX WARNING: Removed duplicated region for block: B:162:0x02bd  */
        /* JADX WARNING: Removed duplicated region for block: B:167:0x02cd  */
        /* JADX WARNING: Removed duplicated region for block: B:168:0x02cf  */
        /* JADX WARNING: Removed duplicated region for block: B:171:0x02d5  */
        /* JADX WARNING: Removed duplicated region for block: B:172:0x02d7  */
        /* JADX WARNING: Removed duplicated region for block: B:179:0x02f0  */
        /* JADX WARNING: Removed duplicated region for block: B:180:0x02f2  */
        /* JADX WARNING: Removed duplicated region for block: B:182:0x02f5  */
        /* JADX WARNING: Removed duplicated region for block: B:183:0x02f7  */
        /* JADX WARNING: Removed duplicated region for block: B:189:0x030e  */
        /* JADX WARNING: Removed duplicated region for block: B:190:0x0310  */
        /* JADX WARNING: Removed duplicated region for block: B:192:0x0313  */
        /* JADX WARNING: Removed duplicated region for block: B:193:0x0315  */
        /* JADX WARNING: Removed duplicated region for block: B:196:0x0345  */
        /* JADX WARNING: Removed duplicated region for block: B:197:0x034a  */
        /* JADX WARNING: Removed duplicated region for block: B:202:0x0379  */
        /* JADX WARNING: Removed duplicated region for block: B:203:0x037b  */
        /* JADX WARNING: Removed duplicated region for block: B:205:0x037e  */
        /* JADX WARNING: Removed duplicated region for block: B:206:0x0380  */
        /* JADX WARNING: Removed duplicated region for block: B:209:0x0394  */
        /* JADX WARNING: Removed duplicated region for block: B:62:0x011f  */
        /* JADX WARNING: Removed duplicated region for block: B:63:0x0122  */
        /* JADX WARNING: Removed duplicated region for block: B:66:0x014d  */
        /* JADX WARNING: Removed duplicated region for block: B:67:0x014f  */
        /* JADX WARNING: Removed duplicated region for block: B:69:0x0153  */
        /* JADX WARNING: Removed duplicated region for block: B:72:0x0161  */
        /* JADX WARNING: Removed duplicated region for block: B:73:0x0163  */
        /* JADX WARNING: Removed duplicated region for block: B:75:0x0166  */
        /* JADX WARNING: Removed duplicated region for block: B:76:0x016b  */
        /* JADX WARNING: Removed duplicated region for block: B:79:0x0180  */
        /* JADX WARNING: Removed duplicated region for block: B:80:0x0182  */
        /* JADX WARNING: Removed duplicated region for block: B:82:0x0186  */
        /* JADX WARNING: Removed duplicated region for block: B:85:0x019b  */
        /* JADX WARNING: Removed duplicated region for block: B:91:0x01aa  */
        /* JADX WARNING: Removed duplicated region for block: B:94:0x01ae  */
        /* JADX WARNING: Removed duplicated region for block: B:95:0x01b3  */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public final void swimlaneRestaurantClicked(@org.jetbrains.annotations.NotNull android.content.Context r17, @org.jetbrains.annotations.Nullable datamodels.Restaurant r18, @org.jetbrains.annotations.Nullable java.lang.String r19, @org.jetbrains.annotations.Nullable java.lang.String r20, @org.jetbrains.annotations.Nullable java.lang.String r21, @org.jetbrains.annotations.Nullable java.lang.String r22, @org.jetbrains.annotations.Nullable java.lang.String r23, @org.jetbrains.annotations.Nullable java.lang.String r24, @org.jetbrains.annotations.Nullable JsonModels.PolygonEvents r25, @org.jetbrains.annotations.NotNull datamodels.HomeSwimlanesTrackerData r26, @org.jetbrains.annotations.Nullable java.lang.String r27, boolean r28, int r29, int r30, @org.jetbrains.annotations.NotNull java.lang.String r31, @org.jetbrains.annotations.NotNull java.lang.String r32, int r33, @org.jetbrains.annotations.Nullable java.lang.String r34, @org.jetbrains.annotations.NotNull tracking.ShopClickedEvent.EventOriginSource r35, boolean r36) {
            /*
                r16 = this;
                r0 = r16
                r1 = r17
                r2 = r18
                r3 = r25
                r4 = r35
                java.lang.String r5 = "context"
                kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, r5)
                java.lang.String r5 = "homeSwimlanesTrackerData"
                r6 = r26
                kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r6, r5)
                java.lang.String r5 = "swimlaneVariation"
                r7 = r31
                kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, r5)
                java.lang.String r8 = "swimlaneStrategy"
                r9 = r32
                kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r9, r8)
                java.lang.String r10 = "eventSource"
                kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, r10)
                if (r2 != 0) goto L_0x002c
                return
            L_0x002c:
                android.os.Bundle r10 = new android.os.Bundle
                r10.<init>()
                boolean r11 = r2.isDiscountAvaialble
                if (r11 != 0) goto L_0x0040
                boolean r11 = r2.isPromotionAvailable
                if (r11 != 0) goto L_0x0040
                int r11 = r2.upsellId
                if (r11 == 0) goto L_0x003e
                goto L_0x0040
            L_0x003e:
                r11 = 0
                goto L_0x0041
            L_0x0040:
                r11 = 1
            L_0x0041:
                java.lang.StringBuilder r14 = new java.lang.StringBuilder
                r14.<init>()
                if (r36 == 0) goto L_0x004d
                java.lang.String r15 = "gem"
                r14.append(r15)
            L_0x004d:
                boolean r15 = r2.isDiscountAvaialble
                java.lang.String r12 = ","
                if (r15 == 0) goto L_0x0066
                int r15 = r14.length()
                if (r15 <= 0) goto L_0x005b
                r15 = 1
                goto L_0x005c
            L_0x005b:
                r15 = 0
            L_0x005c:
                if (r15 == 0) goto L_0x0061
                r14.append(r12)
            L_0x0061:
                java.lang.String r15 = "discount"
                r14.append(r15)
            L_0x0066:
                boolean r15 = r2.isPromotionAvailable
                if (r15 == 0) goto L_0x007d
                int r15 = r14.length()
                if (r15 <= 0) goto L_0x0072
                r15 = 1
                goto L_0x0073
            L_0x0072:
                r15 = 0
            L_0x0073:
                if (r15 == 0) goto L_0x0078
                r14.append(r12)
            L_0x0078:
                java.lang.String r15 = "promotion"
                r14.append(r15)
            L_0x007d:
                int r15 = r2.upsellId
                if (r15 == 0) goto L_0x0094
                int r15 = r14.length()
                if (r15 <= 0) goto L_0x0089
                r15 = 1
                goto L_0x008a
            L_0x0089:
                r15 = 0
            L_0x008a:
                if (r15 == 0) goto L_0x008f
                r14.append(r12)
            L_0x008f:
                java.lang.String r12 = r2.upsellName
                r14.append(r12)
            L_0x0094:
                java.lang.String r12 = "locationAddress"
                java.lang.String r15 = r16.getLocationAddress(r17)
                r10.putString(r12, r15)
                java.lang.String r12 = "locationLat"
                java.lang.String r15 = r16.getLocationLatitude()
                r10.putString(r12, r15)
                java.lang.String r12 = "locationLon"
                java.lang.String r15 = r16.getLocationLongitude()
                r10.putString(r12, r15)
                java.lang.String r12 = com.talabat.helpers.GlobalDataModel.SelectedCityName
                if (r12 == 0) goto L_0x00bc
                int r12 = r12.length()
                if (r12 != 0) goto L_0x00ba
                goto L_0x00bc
            L_0x00ba:
                r12 = 0
                goto L_0x00bd
            L_0x00bc:
                r12 = 1
            L_0x00bd:
                java.lang.String r15 = "N/A"
                if (r12 == 0) goto L_0x00c3
                r12 = r15
                goto L_0x00c5
            L_0x00c3:
                java.lang.String r12 = com.talabat.helpers.GlobalDataModel.SelectedCityName
            L_0x00c5:
                java.lang.String r13 = "locationCity"
                r10.putString(r13, r12)
                int r12 = com.talabat.helpers.GlobalDataModel.SelectedAreaId
                java.lang.String r12 = java.lang.String.valueOf(r12)
                java.lang.String r13 = "locationArea"
                r10.putString(r13, r12)
                java.lang.String r12 = "locationCountry"
                java.lang.String r13 = tracking.TalabatAdjust.getSelectedCountryIso()
                r10.putString(r12, r13)
                java.lang.String r12 = "shopCategorySelected"
                r10.putString(r12, r15)
                java.lang.String r12 = "shopPosition"
                java.lang.String r13 = java.lang.String.valueOf(r33)
                r10.putString(r12, r13)
                java.lang.String r12 = "shopSponsoring"
                java.lang.String r13 = r16.getShopSponsoring()
                r10.putString(r12, r13)
                java.lang.String r12 = "shopType"
                java.lang.String r13 = r0.listingType(r2)
                r10.putString(r12, r13)
                java.lang.String r12 = "shopListType"
                r10.putString(r12, r15)
                java.lang.String r12 = "shopPaymentMethods"
                java.lang.String r13 = r0.getPaymentMethods(r2)
                r10.putString(r12, r13)
                if (r27 == 0) goto L_0x011c
                int r12 = r27.length()
                if (r12 <= 0) goto L_0x0116
                r12 = 1
                goto L_0x0117
            L_0x0116:
                r12 = 0
            L_0x0117:
                r13 = 1
                if (r12 != r13) goto L_0x011c
                r13 = 1
                goto L_0x011d
            L_0x011c:
                r13 = 0
            L_0x011d:
                if (r13 == 0) goto L_0x0122
                r12 = r27
                goto L_0x0123
            L_0x0122:
                r12 = r15
            L_0x0123:
                java.lang.String r13 = "swimlaneTitle"
                r10.putString(r13, r12)
                java.lang.String r12 = r26.getSwimlaneTitles()
                java.lang.String r13 = "swimlaneTitleList"
                r10.putString(r13, r12)
                int r12 = r26.getSwimlanesCount()
                java.lang.String r12 = java.lang.String.valueOf(r12)
                java.lang.String r13 = "swimlaneTotal"
                r10.putString(r13, r12)
                java.lang.String r12 = "swimlanePosition"
                java.lang.String r13 = java.lang.String.valueOf(r29)
                r10.putString(r12, r13)
                int r12 = r32.length()
                if (r12 <= 0) goto L_0x014f
                r13 = 1
                goto L_0x0150
            L_0x014f:
                r13 = 0
            L_0x0150:
                if (r13 == 0) goto L_0x0153
                goto L_0x0154
            L_0x0153:
                r9 = r15
            L_0x0154:
                r10.putString(r8, r9)
                java.lang.String r8 = r26.getStrategiesList()
                int r8 = r8.length()
                if (r8 <= 0) goto L_0x0163
                r13 = 1
                goto L_0x0164
            L_0x0163:
                r13 = 0
            L_0x0164:
                if (r13 == 0) goto L_0x016b
                java.lang.String r8 = r26.getStrategiesList()
                goto L_0x016c
            L_0x016b:
                r8 = r15
            L_0x016c:
                java.lang.String r9 = "swimlaneStrategyList"
                r10.putString(r9, r8)
                java.lang.String r8 = "swimlaneLength"
                java.lang.String r9 = java.lang.String.valueOf(r30)
                r10.putString(r8, r9)
                int r8 = r31.length()
                if (r8 <= 0) goto L_0x0182
                r13 = 1
                goto L_0x0183
            L_0x0182:
                r13 = 0
            L_0x0183:
                if (r13 == 0) goto L_0x0186
                goto L_0x0187
            L_0x0186:
                r7 = r15
            L_0x0187:
                r10.putString(r5, r7)
                int r5 = r2.itemDisplayed
                java.lang.String r5 = java.lang.String.valueOf(r5)
                java.lang.String r7 = "swimlaneTilesDisplayed"
                r10.putString(r7, r5)
                java.lang.String r5 = r26.getSwimlaneRequestId()
                if (r5 == 0) goto L_0x01aa
                int r5 = r5.length()
                if (r5 <= 0) goto L_0x01a4
                r5 = 1
                r13 = 1
                goto L_0x01a6
            L_0x01a4:
                r5 = 1
                r13 = 0
            L_0x01a6:
                if (r13 != r5) goto L_0x01ab
                r13 = r5
                goto L_0x01ac
            L_0x01aa:
                r5 = 1
            L_0x01ab:
                r13 = 0
            L_0x01ac:
                if (r13 == 0) goto L_0x01b3
                java.lang.String r6 = r26.getSwimlaneRequestId()
                goto L_0x01b4
            L_0x01b3:
                r6 = r15
            L_0x01b4:
                java.lang.String r8 = "swimlaneRequestId"
                r10.putString(r8, r6)
                java.lang.String r6 = "userId"
                java.lang.String r8 = r16.getUserId()
                r10.putString(r6, r8)
                if (r23 == 0) goto L_0x01cd
                int r6 = r23.length()
                if (r6 != 0) goto L_0x01cb
                goto L_0x01cd
            L_0x01cb:
                r13 = 0
                goto L_0x01ce
            L_0x01cd:
                r13 = r5
            L_0x01ce:
                if (r13 == 0) goto L_0x01d2
                r6 = r15
                goto L_0x01d4
            L_0x01d2:
                r6 = r23
            L_0x01d4:
                java.lang.String r8 = "screenType"
                r10.putString(r8, r6)
                if (r19 == 0) goto L_0x01e4
                int r6 = r19.length()
                if (r6 != 0) goto L_0x01e2
                goto L_0x01e4
            L_0x01e2:
                r13 = 0
                goto L_0x01e5
            L_0x01e4:
                r13 = r5
            L_0x01e5:
                if (r13 == 0) goto L_0x01e9
                r6 = r15
                goto L_0x01eb
            L_0x01e9:
                r6 = r19
            L_0x01eb:
                java.lang.String r8 = "screenName"
                r10.putString(r8, r6)
                java.lang.String r6 = "userTimeStamp"
                java.lang.String r8 = r16.getCurrentTime()
                r10.putString(r6, r8)
                java.lang.String r6 = r2.deliveryTime
                if (r6 == 0) goto L_0x0206
                int r6 = r6.length()
                if (r6 != 0) goto L_0x0204
                goto L_0x0206
            L_0x0204:
                r13 = 0
                goto L_0x0207
            L_0x0206:
                r13 = r5
            L_0x0207:
                if (r13 == 0) goto L_0x020b
                r6 = r15
                goto L_0x020d
            L_0x020b:
                java.lang.String r6 = r2.deliveryTime
            L_0x020d:
                java.lang.String r8 = "shopDeliveryTime"
                r10.putString(r8, r6)
                java.lang.String r6 = "floodMessage"
                java.lang.String r8 = "floodType"
                java.lang.String r9 = "floodActive"
                if (r3 == 0) goto L_0x0231
                boolean r12 = r3.isActive
                r10.putBoolean(r9, r12)
                java.lang.String r9 = r3.eventType
                r10.putString(r8, r9)
                java.lang.String r8 = r3.eventMsg
                r10.putString(r6, r8)
                java.lang.String r6 = "floodValue"
                int r3 = r3.eventValue
                r10.putInt(r6, r3)
                goto L_0x023a
            L_0x0231:
                r10.putString(r9, r15)
                r10.putString(r8, r15)
                r10.putString(r6, r15)
            L_0x023a:
                java.lang.String r3 = "shopTilesDisplayed"
                r10.putString(r3, r15)
                java.lang.String r3 = r2.areaName
                if (r3 == 0) goto L_0x024c
                int r3 = r3.length()
                if (r3 != 0) goto L_0x024a
                goto L_0x024c
            L_0x024a:
                r13 = 0
                goto L_0x024d
            L_0x024c:
                r13 = r5
            L_0x024d:
                if (r13 == 0) goto L_0x0251
                r3 = r15
                goto L_0x0253
            L_0x0251:
                java.lang.String r3 = r2.areaName
            L_0x0253:
                java.lang.String r6 = "shopArea"
                r10.putString(r6, r3)
                java.lang.String r3 = r2.f13873name
                if (r3 == 0) goto L_0x0265
                int r3 = r3.length()
                if (r3 != 0) goto L_0x0263
                goto L_0x0265
            L_0x0263:
                r13 = 0
                goto L_0x0266
            L_0x0265:
                r13 = r5
            L_0x0266:
                if (r13 == 0) goto L_0x026a
                r3 = r15
                goto L_0x026c
            L_0x026a:
                java.lang.String r3 = r2.f13873name
            L_0x026c:
                java.lang.String r6 = "chainName"
                r10.putString(r6, r3)
                int r3 = r2.f13872id
                java.lang.StringBuilder r6 = new java.lang.StringBuilder
                r6.<init>()
                r6.append(r3)
                java.lang.String r3 = r6.toString()
                java.lang.String r6 = "chainId"
                r10.putString(r6, r3)
                java.lang.String r3 = "chainShops"
                r10.putString(r3, r15)
                java.lang.String r3 = r2.branchName
                if (r3 == 0) goto L_0x0296
                int r3 = r3.length()
                if (r3 != 0) goto L_0x0294
                goto L_0x0296
            L_0x0294:
                r13 = 0
                goto L_0x0297
            L_0x0296:
                r13 = r5
            L_0x0297:
                if (r13 == 0) goto L_0x029b
                r3 = r15
                goto L_0x029d
            L_0x029b:
                java.lang.String r3 = r2.branchName
            L_0x029d:
                java.lang.String r6 = "shopName"
                r10.putString(r6, r3)
                int r3 = r2.statusType
                java.lang.String r3 = r0.getShopStatus(r3)
                java.lang.String r6 = "shopStatus"
                r10.putString(r6, r3)
                if (r34 == 0) goto L_0x02b8
                int r3 = r34.length()
                if (r3 != 0) goto L_0x02b6
                goto L_0x02b8
            L_0x02b6:
                r13 = 0
                goto L_0x02b9
            L_0x02b8:
                r13 = r5
            L_0x02b9:
                if (r13 == 0) goto L_0x02bd
                r3 = r15
                goto L_0x02bf
            L_0x02bd:
                r3 = r34
            L_0x02bf:
                java.lang.String r6 = "shopClickOrigin"
                r10.putString(r6, r3)
                if (r24 == 0) goto L_0x02cf
                int r3 = r24.length()
                if (r3 != 0) goto L_0x02cd
                goto L_0x02cf
            L_0x02cd:
                r13 = 0
                goto L_0x02d0
            L_0x02cf:
                r13 = r5
            L_0x02d0:
                r3 = 0
                java.lang.String r6 = "this as java.lang.String).toLowerCase()"
                if (r13 == 0) goto L_0x02d7
                r8 = r15
                goto L_0x02e2
            L_0x02d7:
                if (r24 == 0) goto L_0x02e1
                java.lang.String r8 = r24.toLowerCase()
                kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r8, r6)
                goto L_0x02e2
            L_0x02e1:
                r8 = r3
            L_0x02e2:
                java.lang.String r9 = "searchTerm"
                r10.putString(r9, r8)
                if (r21 == 0) goto L_0x02f2
                int r8 = r21.length()
                if (r8 != 0) goto L_0x02f0
                goto L_0x02f2
            L_0x02f0:
                r13 = 0
                goto L_0x02f3
            L_0x02f2:
                r13 = r5
            L_0x02f3:
                if (r13 == 0) goto L_0x02f7
                r3 = r15
                goto L_0x0300
            L_0x02f7:
                if (r21 == 0) goto L_0x0300
                java.lang.String r3 = r21.toLowerCase()
                kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r3, r6)
            L_0x0300:
                java.lang.String r8 = "channelIndex"
                r10.putString(r8, r3)
                if (r22 == 0) goto L_0x0310
                int r3 = r22.length()
                if (r3 != 0) goto L_0x030e
                goto L_0x0310
            L_0x030e:
                r13 = 0
                goto L_0x0311
            L_0x0310:
                r13 = r5
            L_0x0311:
                if (r13 == 0) goto L_0x0315
                r3 = r15
                goto L_0x031c
            L_0x0315:
                java.lang.String r3 = r22.toLowerCase()
                kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r3, r6)
            L_0x031c:
                java.lang.String r6 = "channel"
                r10.putString(r6, r3)
                boolean r3 = r2.isRecommendation
                java.lang.String r3 = java.lang.String.valueOf(r3)
                java.lang.String r6 = "shopRecommented"
                r10.putString(r6, r3)
                int r3 = r2.branchId
                java.lang.StringBuilder r6 = new java.lang.StringBuilder
                r6.<init>()
                r6.append(r3)
                java.lang.String r3 = r6.toString()
                java.lang.String r6 = "shopId"
                r10.putString(r6, r3)
                boolean r3 = r18.hasCusine()
                if (r3 == 0) goto L_0x034a
                java.lang.String r3 = r18.GACuisineString()
                goto L_0x034b
            L_0x034a:
                r3 = r15
            L_0x034b:
                java.lang.String r6 = "shopMainCuisine"
                r10.putString(r6, r3)
                java.lang.String r3 = "shopWithOffer"
                java.lang.String r6 = java.lang.String.valueOf(r11)
                r10.putString(r3, r6)
                java.lang.String r3 = "shopOfferType"
                java.lang.String r6 = r14.toString()
                r10.putString(r3, r6)
                java.lang.String r3 = "deliveryProvider"
                java.lang.String r6 = r0.restaurantType(r2)
                r10.putString(r3, r6)
                java.lang.String r3 = "clickOrigin"
                r10.putString(r3, r15)
                if (r20 == 0) goto L_0x037b
                int r3 = r20.length()
                if (r3 != 0) goto L_0x0379
                goto L_0x037b
            L_0x0379:
                r12 = 0
                goto L_0x037c
            L_0x037b:
                r12 = r5
            L_0x037c:
                if (r12 == 0) goto L_0x0380
                r3 = r15
                goto L_0x0382
            L_0x0380:
                r3 = r20
            L_0x0382:
                java.lang.String r5 = "searchString"
                r10.putString(r5, r3)
                java.lang.String r3 = java.lang.String.valueOf(r33)
                r10.putString(r7, r3)
                java.lang.String r3 = com.talabat.core.network.midas.MidasHttpInterceptorKt.getMidasRequestId()
                if (r3 != 0) goto L_0x0396
                java.lang.String r3 = ""
            L_0x0396:
                java.lang.String r5 = "midasRequestId"
                r10.putString(r5, r3)
                tracking.ShopClickedEvent r3 = tracking.ShopClickedEvent.INSTANCE
                java.lang.String r3 = r3.toEventData$com_talabat_talabatlib_talabatlib(r4)
                java.lang.String r4 = "eventOrigin"
                r10.putString(r4, r3)
                datamodels.Restaurant$PremiumType r3 = r2.premiumType
                if (r3 == 0) goto L_0x03b0
                java.lang.String r3 = r3.token
                if (r3 != 0) goto L_0x03af
                goto L_0x03b0
            L_0x03af:
                r15 = r3
            L_0x03b0:
                java.lang.String r3 = "ncrRequestToken"
                r10.putString(r3, r15)
                java.lang.String r3 = "listingPageType"
                java.lang.String r2 = r18.deliveryMode()
                r10.putString(r3, r2)
                tracking.gtm.ITalabatFirebase r2 = r16.getTalabatFirebase()
                java.lang.String r3 = "shop_clicked"
                r2.dispatchEvent(r1, r3, r10)
                r0.trackAdExEvent(r3, r10)
                return
            */
            throw new UnsupportedOperationException("Method not decompiled: tracking.gtm.TalabatGTM.Companion.swimlaneRestaurantClicked(android.content.Context, datamodels.Restaurant, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, JsonModels.PolygonEvents, datamodels.HomeSwimlanesTrackerData, java.lang.String, boolean, int, int, java.lang.String, java.lang.String, int, java.lang.String, tracking.ShopClickedEvent$EventOriginSource, boolean):void");
        }

        public final void termsAndConditionClicked(@NotNull Context context, @Nullable String str) {
            boolean z11;
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            } else {
                str2 = str.toLowerCase();
                Intrinsics.checkNotNullExpressionValue(str2, "this as java.lang.String).toLowerCase()");
            }
            bundle.putString("channel", str2);
            TalabatFirebase.Companion.dispatchEvent(context, "terms_conditions_clicked", bundle);
        }

        public final void termsAndConditionClosed(@NotNull Context context, @Nullable String str) {
            boolean z11;
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            if (str == null || str.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            } else {
                str2 = str.toLowerCase();
                Intrinsics.checkNotNullExpressionValue(str2, "this as java.lang.String).toLowerCase()");
            }
            bundle.putString("channel", str2);
            TalabatFirebase.Companion.dispatchEvent(context, "terms_conditions_closed", bundle);
        }

        public final void tgoListingShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void tgoToggleSelected(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void toggleShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void tokenRemoved(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void tokenSelected(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void tokenTransactionFailed(@NotNull Context context, @Nullable String str, int i11, @Nullable String str2, boolean z11, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void trackEvent(@NotNull Context context, @NotNull String str, @NotNull Map<String, String> map) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str, "eventName");
            Intrinsics.checkNotNullParameter(map, Param.MAP);
            Bundle bundle = new Bundle();
            for (Map.Entry next : map.entrySet()) {
                bundle.putString((String) next.getKey(), (String) next.getValue());
            }
            TalabatFirebase.Companion.dispatchEvent(context, str, bundle);
            if (Intrinsics.areEqual((Object) str, (Object) "featured_product_clicked") || Intrinsics.areEqual((Object) str, (Object) "featured_product_shown")) {
                trackAdExEvent(str, bundle);
            }
        }

        public final void trackOrderClicked(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void trackorderIntermediateClosed(@NotNull Context context, boolean z11) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void trackorderIntermediateShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void transactionFailed(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4, @Nullable Restaurant restaurant, boolean z11, @NotNull String str5, @NotNull String str6, int i11, @Nullable Double d11) {
            String str7;
            Context context2 = context;
            Restaurant restaurant2 = restaurant;
            String str8 = str6;
            Intrinsics.checkNotNullParameter(context2, "context");
            String str9 = str5;
            Intrinsics.checkNotNullParameter(str9, "defaultPayementMethod");
            Intrinsics.checkNotNullParameter(str8, "errorDetail");
            Bundle bundle = new Bundle();
            PolygonEvents polygonEvents = GlobalDataModel.POLYGON_TRACKING.polygonEvents;
            bundle.putString("locationAddress", getLocationAddress(context));
            String str10 = GlobalDataModel.SelectedCityName;
            boolean z12 = false;
            String str11 = "N/A";
            bundle.putString("locationCity", str10 == null || str10.length() == 0 ? str11 : GlobalDataModel.SelectedCityName);
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (polygonEvents != null) {
                bundle.putBoolean("floodActive", polygonEvents.isActive);
                bundle.putString("floodType", polygonEvents.eventType);
                bundle.putString("floodMessage", polygonEvents.eventMsg);
                bundle.putInt("floodValue", polygonEvents.eventValue);
            } else {
                bundle.putString("floodActive", str11);
                bundle.putString("floodType", str11);
                bundle.putString("floodMessage", str11);
                bundle.putString("floodValue", str11);
            }
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_DELIVERY_ADDRESS_STATUS, str11);
            bundle.putString("userOnlinePaymentMethods", str11);
            bundle.putString("shopPaymentMethods", getPaymentMethods(restaurant2));
            if (str5.length() == 0) {
                str9 = str11;
            }
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_ORDER_PAYMENT_METHOD_DEFAULT, str9);
            bundle.putString("orderPaymentMethod", str == null || str.length() == 0 ? str11 : str);
            bundle.putString("transactionId", str4 == null || str4.length() == 0 ? str11 : str4);
            String str12 = null;
            Integer valueOf = restaurant2 != null ? Integer.valueOf(restaurant2.f13872id) : null;
            StringBuilder sb2 = new StringBuilder();
            sb2.append(valueOf);
            bundle.putString("chainId", sb2.toString());
            bundle.putString("chainShops", str11);
            String str13 = restaurant2 != null ? restaurant2.f13873name : null;
            bundle.putString("chainName", str13 == null || str13.length() == 0 ? str11 : restaurant2 != null ? restaurant2.f13873name : null);
            String str14 = restaurant2 != null ? restaurant2.branchName : null;
            bundle.putString("shopName", str14 == null || str14.length() == 0 ? str11 : restaurant2 != null ? restaurant2.branchName : null);
            Integer valueOf2 = restaurant2 != null ? Integer.valueOf(restaurant2.branchId) : null;
            StringBuilder sb3 = new StringBuilder();
            sb3.append(valueOf2);
            bundle.putString("shopId", sb3.toString());
            if (str3 == null || str3.length() == 0) {
                str7 = str11;
            } else {
                str7 = str3.toLowerCase();
                Intrinsics.checkNotNullExpressionValue(str7, "this as java.lang.String).toLowerCase()");
            }
            bundle.putString("shopStatus", str7);
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_TRANSACTION_FAIL_REASON, str2 == null || str2.length() == 0 ? str11 : str2);
            bundle.putString("errorCode", String.valueOf(i11));
            bundle.putString("errorDetail", str8);
            bundle.putString("userOnlinePaymentMethods", "credit:" + getTalabatCreditBalance());
            String str15 = GlobalDataModel.ShopClickOrigin;
            Intrinsics.checkNotNullExpressionValue(str15, "ShopClickOrigin");
            if (str15.length() > 0) {
                z12 = true;
            }
            if (z12) {
                str11 = GlobalDataModel.ShopClickOrigin;
            }
            bundle.putString("shopClickOrigin", str11);
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_EXPEDITION_TYPE, "delivery");
            bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_CONTACTLESS_DELIVERY, z11 ? "contactless" : "regular");
            bundle.putString("deliveryProvider", pickupRiderDeliveryProvider(restaurant2));
            bundle.putString("orderPickup", String.valueOf(restaurant2 != null ? restaurant.isPickup() : null));
            if (restaurant2 != null) {
                str12 = restaurant2.deliveryTime;
            }
            bundle.putString("shopDeliveryTime", str12);
            if (d11 != null) {
                bundle.putDouble("riderTipValue", d11.doubleValue());
            }
            bundle.putString("shopDeliveryFee", String.valueOf(Cart.getInstance().getDeliveryCharges()));
            bundle.putString("surchargeValue", TalabatGTMKt.getSurchargeValue());
            bundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
            TalabatFirebase.Companion.dispatchEvent(context2, BnplOrderPaymentFailureEvent.EVENT_NAME, bundle);
        }

        public final void upSellingSliderShown(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void upsellCokeItemAddClicked(@NotNull Context context, @Nullable String str) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void upsellCokeSliderNavigated(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void verificationChangeSelected(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void verificationFailed(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void verificationPopupShown(@NotNull Context context, @Nullable String str) {
            boolean z11;
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLat", getLocationLongitude());
            String str3 = GlobalDataModel.SelectedCityName;
            boolean z12 = false;
            if (str3 == null || str3.length() == 0) {
                z11 = true;
            } else {
                z11 = false;
            }
            if (z11) {
                str2 = "N/A";
            } else {
                str2 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str2);
            bundle.putString("locationArea", getSelectedAreaId());
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (str == null || str.length() == 0) {
                z12 = true;
            }
            if (z12) {
                str = "N/A";
            }
            bundle.putString("shopId", str);
            bundle.putString("userId", getUserId());
            TalabatFirebase.Companion.dispatchEvent(context, "mobile_verification_shown", bundle);
        }

        public final void verificationSuccessful(@NotNull Context context, boolean z11) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        public final void verifyClicked(@NotNull Context context) {
            Intrinsics.checkNotNullParameter(context, "context");
        }

        @JvmOverloads
        public final void voucherRedeemFailed(@NotNull Context context, @Nullable String str, @Nullable String str2, @NotNull String str3, @Nullable Restaurant restaurant, @NotNull String str4) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str3, "message");
            String str5 = str4;
            Intrinsics.checkNotNullParameter(str5, BurnOptionDetailsNavigator.VOUCHER_OPTION_TYPE);
            voucherRedeemFailed$default(this, context, (String) null, str, str2, str3, restaurant, str5, 2, (Object) null);
        }

        @JvmOverloads
        public final void voucherRedeemFailed(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @NotNull String str4, @Nullable Restaurant restaurant, @NotNull String str5) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str4, "message");
            Intrinsics.checkNotNullParameter(str5, BurnOptionDetailsNavigator.VOUCHER_OPTION_TYPE);
            Bundle voucherBundle = getVoucherBundle(context, restaurant, str, str2, str3, str5);
            voucherBundle.putString(GrowthTrackerConstants.REJECTED_MEESSAGE, str4);
            TalabatFirebase.Companion.dispatchEvent(context, "order_coupon_failed", voucherBundle);
        }

        @JvmOverloads
        public final void voucherRedeemSuccess(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable Restaurant restaurant, @NotNull String str3) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str3, BurnOptionDetailsNavigator.VOUCHER_OPTION_TYPE);
            voucherRedeemSuccess$default(this, context, (String) null, str, str2, restaurant, str3, 2, (Object) null);
        }

        @JvmOverloads
        public final void voucherRedeemSuccess(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable Restaurant restaurant, @NotNull String str4) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str4, BurnOptionDetailsNavigator.VOUCHER_OPTION_TYPE);
            TalabatFirebase.Companion.dispatchEvent(context, "order_coupon_submitted", getVoucherBundle(context, restaurant, str, str2, str3, str4));
        }

        public final void voucherRemoved(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable Restaurant restaurant, @NotNull String str4) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(str4, BurnOptionDetailsNavigator.VOUCHER_OPTION_TYPE);
            TalabatFirebase.Companion.dispatchEvent(context, "order_coupon_removed", getVoucherBundle(context, restaurant, str, str2, str3, str4));
        }

        public final void vouchersLoadedSuccess(@NotNull Context context, @NotNull List<String> list, @Nullable Restaurant restaurant) {
            Intrinsics.checkNotNullParameter(context, "context");
            Intrinsics.checkNotNullParameter(list, GrowthTrackerConstants.VOUCHERS_FEATURE_NAME);
            Bundle bundle = new Bundle();
            TalabatGTM.Companion.commonVoucherData(bundle, context, restaurant);
            bundle.putString("offerVoucherId", CollectionsKt___CollectionsKt.joinToString$default(list, ",", (CharSequence) null, (CharSequence) null, 0, (CharSequence) null, (Function1) null, 62, (Object) null));
            TalabatFirebase.Companion.dispatchEvent(context, "offer_campaign_loaded", bundle);
        }

        public final void onJokerShopLoaded(@NotNull Context context, @Nullable String str, @Nullable Restaurant restaurant, boolean z11) {
            String str2;
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("jokerOffersShown", "true");
            bundle.putString("locationAddress", getLocationAddress(context));
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            String str3 = GlobalDataModel.SelectedCityName;
            boolean z12 = false;
            bundle.putString("locationCity", str3 == null || str3.length() == 0 ? "N/A" : GlobalDataModel.SelectedCityName);
            bundle.putString("shopId", String.valueOf(restaurant != null ? Integer.valueOf(restaurant.branchId) : null));
            if (restaurant == null || !restaurant.hasCusine()) {
                str2 = "N/A";
            } else {
                str2 = restaurant.GACuisineString();
            }
            bundle.putString("shopMainCuisine", str2);
            if (str == null || str.length() == 0) {
                z12 = true;
            }
            if (z12) {
                str = "N/A";
            }
            bundle.putString("jokerTimeLeft", str);
            if (z11) {
                bundle.putString("channel", "GEM");
            } else {
                bundle.putString("swimlaneTitle", "GEM");
            }
            TalabatFirebase.Companion.dispatchEvent(context, "joker_shop_loaded", bundle);
        }

        @NotNull
        @VisibleForTesting
        public final Bundle toBundle(@NotNull ImpressionProperties impressionProperties) {
            Intrinsics.checkNotNullParameter(impressionProperties, "<this>");
            Bundle bundle = new Bundle();
            bundle.putString("item_id", impressionProperties.getId());
            bundle.putString(FirebaseAnalytics.Param.ITEM_NAME, impressionProperties.getName());
            bundle.putString(FirebaseAnalytics.Param.ITEM_CATEGORY, impressionProperties.getCategory());
            bundle.putString(FirebaseAnalytics.Param.ITEM_BRAND, impressionProperties.getBrand());
            bundle.putString(FirebaseAnalytics.Param.ITEM_VARIANT, impressionProperties.getVariant());
            bundle.putInt(FirebaseAnalytics.Param.INDEX, impressionProperties.getPosition());
            return bundle;
        }

        public final void reorderClicked(@NotNull Context context, int i11, @Nullable String str, @Nullable String str2) {
            Intrinsics.checkNotNullParameter(context, "context");
            Bundle bundle = new Bundle();
            bundle.putString("locationAddress", getLocationAddress(context));
            String str3 = GlobalDataModel.SelectedCityName;
            bundle.putString("locationCity", str3 == null || str3.length() == 0 ? "N/A" : GlobalDataModel.SelectedCityName);
            bundle.putString("locationLat", getLocationLatitude());
            bundle.putString("locationLon", getLocationLongitude());
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            if (str == null) {
                str = "N/A";
            }
            bundle.putString("screenName", str);
            bundle.putString("userId", getUserId());
            StringBuilder sb2 = new StringBuilder();
            sb2.append(i11);
            bundle.putString("shopId", sb2.toString());
            if (str2 == null) {
                str2 = "N/A";
            }
            bundle.putString("screenType", str2);
            TalabatFirebase.Companion.dispatchEvent(context, "reorder_clicked", bundle);
        }

        private final Bundle toBundle(ProductTracking productTracking, String str, String str2) {
            Bundle bundle = new Bundle();
            bundle.putString("item_id", productTracking.getSku());
            bundle.putString(FirebaseAnalytics.Param.ITEM_NAME, productTracking.getName());
            bundle.putString(FirebaseAnalytics.Param.ITEM_CATEGORY, str);
            bundle.putString(FirebaseAnalytics.Param.ITEM_BRAND, str2);
            bundle.putString(FirebaseAnalytics.Param.PRICE, productTracking.getPrice());
            bundle.putString("currency", productTracking.getCurrency());
            bundle.putInt(FirebaseAnalytics.Param.INDEX, productTracking.getIndex());
            return bundle;
        }
    }

    public static /* synthetic */ String a(TalabatGTM talabatGTM, String str, String str2, int i11, Object obj) {
        if ((i11 & 1) != 0) {
            str2 = "N/A";
        }
        return talabatGTM.orDefault(str, str2);
    }

    private final String orDefault(String str, String str2) {
        if (str == null) {
            return str2;
        }
        if (!(str.length() > 0)) {
            str = null;
        }
        return str == null ? str2 : str;
    }

    public void onDarkstoresAddToCartClicked(@NotNull Context context, @Nullable String str, @Nullable String str2, @NotNull String str3, @NotNull String str4, @NotNull String str5, float f11, int i11, boolean z11, boolean z12, @Nullable String str6, @NotNull String str7, @Nullable String str8, @Nullable Integer num, int i12, @Nullable String str9, @Nullable Integer num2) {
        String str10;
        String str11;
        Context context2 = context;
        String str12 = str3;
        String str13 = str4;
        String str14 = str5;
        float f12 = f11;
        String str15 = str7;
        String str16 = str8;
        String str17 = str9;
        Intrinsics.checkNotNullParameter(context2, "context");
        Intrinsics.checkNotNullParameter(str12, "description");
        Intrinsics.checkNotNullParameter(str13, "sku");
        Intrinsics.checkNotNullParameter(str14, "name");
        Intrinsics.checkNotNullParameter(str15, "eventOrigin");
        Companion companion = Companion;
        Restaurant restaurantForDarkstores = companion.getRestaurantForDarkstores(str);
        Bundle bundle = new Bundle();
        bundle.putString("locationAddress", companion.getLocationAddress(context2));
        bundle.putString("locationLon", companion.getLocationLongitude());
        bundle.putString("locationLat", companion.getLocationLatitude());
        bundle.putString("locationCity", a(this, GlobalDataModel.SelectedCityName, (String) null, 1, (Object) null));
        bundle.putString("locationArea", companion.getSelectedAreaId());
        bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
        bundle.putString("shopName", a(this, restaurantForDarkstores != null ? restaurantForDarkstores.branchName : null, (String) null, 1, (Object) null));
        bundle.putString("shopArea", a(this, restaurantForDarkstores != null ? restaurantForDarkstores.areaName : null, (String) null, 1, (Object) null));
        bundle.putString("shopId", a(this, restaurantForDarkstores != null ? Integer.valueOf(restaurantForDarkstores.branchId).toString() : null, (String) null, 1, (Object) null));
        bundle.putString("userId", companion.getUserId());
        bundle.putString("chainName", a(this, restaurantForDarkstores != null ? restaurantForDarkstores.f13873name : null, (String) null, 1, (Object) null));
        bundle.putString("chainId", a(this, restaurantForDarkstores != null ? Integer.valueOf(restaurantForDarkstores.f13872id).toString() : null, (String) null, 1, (Object) null));
        bundle.putString("userTimeStamp", companion.getCurrentTime());
        bundle.putString("listingPageType", companion.listingType(restaurantForDarkstores));
        bundle.putString("deliveryProvider", companion.restaurantType(restaurantForDarkstores));
        bundle.putString("shopType", companion.listingType(restaurantForDarkstores));
        bundle.putString("shopClickOrigin", a(this, GlobalDataModel.ShopClickOrigin, (String) null, 1, (Object) null));
        bundle.putString("shopPaymentMethods", companion.getPaymentMethods(restaurantForDarkstores));
        bundle.putString("eventOrigin", str15);
        bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
        bundle.putString("productMandatoryChoicePreselected", "false");
        bundle.putString("productMandatoryChoiceQuantity", "0");
        bundle.putString("productOptionalChoiceQuantity", "0");
        bundle.putString("shopMainCuisine", a(this, restaurantForDarkstores != null ? restaurantForDarkstores.GACuisineString() : null, (String) null, 1, (Object) null));
        bundle.putString("categoryId", a(this, str2, (String) null, 1, (Object) null));
        bundle.putString(ProductTrackingProvider.DESCRIPTION, a(this, str12, (String) null, 1, (Object) null));
        bundle.putString("productSku", a(this, str13, (String) null, 1, (Object) null));
        bundle.putString(ProductTrackingProvider.NAME, a(this, str14, (String) null, 1, (Object) null));
        bundle.putString("screenName", a(this, str6, (String) null, 1, (Object) null));
        Integer valueOf = Integer.valueOf(i12);
        if (!(valueOf.intValue() != 0)) {
            valueOf = null;
        }
        if (valueOf != null) {
            str10 = valueOf.toString();
            str11 = null;
        } else {
            str11 = null;
            str10 = null;
        }
        bundle.putString(ProductTrackingProvider.AGE_LIMIT, a(this, str10, str11, 1, str11));
        bundle.putBoolean(ProductTrackingProvider.FAVOURITE, z11);
        bundle.putInt(ProductTrackingProvider.QUANTITY, i11);
        bundle.putFloat(ProductTrackingProvider.PRICE, f12);
        bundle.putFloat(ProductTrackingProvider.SALE_PRICE, f12);
        if (num2 != null) {
            bundle.putInt("productIndex", num2.intValue());
        }
        if (str17 != null) {
            bundle.putString("searchRequestId", str17);
        }
        if (str16 != null) {
            bundle.putString("swimlaneTitle", str16);
        }
        if (num != null) {
            bundle.putInt("swimlaneLength", num.intValue());
        }
        talabatFirebase.dispatchEvent(context2, z12 ? "add_to_cart" : "remove_from_cart", bundle);
    }

    public void onDarkstoresSearchResultsClicked(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3) {
        Intrinsics.checkNotNullParameter(context, "context");
        Bundle bundle = new Bundle();
        bundle.putString("screenName", a(this, str, (String) null, 1, (Object) null));
        bundle.putString("screenType", "search_details");
        bundle.putString("searchTerm", a(this, str2, (String) null, 1, (Object) null));
        bundle.putString("searchRequestId", a(this, str3, (String) null, 1, (Object) null));
        Companion companion = Companion;
        bundle.putString("locationAddress", companion.getLocationAddress(context));
        bundle.putString("locationLat", companion.getLocationLatitude());
        bundle.putString("locationLon", companion.getLocationLongitude());
        bundle.putString("locationCity", a(this, GlobalDataModel.SelectedCityName, (String) null, 1, (Object) null));
        bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
        bundle.putString("userId", companion.getUserId());
        bundle.putString("userTimeStamp", companion.getCurrentTime());
        bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
        talabatFirebase.dispatchEvent(context, SearchTracker.ITEM_CLICKED, bundle);
    }

    public void onDarkstoresSearchResultsLoaded(@NotNull Context context, @Nullable String str, @NotNull String str2, @NotNull String str3, @Nullable String str4, @NotNull List<String> list) {
        String str5;
        String str6;
        String str7;
        String str8;
        Context context2 = context;
        String str9 = str2;
        String str10 = str3;
        List<String> list2 = list;
        Intrinsics.checkNotNullParameter(context2, "context");
        Intrinsics.checkNotNullParameter(str9, "screenType");
        Intrinsics.checkNotNullParameter(str10, "query");
        Intrinsics.checkNotNullParameter(list2, "productsSkus");
        Companion companion = Companion;
        Restaurant restaurantForDarkstores = companion.getRestaurantForDarkstores(str);
        Bundle bundle = new Bundle();
        bundle.putString("locationAddress", companion.getLocationAddress(context2));
        bundle.putString("locationLat", companion.getLocationLatitude());
        bundle.putString("locationLon", companion.getLocationLongitude());
        bundle.putString("locationCity", a(this, GlobalDataModel.SelectedCityName, (String) null, 1, (Object) null));
        bundle.putString("locationArea", companion.getSelectedAreaId());
        bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
        if (restaurantForDarkstores != null) {
            str5 = restaurantForDarkstores.branchName;
        } else {
            str5 = null;
        }
        bundle.putString("shopName", a(this, str5, (String) null, 1, (Object) null));
        if (restaurantForDarkstores != null) {
            str6 = Integer.valueOf(restaurantForDarkstores.branchId).toString();
        } else {
            str6 = null;
        }
        bundle.putString("shopId", a(this, str6, (String) null, 1, (Object) null));
        if (restaurantForDarkstores != null) {
            str7 = Integer.valueOf(restaurantForDarkstores.f13872id).toString();
        } else {
            str7 = null;
        }
        bundle.putString("chainId", a(this, str7, (String) null, 1, (Object) null));
        if (restaurantForDarkstores != null) {
            str8 = restaurantForDarkstores.f13873name;
        } else {
            str8 = null;
        }
        bundle.putString("chainName", a(this, str8, (String) null, 1, (Object) null));
        bundle.putString("searchTerm", str10);
        bundle.putString("shopType", companion.listingType(restaurantForDarkstores));
        bundle.putString("screenType", str9);
        bundle.putString("searchRequestId", a(this, str4, (String) null, 1, (Object) null));
        bundle.putString("productSKU", a(this, CollectionsKt___CollectionsKt.joinToString$default(list2, ",", (CharSequence) null, (CharSequence) null, 0, (CharSequence) null, (Function1) null, 62, (Object) null), (String) null, 1, (Object) null));
        bundle.putInt("itemsNumber", list.size());
        talabatFirebase.dispatchEvent(context2, SearchTracker.RESULTS_LOADED, bundle);
    }

    public void onDarkstoresShopDetailsLoaded(@NotNull Context context, @Nullable String str, @Nullable String str2, boolean z11, @Nullable String str3) {
        String str4;
        boolean z12;
        String str5;
        String str6;
        Context context2 = context;
        Intrinsics.checkNotNullParameter(context, "context");
        Bundle bundle = new Bundle();
        Companion companion = Companion;
        Restaurant restaurantForDarkstores = companion.getRestaurantForDarkstores(str);
        String str7 = "N/A";
        if (restaurantForDarkstores != null) {
            bundle.putString("locationAddress", companion.getLocationAddress(context));
            bundle.putString("locationLat", companion.getLocationLatitude());
            bundle.putString("locationLon", companion.getLocationLongitude());
            String str8 = GlobalDataModel.SelectedCityName;
            boolean z13 = false;
            if (str8 == null || str8.length() == 0) {
                z12 = true;
            } else {
                z12 = false;
            }
            if (z12) {
                str5 = str7;
            } else {
                str5 = GlobalDataModel.SelectedCityName;
            }
            bundle.putString("locationCity", str5);
            bundle.putString("locationArea", companion.getSelectedAreaId());
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("shopSponsoring", RestaurantsEventsKt.sponsoringData(restaurantForDarkstores));
            bundle.putString("floodActive", str7);
            bundle.putString("floodType", str7);
            bundle.putString("floodMessage", str7);
            bundle.putString("floodValue", str7);
            bundle.putString("shopStatus", companion.getShopStatus(restaurantForDarkstores.statusType));
            bundle.putString("userOnlinePaymentMethods", str7);
            bundle.putString("shopPaymentMethods", companion.getPaymentMethods(restaurantForDarkstores));
            bundle.putString("userId", companion.getUserId());
            bundle.putString("screenType", "shop_details");
            bundle.putString("screenName", str7);
            bundle.putString("userTimeStamp", companion.getCurrentTime());
            bundle.putString("shopCategoryList", str7);
            bundle.putString("listingPageType", companion.listingType(restaurantForDarkstores));
            bundle.putString("deliveryProvider", companion.restaurantType(restaurantForDarkstores));
            bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
            bundle.putString("chainName", TalabatGTMKt.toAnalyticString(restaurantForDarkstores.f13873name));
            int i11 = restaurantForDarkstores.f13872id;
            StringBuilder sb2 = new StringBuilder();
            sb2.append(i11);
            bundle.putString("chainId", sb2.toString());
            bundle.putString("chainShops", str7);
            bundle.putString("shopName", TalabatGTMKt.toAnalyticString(restaurantForDarkstores.branchName));
            int i12 = restaurantForDarkstores.branchId;
            StringBuilder sb3 = new StringBuilder();
            sb3.append(i12);
            bundle.putString("shopId", sb3.toString());
            bundle.putString(ShopDetailsLoadedEvent.SHOP_COORDINATES, restaurantForDarkstores.getRestaurantLocation().getLatitude() + "," + restaurantForDarkstores.getRestaurantLocation().getLongitude());
            bundle.putString("shopArea", TalabatGTMKt.toAnalyticString(restaurantForDarkstores.areaName));
            bundle.putString(ShopDetailsLoadedEvent.SHOP_WITH_IMAGES, str7);
            bundle.putString("shopCategorySelected", str7);
            bundle.putString("shopWithOffer", companion.getShopOffer(restaurantForDarkstores));
            bundle.putString("shopClickOrigin", TalabatGTMKt.toAnalyticString(GlobalDataModel.ShopClickOrigin));
            bundle.putString("shopOfferType", companion.getOfferType(restaurantForDarkstores));
            bundle.putString("shopType", companion.listingType(restaurantForDarkstores));
            bundle.putString("shopCokeUpsell", String.valueOf(restaurantForDarkstores.isUpSelling));
            bundle.putString(ShopDetailsLoadedEvent.MENU_CATEGORY_NUMBER, "0");
            bundle.putString("itemsNumber", str7);
            bundle.putString(ShopDetailsLoadedEvent.ITEMS_PICTURE_NUMBER, str7);
            bundle.putString(ShopDetailsLoadedEvent.SHOP_RATING_QUALITY, String.valueOf(restaurantForDarkstores.getRating()));
            bundle.putString(ShopDetailsLoadedEvent.SHOP_RATING_QUANTITY, TalabatGTMKt.toAnalyticString(restaurantForDarkstores.getTotalRating()));
            if (restaurantForDarkstores.statusType == 0) {
                z13 = true;
            }
            bundle.putString(ShopDetailsLoadedEvent.SHOP_OPEN, String.valueOf(z13));
            bundle.putString(ShopDetailsLoadedEvent.SHOP_CLOSE_PREORDER, str7);
            bundle.putString(ShopDetailsLoadedEvent.SHOP_MINIMUM_ORDER_VALUE, String.valueOf(restaurantForDarkstores.getMinimumAmount()));
            bundle.putString("shopDeliveryTime", restaurantForDarkstores.deliveryTimeInteger.toString());
            bundle.putString("shopDeliveryFee", String.valueOf(restaurantForDarkstores.deliveryCharges));
            if (restaurantForDarkstores.hasCusine()) {
                str6 = restaurantForDarkstores.GACuisineString();
            } else {
                str6 = str7;
            }
            bundle.putString("shopMainCuisine", str6);
            bundle.putString("userOnlinePaymentMethods", "credit:" + companion.getTalabatCreditBalance());
        }
        if (str2 != null) {
            str4 = TalabatGTMKt.toAnalyticString(str2);
        } else {
            str4 = null;
        }
        bundle.putString("screenName", str4);
        bundle.putString(ShopDetailsLoadedEvent.CART_EMPTY, String.valueOf(z11));
        if (str3 != null) {
            str7 = str3;
        }
        bundle.putString("searchTerm", str7);
        talabatFirebase.dispatchEvent(context, ShopDetailsLoadedEvent.EVENT_NAME, bundle);
    }

    public void onSearchClosed(@NotNull Context context, @Nullable String str, @NotNull String str2, @Nullable String str3, int i11) {
        String str4;
        String str5;
        Intrinsics.checkNotNullParameter(context, "context");
        Intrinsics.checkNotNullParameter(str2, "query");
        Companion companion = Companion;
        Restaurant restaurantForDarkstores = companion.getRestaurantForDarkstores(str);
        Bundle bundle = new Bundle();
        if (restaurantForDarkstores != null) {
            str4 = Integer.valueOf(restaurantForDarkstores.branchId).toString();
        } else {
            str4 = null;
        }
        bundle.putString("shopId", a(this, str4, (String) null, 1, (Object) null));
        if (restaurantForDarkstores != null) {
            str5 = Integer.valueOf(restaurantForDarkstores.f13872id).toString();
        } else {
            str5 = null;
        }
        bundle.putString("chainId", a(this, str5, (String) null, 1, (Object) null));
        bundle.putString("searchTerm", a(this, str2, (String) null, 1, (Object) null));
        bundle.putString("shopType", companion.listingType(restaurantForDarkstores));
        bundle.putString("screenType", "search_details");
        bundle.putString("screenName", "search_details");
        bundle.putString("searchRequestId", a(this, str3, (String) null, 1, (Object) null));
        bundle.putInt("itemsNumber", i11);
        talabatFirebase.dispatchEvent(context, SearchTracker.CLOSED, bundle);
    }

    public void onSearchErrorShown(@NotNull Context context, @Nullable String str, @Nullable String str2, @Nullable String str3, @Nullable String str4) {
        Intrinsics.checkNotNullParameter(context, "context");
        Bundle bundle = new Bundle();
        bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
        Companion companion = Companion;
        bundle.putString("locationAddress", companion.getLocationAddress(context));
        bundle.putString("locationLat", companion.getLocationLatitude());
        bundle.putString("locationLon", companion.getLocationLongitude());
        bundle.putString("locationCity", a(this, GlobalDataModel.SelectedCityName, (String) null, 1, (Object) null));
        bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
        bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
        bundle.putString("errorMessage", "N/A");
        bundle.putString("userId", companion.getUserId());
        bundle.putString("screenType", a(this, str, (String) null, 1, (Object) null));
        bundle.putString("screenName", a(this, str2, (String) null, 1, (Object) null));
        bundle.putString("userTimeStamp", companion.getCurrentTime());
        bundle.putString("searchTerm", a(this, str3, (String) null, 1, (Object) null));
        bundle.putString(PurchaseInfo.REQUEST_ID, a(this, str4, (String) null, 1, (Object) null));
        talabatFirebase.dispatchEvent(context, SearchTracker.ERROR, bundle);
    }

    public void pushBNPLError(@NotNull Context context, @NotNull String str, @NotNull String str2, @NotNull String str3) {
        Intrinsics.checkNotNullParameter(context, "context");
        Intrinsics.checkNotNullParameter(str, "errorCode");
        Intrinsics.checkNotNullParameter(str2, "errorDescription");
        Intrinsics.checkNotNullParameter(str3, "eventName");
        Bundle access$getCommonBundle = Companion.getCommonBundle(context);
        access$getCommonBundle.putString("errorCode", str);
        access$getCommonBundle.putString("errorDetail", str2);
        talabatFirebase.dispatchEvent(context, str3, access$getCommonBundle);
    }

    public void pushBNPLFakeTestSubmitted(@NotNull Context context, boolean z11, boolean z12) {
        String str;
        Intrinsics.checkNotNullParameter(context, "context");
        Companion companion = Companion;
        Bundle access$getCommonBundle = companion.getCommonBundle(context);
        access$getCommonBundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartTotalPrice()));
        access$getCommonBundle.putString("userTimeStamp", companion.getCurrentTime());
        access$getCommonBundle.putString("userOnlinePaymentMethods", "N/A");
        Restaurant restaurant = Cart.getInstance().getRestaurant();
        if (restaurant != null) {
            str = Integer.valueOf(restaurant.shopType).toString();
        } else {
            str = null;
        }
        access$getCommonBundle.putString(BnplFakeTestSubmissionEventKt.ATTRIBUTE_KEY_VERTICAL, str);
        access$getCommonBundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
        access$getCommonBundle.putString("userTimeStamp", companion.getCurrentTime());
        access$getCommonBundle.putString("userOnlinePaymentMethods", "N/A");
        access$getCommonBundle.putString("surchargeValue", String.valueOf(Cart.getInstance().getAllRestaurantFees()));
        access$getCommonBundle.putString(BnplFakeTestSubmissionEventKt.ATTRIBUTE_KEY_BNPL_NOTIFY, String.valueOf(z11));
        access$getCommonBundle.putString(BnplFakeTestSubmissionEventKt.ATTRIBUTE_KEY_BNPL_FEEDBACK, String.valueOf(z12));
        access$getCommonBundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
        talabatFirebase.dispatchEvent(context, BnplFakeTestSubmissionEvent.EVENT_NAME, access$getCommonBundle);
    }

    public void pushBNPLLoaded(@NotNull Context context, @NotNull String str, @NotNull String str2) {
        Intrinsics.checkNotNullParameter(context, "context");
        Intrinsics.checkNotNullParameter(str, "errorCode");
        Intrinsics.checkNotNullParameter(str2, "errorDescription");
        Bundle access$getCommonBundle = Companion.getCommonBundle(context);
        access$getCommonBundle.putString("errorCode", str);
        access$getCommonBundle.putString("errorDetail", str2);
        talabatFirebase.dispatchEvent(context, BnplValidationErrorEvent.EVENT_NAME, access$getCommonBundle);
    }

    public void pushBNPLOrderPaymentFailureEvent(@NotNull Context context, @NotNull BNPLOrderPaymentFailureTrackingModel bNPLOrderPaymentFailureTrackingModel) {
        boolean z11;
        String str;
        String str2;
        String str3;
        Intrinsics.checkNotNullParameter(context, "context");
        Intrinsics.checkNotNullParameter(bNPLOrderPaymentFailureTrackingModel, "failureTrackingModel");
        Companion companion = Companion;
        Bundle access$getCommonBundle = companion.getCommonBundle(context);
        companion.addCommonPolygonData(access$getCommonBundle, bNPLOrderPaymentFailureTrackingModel.getPolygonEvents());
        companion.addCommonShopData(access$getCommonBundle, bNPLOrderPaymentFailureTrackingModel.getRestaurant());
        access$getCommonBundle.putString("shopPaymentMethods", companion.getPaymentMethods(bNPLOrderPaymentFailureTrackingModel.getRestaurant()) + ",bnpl");
        String defaultPaymentMethod = bNPLOrderPaymentFailureTrackingModel.getDefaultPaymentMethod();
        boolean z12 = false;
        if (defaultPaymentMethod == null || defaultPaymentMethod.length() == 0) {
            z11 = true;
        } else {
            z11 = false;
        }
        if (z11) {
            str = "N/A";
        } else {
            str = bNPLOrderPaymentFailureTrackingModel.getDefaultPaymentMethod();
        }
        access$getCommonBundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_ORDER_PAYMENT_METHOD_DEFAULT, str);
        access$getCommonBundle.putString("orderPaymentMethod", bNPLOrderPaymentFailureTrackingModel.getPaymentMethod());
        access$getCommonBundle.putString("transactionId", "N/A");
        String errorMessage = bNPLOrderPaymentFailureTrackingModel.getErrorMessage();
        if (errorMessage == null || errorMessage.length() == 0) {
            z12 = true;
        }
        if (z12) {
            str2 = "N/A";
        } else {
            str2 = bNPLOrderPaymentFailureTrackingModel.getErrorMessage();
        }
        access$getCommonBundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_TRANSACTION_FAIL_REASON, str2);
        access$getCommonBundle.putString("errorCode", bNPLOrderPaymentFailureTrackingModel.getErrorCode());
        access$getCommonBundle.putString("errorDetail", bNPLOrderPaymentFailureTrackingModel.getErrorDetail());
        access$getCommonBundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_EXPEDITION_TYPE, "delivery");
        if (bNPLOrderPaymentFailureTrackingModel.getContactlessEnabled()) {
            str3 = "contactless";
        } else {
            str3 = "regular";
        }
        access$getCommonBundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_CONTACTLESS_DELIVERY, str3);
        access$getCommonBundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_DELIVERY_ADDRESS_STATUS, "N/A");
        access$getCommonBundle.putString("userOnlinePaymentMethods", "credit:" + companion.getTalabatCreditBalance());
        talabatFirebase.dispatchEvent(context, BnplOrderPaymentFailureEvent.EVENT_NAME, access$getCommonBundle);
    }

    public void pushBNPLPlaceFakeOrder(@NotNull Context context, @NotNull String str) {
        String str2;
        Intrinsics.checkNotNullParameter(context, "context");
        Intrinsics.checkNotNullParameter(str, "screenName");
        Companion companion = Companion;
        Bundle access$getCommonBundle = companion.getCommonBundle(context);
        access$getCommonBundle.putString("screenName", str);
        access$getCommonBundle.putString("userTimeStamp", companion.getCurrentTime());
        access$getCommonBundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartTotalPrice()));
        access$getCommonBundle.putString("userTimeStamp", companion.getCurrentTime());
        Restaurant restaurant = Cart.getInstance().getRestaurant();
        if (restaurant != null) {
            str2 = Integer.valueOf(restaurant.shopType).toString();
        } else {
            str2 = null;
        }
        access$getCommonBundle.putString(BnplFakeTestSubmissionEventKt.ATTRIBUTE_KEY_VERTICAL, str2);
        access$getCommonBundle.putString("userTimeStamp", companion.getCurrentTime());
        access$getCommonBundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
        talabatFirebase.dispatchEvent(context, PlaceFakeOrderEvent.EVENT_NAME, access$getCommonBundle);
    }

    public void pushBeginCheckoutEvent(@NotNull Context context, @NotNull Cart cart, @NotNull String str, boolean z11, boolean z12, boolean z13) {
        String str2;
        String str3;
        boolean z14;
        String str4;
        Integer num;
        String str5;
        boolean z15;
        String str6;
        String str7;
        boolean z16;
        String str8;
        Integer num2;
        boolean z17;
        String str9;
        boolean z18;
        String str10;
        String str11;
        boolean z19;
        String str12;
        String str13;
        String str14;
        boolean z21;
        String str15;
        boolean z22;
        boolean z23;
        String str16;
        boolean z24;
        Context context2 = context;
        Intrinsics.checkNotNullParameter(context2, "context");
        Intrinsics.checkNotNullParameter(cart, "cart");
        String str17 = str;
        Intrinsics.checkNotNullParameter(str17, "defaultPaymentMethod");
        Bundle bundle = new Bundle();
        Restaurant restaurant = cart.getRestaurant();
        if (restaurant != null) {
            str2 = restaurant.branchName;
        } else {
            str2 = null;
        }
        Restaurant restaurant2 = cart.getRestaurant();
        PolygonEvents polygonEvents = GlobalDataModel.POLYGON_TRACKING.polygonEvents;
        ArrayList arrayList = new ArrayList();
        Iterator<CartMenuItem> it = Cart.getInstance().getCartItems().iterator();
        float f11 = 0.0f;
        while (true) {
            str3 = "N/A";
            if (!it.hasNext()) {
                break;
            }
            CartMenuItem next = it.next();
            Bundle bundle2 = new Bundle();
            String str18 = next.f13862name;
            if (str18 == null || str18.length() == 0) {
                z23 = true;
            } else {
                z23 = false;
            }
            if (z23) {
                str16 = str3;
            } else {
                str16 = next.f13862name;
            }
            bundle2.putString(FirebaseAnalytics.Param.ITEM_NAME, str16);
            bundle2.putString("item_id", String.valueOf(next.f13861id));
            bundle2.putString(FirebaseAnalytics.Param.ITEM_CATEGORY, String.valueOf(next.menuSectionId));
            bundle2.putString(FirebaseAnalytics.Param.PRICE, String.valueOf(next.getItemPrice()));
            if (str2 == null || str2.length() == 0) {
                z24 = true;
            } else {
                z24 = false;
            }
            if (!z24) {
                str3 = str2;
            }
            bundle2.putString(FirebaseAnalytics.Param.ITEM_BRAND, str3);
            try {
                f11 += next.getItemPrice();
            } catch (Exception e11) {
                e11.printStackTrace();
            }
            bundle2.putString(FirebaseAnalytics.Param.QUANTITY, String.valueOf(next.getQuantity()));
            bundle2.putString("currency", TalabatAdjust.getSelectedCurrencyCode());
            arrayList.add(bundle2);
        }
        bundle.putParcelableArrayList(FirebaseAnalytics.Param.ITEMS, arrayList);
        bundle.putDouble("value", (double) f11);
        Companion companion = Companion;
        bundle.putString("locationAddress", companion.getLocationAddress(context2));
        bundle.putString("locationLat", companion.getLocationLatitude());
        bundle.putString("locationLon", companion.getLocationLongitude());
        String str19 = GlobalDataModel.SelectedCityName;
        if (str19 == null || str19.length() == 0) {
            z14 = true;
        } else {
            z14 = false;
        }
        if (z14) {
            str4 = str3;
        } else {
            str4 = GlobalDataModel.SelectedCityName;
        }
        bundle.putString("locationCity", str4);
        bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
        bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
        if (polygonEvents != null) {
            bundle.putBoolean("floodActive", polygonEvents.isActive);
            bundle.putString("floodType", polygonEvents.eventType);
            bundle.putString("floodMessage", polygonEvents.eventMsg);
            bundle.putInt("floodValue", polygonEvents.eventValue);
        } else {
            bundle.putString("floodActive", str3);
            bundle.putString("floodType", str3);
            bundle.putString("floodMessage", str3);
            bundle.putString("floodValue", str3);
        }
        if (z11) {
            bundle.putString("floodMessage", "knet_down");
        } else if (z13) {
            bundle.putString("floodMessage", TalabatAdjust.getSelectedCountryIso() + " - Saved card deflection");
        }
        bundle.putString("userId", companion.getUserId());
        bundle.putString("screenType", "checkout");
        bundle.putString("screenName", str3);
        bundle.putString("userTimeStamp", companion.getCurrentTime());
        if (restaurant2 != null) {
            num = Integer.valueOf(restaurant2.f13872id);
        } else {
            num = null;
        }
        StringBuilder sb2 = new StringBuilder();
        sb2.append(num);
        bundle.putString("chainId", sb2.toString());
        bundle.putString("chainShops", str3);
        if (restaurant2 != null) {
            str5 = restaurant2.f13873name;
        } else {
            str5 = null;
        }
        if (str5 == null || str5.length() == 0) {
            z15 = true;
        } else {
            z15 = false;
        }
        if (z15) {
            str6 = str3;
        } else if (restaurant2 != null) {
            str6 = restaurant2.f13873name;
        } else {
            str6 = null;
        }
        bundle.putString("chainName", str6);
        if (restaurant2 != null) {
            str7 = restaurant2.areaName;
        } else {
            str7 = null;
        }
        if (str7 == null || str7.length() == 0) {
            z16 = true;
        } else {
            z16 = false;
        }
        if (z16) {
            str8 = str3;
        } else if (restaurant2 != null) {
            str8 = restaurant2.areaName;
        } else {
            str8 = null;
        }
        bundle.putString("shopArea", str8);
        if (restaurant2 != null) {
            num2 = Integer.valueOf(restaurant2.branchId);
        } else {
            num2 = null;
        }
        bundle.putString("shopId", String.valueOf(num2));
        bundle.putString("userOnlinePaymentMethods", str3);
        bundle.putString("shopPaymentMethods", companion.getPaymentMethods(restaurant2));
        if (str.length() > 0) {
            z17 = true;
        } else {
            z17 = false;
        }
        if (!z17) {
            str17 = str3;
        }
        bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_ORDER_PAYMENT_METHOD_DEFAULT, str17);
        bundle.putString("orderPaymentMethod", str3);
        if (restaurant2 != null) {
            str9 = restaurant2.branchName;
        } else {
            str9 = null;
        }
        if (str9 == null || str9.length() == 0) {
            z18 = true;
        } else {
            z18 = false;
        }
        if (z18) {
            str10 = str3;
        } else if (restaurant2 != null) {
            str10 = restaurant2.branchName;
        } else {
            str10 = null;
        }
        bundle.putString("shopName", str10);
        if (restaurant2 != null) {
            str11 = companion.getShopStatus(restaurant2.statusType);
        } else {
            str11 = str3;
        }
        bundle.putString("shopStatus", str11);
        bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
        bundle.putString(BnplOrderPaymentFailureEventKt.ATTRIBUTE_KEY_OTHERS_DELIVERY_ADDRESS_STATUS, str3);
        bundle.putString("orderPreorder", str3);
        bundle.putString("orderPickup", String.valueOf(cart.isPickup()));
        bundle.putString("userPreferences", str3);
        bundle.putString("shopOfferType", companion.getOfferType(restaurant2));
        bundle.putString("shopWithOffer", companion.getShopOffer(restaurant2));
        bundle.putString("listingPageType", companion.listingType(restaurant2));
        ArrayList<CartMenuItem> cartItems = Cart.getInstance().getCartItems();
        if (cartItems == null || cartItems.isEmpty()) {
            z19 = true;
        } else {
            z19 = false;
        }
        String str20 = "0";
        if (z19) {
            str12 = str20;
        } else {
            str12 = String.valueOf(Cart.getInstance().getCartItems().size());
        }
        bundle.putString(ProductTrackingProvider.QUANTITY, str12);
        if (cart.isPickup()) {
            str13 = cart.getDeliveryMode();
        } else {
            str13 = companion.restaurantTypeForOrderingExperience(restaurant2);
        }
        bundle.putString("deliveryProvider", str13);
        bundle.putString("shopType", companion.listingType(restaurant2));
        bundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
        bundle.putString("shopDeliveryFee", String.valueOf(restaurant2.deliveryCharges));
        bundle.putString("surchargeValue", TalabatGTMKt.getSurchargeValue());
        if (restaurant2.hasCusine()) {
            str14 = restaurant2.GACuisineString();
        } else {
            str14 = str3;
        }
        bundle.putString("shopMainCuisine", str14);
        String str21 = restaurant2.deliveryTime;
        if (str21 == null || str21.length() == 0) {
            z21 = true;
        } else {
            z21 = false;
        }
        if (z21) {
            str15 = str3;
        } else {
            str15 = restaurant2.deliveryTime;
        }
        bundle.putString("shopDeliveryTime", str15);
        if (companion.getRestaurantMenuSections().size() > 0) {
            str20 = String.valueOf(companion.getRestaurantMenuSections().size());
        }
        bundle.putString(ShopDetailsLoadedEvent.MENU_CATEGORY_NUMBER, str20);
        bundle.putString("userOnlinePaymentMethods", "credit:" + companion.getTalabatCreditBalance());
        bundle.putString("checkoutStep", String.valueOf(1));
        String str22 = GlobalDataModel.ShopClickOrigin;
        Intrinsics.checkNotNullExpressionValue(str22, "ShopClickOrigin");
        if (str22.length() > 0) {
            z22 = true;
        } else {
            z22 = false;
        }
        if (z22) {
            str3 = GlobalDataModel.ShopClickOrigin;
        }
        bundle.putString("shopClickOrigin", str3);
        bundle.putString(ShopDetailsLoadedEvent.OFFER_CAMPAIGN_ID, companion.getAppliedCampaignIds());
        companion.putAppliedVoucherData(bundle, Cart.getInstance());
        if (!z12) {
            bundle.putString("shopPaymentMethods", bundle.getString("shopPaymentMethods") + ",bnpl");
        }
        talabatFirebase.dispatchEvent(context2, FirebaseAnalytics.Event.BEGIN_CHECKOUT, bundle);
    }

    public void pushPaymentMethodChanged(@NotNull Context context, @NotNull String str, @NotNull String str2) {
        Intrinsics.checkNotNullParameter(context, "context");
        Intrinsics.checkNotNullParameter(str, "paymentMethod");
        Intrinsics.checkNotNullParameter(str2, "screenName");
        Companion companion = Companion;
        Bundle access$getCommonBundle = companion.getCommonBundle(context);
        access$getCommonBundle.putString("screenName", str2);
        access$getCommonBundle.putString("userTimeStamp", companion.getCurrentTime());
        access$getCommonBundle.putString("orderPaymentMethod", str);
        access$getCommonBundle.putString(PaymentMethodChangedEventKt.ATTRIBUTE_KEY_ORDER_PAYMENT_METHOD_CHANGED, "true");
        access$getCommonBundle.putString("shopDeliveryFee", String.valueOf(Cart.getInstance().getDeliveryCharges()));
        access$getCommonBundle.putString("surchargeValue", TalabatGTMKt.getSurchargeValue());
        access$getCommonBundle.putString("cartValue", String.valueOf(Cart.getInstance().getCartSubTotal()));
        talabatFirebase.dispatchEvent(context, PaymentMethodChangedEvent.EVENT_NAME, access$getCommonBundle);
    }

    public void pushRestaurantView(@NotNull Context context, @Nullable Restaurant restaurant, boolean z11, @Nullable String str, @Nullable ArrayList<MenuSection> arrayList, int i11, int i12, @Nullable String str2) {
        String str3;
        Context context2 = context;
        Restaurant restaurant2 = restaurant;
        Intrinsics.checkNotNullParameter(context, "context");
        PolygonEvents polygonEvents = GlobalDataModel.POLYGON_TRACKING.polygonEvents;
        Bundle bundle = new Bundle();
        if (restaurant2 != null) {
            Companion companion = Companion;
            bundle.putString("locationAddress", companion.getLocationAddress(context));
            bundle.putString("locationLat", companion.getLocationLatitude());
            bundle.putString("locationLon", companion.getLocationLongitude());
            bundle.putString("locationCity", TalabatGTMKt.toAnalyticString(GlobalDataModel.SelectedCityName));
            bundle.putString("locationArea", String.valueOf(GlobalDataModel.SelectedAreaId));
            bundle.putString("locationCountry", TalabatAdjust.getSelectedCountryIso());
            bundle.putString("shopSponsoring", RestaurantsEventsKt.sponsoringData(GlobalDataModel.SELECTED.getRestaurant()));
            String str4 = "N/A";
            if (polygonEvents != null) {
                bundle.putBoolean("floodActive", polygonEvents.isActive);
                bundle.putString("floodType", polygonEvents.eventType);
                bundle.putString("floodMessage", polygonEvents.eventMsg);
                bundle.putInt("floodValue", polygonEvents.eventValue);
            } else {
                bundle.putString("floodActive", str4);
                bundle.putString("floodType", str4);
                bundle.putString("floodMessage", str4);
                bundle.putString("floodValue", str4);
            }
            bundle.putString("shopStatus", companion.getShopStatus(restaurant2.statusType));
            bundle.putString("userOnlinePaymentMethods", str4);
            bundle.putString("shopPaymentMethods", companion.getPaymentMethods(restaurant));
            bundle.putString("userId", companion.getUserId());
            bundle.putString("screenType", "shop_details");
            bundle.putString("screenName", companion.getScreenName(restaurant2.shopType, "Menu Screen"));
            bundle.putString("userTimeStamp", companion.getCurrentTime());
            bundle.putString("shopCategoryList", TalabatGTMKt.toAnalyticString(str));
            bundle.putString("listingPageType", companion.listingType(restaurant));
            bundle.putString("deliveryProvider", companion.restaurantType(restaurant));
            bundle.putString("currencyCode", TalabatAdjust.getSelectedCurrencyCode());
            bundle.putString("chainName", TalabatGTMKt.toAnalyticString(restaurant2.f13873name));
            int i13 = restaurant2.f13872id;
            StringBuilder sb2 = new StringBuilder();
            sb2.append(i13);
            bundle.putString("chainId", sb2.toString());
            bundle.putString("chainShops", str4);
            bundle.putString("shopName", TalabatGTMKt.toAnalyticString(restaurant2.branchName));
            int i14 = restaurant2.branchId;
            StringBuilder sb3 = new StringBuilder();
            sb3.append(i14);
            bundle.putString("shopId", sb3.toString());
            bundle.putString(ShopDetailsLoadedEvent.SHOP_COORDINATES, restaurant.getRestaurantLocation().getLatitude() + "," + restaurant.getRestaurantLocation().getLongitude());
            bundle.putString("shopArea", TalabatGTMKt.toAnalyticString(restaurant2.areaName));
            bundle.putString(ShopDetailsLoadedEvent.SHOP_WITH_IMAGES, String.valueOf(z11));
            bundle.putString(ShopDetailsLoadedEvent.ITEMS_PICTURE_NUMBER, String.valueOf(i11));
            bundle.putString("shopCategorySelected", str4);
            bundle.putString("shopWithOffer", companion.getShopOffer(restaurant));
            bundle.putString("shopClickOrigin", TalabatGTMKt.toAnalyticString(GlobalDataModel.ShopClickOrigin));
            bundle.putString("shopOfferType", companion.getOfferType(restaurant));
            bundle.putString("shopType", companion.listingType(restaurant));
            bundle.putString("shopCokeUpsell", String.valueOf(restaurant2.isUpSelling));
            String str5 = "0";
            if (arrayList != null && arrayList.size() > 0) {
                str5 = String.valueOf(arrayList.size());
            }
            bundle.putString(ShopDetailsLoadedEvent.MENU_CATEGORY_NUMBER, str5);
            bundle.putString("itemsNumber", String.valueOf(i12));
            bundle.putString(ShopDetailsLoadedEvent.SHOP_RATING_QUALITY, String.valueOf(restaurant.getRating()));
            String totalRating = restaurant.getTotalRating();
            boolean z12 = false;
            if (totalRating == null || totalRating.length() == 0) {
                str3 = str4;
            } else {
                str3 = restaurant.getTotalRating();
            }
            bundle.putString(ShopDetailsLoadedEvent.SHOP_RATING_QUANTITY, str3);
            if (restaurant2.statusType == 0) {
                z12 = true;
            }
            bundle.putString(ShopDetailsLoadedEvent.SHOP_OPEN, String.valueOf(z12));
            bundle.putString(ShopDetailsLoadedEvent.SHOP_CLOSE_PREORDER, str4);
            bundle.putString(ShopDetailsLoadedEvent.SHOP_MINIMUM_ORDER_VALUE, String.valueOf(restaurant.getMinimumAmount()));
            bundle.putString("shopDeliveryTime", TalabatGTMKt.toAnalyticString(restaurant2.deliveryTimeInteger));
            bundle.putString("shopDeliveryFee", String.valueOf(restaurant2.deliveryCharges));
            if (restaurant.hasCusine()) {
                str4 = restaurant.GACuisineString();
            }
            bundle.putString("shopMainCuisine", str4);
            bundle.putString("userOnlinePaymentMethods", "credit:" + companion.getTalabatCreditBalance());
            bundle.putString(ShopDetailsLoadedEvent.OFFER_CAMPAIGN_ID, companion.getCampaignIds());
            bundle.putString("searchTerm", str2);
            talabatFirebase.dispatchEvent(context, ShopDetailsLoadedEvent.EVENT_NAME, bundle);
        }
    }

    public void subscriptionVerificationEvent(@NotNull Context context, @NotNull String str, @NotNull String str2, @NotNull String str3, @NotNull String str4, @NotNull String str5, @Nullable String str6, @Nullable String str7, @Nullable String str8) {
        Intrinsics.checkNotNullParameter(context, "context");
        Intrinsics.checkNotNullParameter(str, "eventName");
        Intrinsics.checkNotNullParameter(str2, "channel");
        Intrinsics.checkNotNullParameter(str3, "eventOrigin");
        Intrinsics.checkNotNullParameter(str4, "screenName");
        Intrinsics.checkNotNullParameter(str5, "screenType");
        Bundle bundle = new Bundle();
        bundle.putString("channel", str2);
        bundle.putString("screenType", str5);
        bundle.putString("screenName", str4);
        bundle.putString("eventOrigin", str3);
        if (str6 != null) {
            bundle.putString("subscriptionType", str6);
        }
        if (str7 != null) {
            bundle.putString("failReason", str7);
        }
        if (str8 != null) {
            bundle.putString("mobileVerificationStatus", str8);
        }
        TalabatFirebase.Companion.dispatchEvent(context, str, bundle);
    }
}
